{
  "url": "https://api.github.com/repos/shap/shap/issues/672",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/672/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/672/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/672/events",
  "html_url": "https://github.com/shap/shap/issues/672",
  "id": 462646278,
  "node_id": "MDU6SXNzdWU0NjI2NDYyNzg=",
  "number": 672,
  "title": "CNN model not including Dense layer cannot run GradientExplainer",
  "user": {
    "login": "serengil",
    "id": 18491038,
    "node_id": "MDQ6VXNlcjE4NDkxMDM4",
    "avatar_url": "https://avatars.githubusercontent.com/u/18491038?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/serengil",
    "html_url": "https://github.com/serengil",
    "followers_url": "https://api.github.com/users/serengil/followers",
    "following_url": "https://api.github.com/users/serengil/following{/other_user}",
    "gists_url": "https://api.github.com/users/serengil/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/serengil/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/serengil/subscriptions",
    "organizations_url": "https://api.github.com/users/serengil/orgs",
    "repos_url": "https://api.github.com/users/serengil/repos",
    "events_url": "https://api.github.com/users/serengil/events{/privacy}",
    "received_events_url": "https://api.github.com/users/serengil/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2019-07-01T10:52:46Z",
  "updated_at": "2019-07-01T10:52:46Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "A CNN model derived form VGG-Face cannot be explained by SHAP. I think this exception comes from not having dense layer in the final layers.\r\n\r\n```python\r\nmodel = Sequential()\r\nmodel.add(ZeroPadding2D((1,1),input_shape=(224,224, 3)))\r\nmodel.add(Convolution2D(64, (3, 3), activation='relu'))\r\nmodel.add(ZeroPadding2D((1,1)))\r\nmodel.add(Convolution2D(64, (3, 3), activation='relu'))\r\nmodel.add(MaxPooling2D((2,2), strides=(2,2)))\r\n\r\nmodel.add(ZeroPadding2D((1,1)))\r\nmodel.add(Convolution2D(128, (3, 3), activation='relu'))\r\nmodel.add(ZeroPadding2D((1,1)))\r\nmodel.add(Convolution2D(128, (3, 3), activation='relu'))\r\nmodel.add(MaxPooling2D((2,2), strides=(2,2)))\r\n\r\nmodel.add(ZeroPadding2D((1,1)))\r\nmodel.add(Convolution2D(256, (3, 3), activation='relu'))\r\nmodel.add(ZeroPadding2D((1,1)))\r\nmodel.add(Convolution2D(256, (3, 3), activation='relu'))\r\nmodel.add(ZeroPadding2D((1,1)))\r\nmodel.add(Convolution2D(256, (3, 3), activation='relu'))\r\nmodel.add(MaxPooling2D((2,2), strides=(2,2)))\r\n\r\nmodel.add(ZeroPadding2D((1,1)))\r\nmodel.add(Convolution2D(512, (3, 3), activation='relu'))\r\nmodel.add(ZeroPadding2D((1,1)))\r\nmodel.add(Convolution2D(512, (3, 3), activation='relu'))\r\nmodel.add(ZeroPadding2D((1,1)))\r\nmodel.add(Convolution2D(512, (3, 3), activation='relu'))\r\nmodel.add(MaxPooling2D((2,2), strides=(2,2)))\r\n\r\nmodel.add(ZeroPadding2D((1,1)))\r\nmodel.add(Convolution2D(512, (3, 3), activation='relu'))\r\nmodel.add(ZeroPadding2D((1,1)))\r\nmodel.add(Convolution2D(512, (3, 3), activation='relu'))\r\nmodel.add(ZeroPadding2D((1,1)))\r\nmodel.add(Convolution2D(512, (3, 3), activation='relu'))\r\nmodel.add(MaxPooling2D((2,2), strides=(2,2)))\r\n\r\nmodel.add(Convolution2D(4096, (7, 7), activation='relu'))\r\nmodel.add(Dropout(0.5))\r\nmodel.add(Convolution2D(4096, (1, 1), activation='relu'))\r\nmodel.add(Dropout(0.5))\r\n\r\nmodel.add(Convolution2D(2, (1, 1), activation='relu'))\r\nmodel.add(Flatten())\r\nmodel.add(Activation('softmax'))\r\n```\r\n\r\nPre-trained weights are available as well\r\n\r\n```\r\n# Ref: https://drive.google.com/file/d/1wUXRVlbsni2FN9-jkS_f4UTUrm1bRLyk/view?usp=sharing\r\nmodel.load_weights('gender_model_weights.h5')\r\n```\r\n\r\nFor this defined model I can apply predictions\r\n\r\n`predictions = model.predict(features)`\r\n\r\nHowever, when I apply gradient explainer for this model, it returns the following exception.\r\n\r\n> TypeError                                 Traceback (most recent call last)\r\n> <ipython-input-61-eaee8aca5dbe> in <module>\r\n>       2     (model.layers[layer].input, model.layers[-1].output),\r\n>       3     map2layer(features, layer),\r\n> ----> 4     local_smoothing=0 # std dev of smoothing noise\r\n>       5 )\r\n> \r\n> ~/.local/lib/python3.6/site-packages/shap/explainers/gradient.py in __init__(self, model, data, session, batch_size, local_smoothing)\r\n>      69 \r\n>      70         if framework == 'tensorflow':\r\n> ---> 71             self.explainer = _TFGradientExplainer(model, data, session, batch_size, local_smoothing)\r\n>      72         elif framework == 'pytorch':\r\n>      73             self.explainer = _PyTorchGradientExplainer(model, data, batch_size, local_smoothing)\r\n> \r\n> ~/.local/lib/python3.6/site-packages/shap/explainers/gradient.py in __init__(self, model, data, session, batch_size, local_smoothing)\r\n>     186             self.gradients = [None]\r\n>     187         else:\r\n> --> 188             self.gradients = [None for i in range(self.model_output.shape[1])]\r\n>     189 \r\n>     190     def gradient(self, i):\r\n> \r\n> TypeError: __index__ returned non-int (type NoneType)\r\n\r\nReally, final layer's output shape seems None. I can check it by running the following command.\r\n\r\n`model.layers[-1].output.shape`\r\n\r\nThis returns this output\r\n\r\n> TensorShape([Dimension(None), Dimension(None)])\r\n\r\nSHAP should explain this model because it is really valid and make predictions.\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/672/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/672/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
