{
  "url": "https://api.github.com/repos/shap/shap/issues/1165",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1165/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1165/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1165/events",
  "html_url": "https://github.com/shap/shap/issues/1165",
  "id": 602244093,
  "node_id": "MDU6SXNzdWU2MDIyNDQwOTM=",
  "number": 1165,
  "title": "Unexpectedly found an instance of type `<class 'numpy.ndarray'>`. Expected a symbolic tensor instance.",
  "user": {
    "login": "kbmlcoding",
    "id": 57009288,
    "node_id": "MDQ6VXNlcjU3MDA5Mjg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/57009288?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kbmlcoding",
    "html_url": "https://github.com/kbmlcoding",
    "followers_url": "https://api.github.com/users/kbmlcoding/followers",
    "following_url": "https://api.github.com/users/kbmlcoding/following{/other_user}",
    "gists_url": "https://api.github.com/users/kbmlcoding/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kbmlcoding/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kbmlcoding/subscriptions",
    "organizations_url": "https://api.github.com/users/kbmlcoding/orgs",
    "repos_url": "https://api.github.com/users/kbmlcoding/repos",
    "events_url": "https://api.github.com/users/kbmlcoding/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kbmlcoding/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-04-17T21:29:18Z",
  "updated_at": "2020-06-01T23:29:57Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I was trying to just run notebook at https://slundberg.github.io/shap/notebooks/deep_explainer/Keras%20LSTM%20for%20IMDB%20Sentiment%20Classification.html\r\n\r\nbut i am getting below error for DeepExapliner\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n/usr/local/lib/python3.6/dist-packages/keras/engine/base_layer.py in assert_input_compatibility(self, inputs)\r\n    309             try:\r\n--> 310                 K.is_keras_tensor(x)\r\n    311             except ValueError:\r\n\r\n6 frames\r\n/usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py in is_keras_tensor(x)\r\n    696         raise ValueError('Unexpectedly found an instance of type `' +\r\n--> 697                          str(type(x)) + '`. '\r\n    698                          'Expected a symbolic tensor instance.')\r\n\r\nValueError: Unexpectedly found an instance of type `<class 'numpy.ndarray'>`. Expected a symbolic tensor instance.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-22-c9359080a29b> in <module>()\r\n      6 print(type(background))\r\n      7 # explain predictions of the model on three images\r\n----> 8 e = shap.DeepExplainer(model, background)\r\n      9 # # ...or pass tensors directly\r\n     10 # # e = shap.DeepExplainer((model.layers[0].input, model.layers[-1].output), background)\r\n\r\n/usr/local/lib/python3.6/dist-packages/shap/explainers/deep/__init__.py in __init__(self, model, data, session, learning_phase_flags)\r\n     78 \r\n     79         if framework == 'tensorflow':\r\n---> 80             self.explainer = TFDeepExplainer(model, data, session, learning_phase_flags)\r\n     81         elif framework == 'pytorch':\r\n     82             self.explainer = PyTorchDeepExplainer(model, data)\r\n\r\n/usr/local/lib/python3.6/dist-packages/shap/explainers/deep/deep_tf.py in __init__(self, model, data, session, learning_phase_flags)\r\n    152                 if type(self.model)is tuple:\r\n    153                     sel.fModel(cnn.inputs, cnn.get_layer(theNameYouWant).outputs)\r\n--> 154                 self.expected_value = tf.reduce_mean(self.model(self.data), 0)\r\n    155 \r\n    156         if not tf.executing_eagerly():\r\n\r\n/usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py in symbolic_fn_wrapper(*args, **kwargs)\r\n     73         if _SYMBOLIC_SCOPE.value:\r\n     74             with get_graph().as_default():\r\n---> 75                 return func(*args, **kwargs)\r\n     76         else:\r\n     77             return func(*args, **kwargs)\r\n\r\n/usr/local/lib/python3.6/dist-packages/keras/engine/base_layer.py in __call__(self, inputs, **kwargs)\r\n    470             # Raise exceptions in case the input is not compatible\r\n    471             # with the input_spec set at build time.\r\n--> 472             self.assert_input_compatibility(inputs)\r\n    473 \r\n    474             # Handle mask propagation.\r\n\r\n/usr/local/lib/python3.6/dist-packages/keras/engine/base_layer.py in assert_input_compatibility(self, inputs)\r\n    314                                  'Received type: ' +\r\n    315                                  str(type(x)) + '. Full input: ' +\r\n--> 316                                  str(inputs) + '. All inputs to the layer '\r\n    317                                  'should be tensors.')\r\n    318 \r\n\r\nValueError: Layer sequential_4 was called with an input that isn't a symbolic tensor. Received type: <class 'numpy.ndarray'>. Full input: [array([[[[0.],\r\n         [0.],",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1165/reactions",
    "total_count": 3,
    "+1": 3,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1165/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
