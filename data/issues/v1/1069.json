{
  "url": "https://api.github.com/repos/shap/shap/issues/1069",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1069/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1069/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1069/events",
  "html_url": "https://github.com/shap/shap/issues/1069",
  "id": 571737201,
  "node_id": "MDU6SXNzdWU1NzE3MzcyMDE=",
  "number": 1069,
  "title": "Summary plot, multiclass - feature ordering and global shap value ordering are different",
  "user": {
    "login": "RandallJEllis",
    "id": 7551835,
    "node_id": "MDQ6VXNlcjc1NTE4MzU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/7551835?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/RandallJEllis",
    "html_url": "https://github.com/RandallJEllis",
    "followers_url": "https://api.github.com/users/RandallJEllis/followers",
    "following_url": "https://api.github.com/users/RandallJEllis/following{/other_user}",
    "gists_url": "https://api.github.com/users/RandallJEllis/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/RandallJEllis/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/RandallJEllis/subscriptions",
    "organizations_url": "https://api.github.com/users/RandallJEllis/orgs",
    "repos_url": "https://api.github.com/users/RandallJEllis/repos",
    "events_url": "https://api.github.com/users/RandallJEllis/events{/privacy}",
    "received_events_url": "https://api.github.com/users/RandallJEllis/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-02-27T00:09:52Z",
  "updated_at": "2020-02-27T03:03:08Z",
  "closed_at": "2020-02-27T03:02:36Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "In https://github.com/slundberg/shap/blob/master/shap/plots/summary.py, for the multiclass case, line 191 creates the feature ordering for plotting, and line 441 calculates global shap values for each class. Here is line 191 for feature ordering: \r\n\r\n```\r\nif multi_class:\r\n            feature_order = np.argsort(np.sum(np.mean(np.abs(shap_values), axis=0), axis=0))\r\n```\r\n\r\nThe operations inside the argsort expression give different **and** differently ordered outputs than the summed outputs of this line: \r\n\r\n```\r\nfor i, ind in enumerate(class_inds):\r\n            global_shap_values = np.abs(shap_values[ind]).mean(0)\r\n```\r\n\r\nThe summed outputs seen in the stacked bar plot in the same loop are not equal to the output of the expression inside of np.argsort above:\r\n\r\n```\r\nfor i, ind in enumerate(class_inds):\r\n            global_shap_values = np.abs(shap_values[ind]).mean(0)\r\n            pl.barh(\r\n                y_pos, global_shap_values[feature_inds], 0.7, left=left_pos, align='center',\r\n                color=color(i), label=class_names[ind]\r\n            )\r\n            left_pos += global_shap_values[feature_inds]\r\n```\r\n\r\nHere is a reproducible example, with two classes:\r\n\r\n```\r\nshap_values = [array([[ 0.000125, -0.00025 ,  0.001312,  0.00025 , -0.001625,  0.007125, -0.00025 ,  0.000125,  0.00025 ,  0.001312,\r\n         0.007125, -0.001625],\r\n       [ 0.000125, -0.00075 ,  0.000375, -0.00225 , -0.000625, -0.000125, -0.00075 ,  0.000125, -0.00225 ,  0.000375,\r\n        -0.000125, -0.000625],\r\n       [-0.000875, -0.00025 ,  0.000375,  0.00025 , -0.000625, -0.000125, -0.00025 , -0.000875,  0.00025 ,  0.000375,\r\n        -0.000125, -0.000625],\r\n       [ 0.000125, -0.00025 ,  0.000375,  0.00025 , -0.001625,  0.002375, -0.00025 ,  0.000125,  0.00025 ,  0.000375,\r\n         0.002375, -0.001625],\r\n       [ 0.000125, -0.00025 ,  0.000375,  0.00075 , -0.001625, -0.000125, -0.00025 ,  0.000125,  0.00075 ,  0.000375,\r\n        -0.000125, -0.001625],\r\n       [-0.000875, -0.00025 ,  0.000375,  0.00025 , -0.001625, -0.000125, -0.00025 , -0.000875,  0.00025 ,  0.000375,\r\n        -0.000125, -0.001625],\r\n       [-0.000875, -0.00025 ,  0.001312,  0.00075 , -0.000625, -0.000375, -0.00025 , -0.000875,  0.00075 ,  0.001312,\r\n        -0.000375, -0.000625],\r\n       [ 0.000125, -0.00025 ,  0.001312,  0.00025 , -0.001625, -0.000375, -0.00025 ,  0.000125,  0.00025 ,  0.001312,\r\n        -0.000375, -0.001625],\r\n       [ 0.000125, -0.00075 ,  0.001312, -0.00225 , -0.000625, -0.000375, -0.00075 ,  0.000125, -0.00225 ,  0.001312,\r\n        -0.000375, -0.000625],\r\n       [ 0.000125, -0.00025 ,  0.000375,  0.00025 , -0.000625, -0.000125, -0.00025 ,  0.000125,  0.00025 ,  0.000375,\r\n        -0.000125, -0.000625]]), array([[-0.000125,  0.00025 , -0.001312, -0.00025 ,  0.001625, -0.007125,  0.00025 , -0.000125, -0.00025 , -0.001312,\r\n        -0.007125,  0.001625],\r\n       [-0.000125,  0.00075 , -0.000375,  0.00225 ,  0.000625,  0.000125,  0.00075 , -0.000125,  0.00225 , -0.000375,\r\n         0.000125,  0.000625],\r\n       [ 0.000875,  0.00025 , -0.000375, -0.00025 ,  0.000625,  0.000125,  0.00025 ,  0.000875, -0.00025 , -0.000375,\r\n         0.000125,  0.000625],\r\n       [-0.000125,  0.00025 , -0.000375, -0.00025 ,  0.001625, -0.002375,  0.00025 , -0.000125, -0.00025 , -0.000375,\r\n        -0.002375,  0.001625],\r\n       [-0.000125,  0.00025 , -0.000375, -0.00075 ,  0.001625,  0.000125,  0.00025 , -0.000125, -0.00075 , -0.000375,\r\n         0.000125,  0.001625],\r\n       [ 0.000875,  0.00025 , -0.000375, -0.00025 ,  0.001625,  0.000125,  0.00025 ,  0.000875, -0.00025 , -0.000375,\r\n         0.000125,  0.001625],\r\n       [ 0.000875,  0.00025 , -0.001312, -0.00075 ,  0.000625,  0.000375,  0.00025 ,  0.000875, -0.00075 , -0.001312,\r\n         0.000375,  0.000625],\r\n       [-0.000125,  0.00025 , -0.001312, -0.00025 ,  0.001625,  0.000375,  0.00025 , -0.000125, -0.00025 , -0.001312,\r\n         0.000375,  0.001625],\r\n       [-0.000125,  0.00075 , -0.001312,  0.00225 ,  0.000625,  0.000375,  0.00075 , -0.000125,  0.00225 , -0.001312,\r\n         0.000375,  0.000625],\r\n       [-0.000125,  0.00025 , -0.000375, -0.00025 ,  0.000625,  0.000125,  0.00025 , -0.000125, -0.00025 , -0.000375,\r\n         0.000125,  0.000625]])]\r\n\r\nshap.summary_plot(shap_values, plot_type=\"bar\")\r\n```\r\n\r\nTake note of the values of the bars on the x-axis. Now, let's check the orderings and values in lines 191 and 441, taking sums with line 441:\r\n\r\n```\r\n#line 191\r\nfeature_order = np.argsort(np.sum(np.mean(np.abs(shap_values), axis=0), axis=0))\r\nfeature_order_values = np.sort(np.sum(np.mean(np.abs(shap_values), axis=0), axis=0))\r\n\r\n#line 441\r\nglobal_shap_order = np.argsort(np.abs(shap_values[0]).mean(0) + np.abs(shap_values[1]).mean(0))\r\nglobal_shap_values = np.sort(np.abs(shap_values[0]).mean(0) + np.abs(shap_values[1]).mean(0))\r\n```\r\n\r\nCheck the equality of feature_order and global_shap_order:\r\n```\r\nnp.array_equal(feature_order, global_shap_order)\r\n```\r\n\r\nThis outputs false, and printing the values themselves show that global_shap_values matches the bar plot values, but the feature_order_values are much higher:\r\n```\r\nprint(feature_order_values, '\\n', global_shap_values)\r\n```",
  "closed_by": {
    "login": "slundberg",
    "id": 3740613,
    "node_id": "MDQ6VXNlcjM3NDA2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3740613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slundberg",
    "html_url": "https://github.com/slundberg",
    "followers_url": "https://api.github.com/users/slundberg/followers",
    "following_url": "https://api.github.com/users/slundberg/following{/other_user}",
    "gists_url": "https://api.github.com/users/slundberg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slundberg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slundberg/subscriptions",
    "organizations_url": "https://api.github.com/users/slundberg/orgs",
    "repos_url": "https://api.github.com/users/slundberg/repos",
    "events_url": "https://api.github.com/users/slundberg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slundberg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1069/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1069/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
