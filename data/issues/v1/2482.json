{
  "url": "https://api.github.com/repos/shap/shap/issues/2482",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/2482/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/2482/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/2482/events",
  "html_url": "https://github.com/shap/shap/issues/2482",
  "id": 1194730774,
  "node_id": "I_kwDOBHDcK85HNiUW",
  "number": 2482,
  "title": "\"Additivity check failed in TreeExplainer\" Fixed by Running in Batches",
  "user": {
    "login": "RyanWendt",
    "id": 14363769,
    "node_id": "MDQ6VXNlcjE0MzYzNzY5",
    "avatar_url": "https://avatars.githubusercontent.com/u/14363769?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/RyanWendt",
    "html_url": "https://github.com/RyanWendt",
    "followers_url": "https://api.github.com/users/RyanWendt/followers",
    "following_url": "https://api.github.com/users/RyanWendt/following{/other_user}",
    "gists_url": "https://api.github.com/users/RyanWendt/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/RyanWendt/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/RyanWendt/subscriptions",
    "organizations_url": "https://api.github.com/users/RyanWendt/orgs",
    "repos_url": "https://api.github.com/users/RyanWendt/repos",
    "events_url": "https://api.github.com/users/RyanWendt/events{/privacy}",
    "received_events_url": "https://api.github.com/users/RyanWendt/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-04-06T14:54:23Z",
  "updated_at": "2022-04-06T14:54:23Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I was getting the above error when using the TreeExplainer and the default \"tree_path_dependent\" option with a Scikit-Learn Gradient Boosting binary classification model. I have found a work around to the problem for my code obtaining the shap values from the feature set in more manageable 1 million at a time batches. I'm not sure what's happening on the back end of the shap_values function, but it looks like the shap values fail to calculate properly when the dataset fed into it in one function call is too large.  I wanted to post this writeup to help others and also to hopefully bring it to the author's attention to potentially patch.\r\n\r\nSome of the other issue threads I've seen on this topic recommend switching to the \"interventional\" option to fix. However, this was not a practical solution for me largely due to performance constraints among others. Moreover, when turning off the additivity check, it was clear that the additivity numbers really were way off the model's prediction (I calculated this by summing the shap values by row, adding the expected value and comparing this against the model's predicted probability with a logit transformation to get the log odds value). After implementing the above work around I performed the same check again, and the numbers matched (after rounding by a few decimal places).",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/2482/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/2482/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
