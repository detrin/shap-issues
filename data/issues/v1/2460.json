{
  "url": "https://api.github.com/repos/shap/shap/issues/2460",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/2460/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/2460/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/2460/events",
  "html_url": "https://github.com/shap/shap/issues/2460",
  "id": 1181374920,
  "node_id": "I_kwDOBHDcK85GalnI",
  "number": 2460,
  "title": "Setting algorithm to \"auto\" in shap.Explainer() class throws error due to missing masker",
  "user": {
    "login": "navdeep-G",
    "id": 10055668,
    "node_id": "MDQ6VXNlcjEwMDU1NjY4",
    "avatar_url": "https://avatars.githubusercontent.com/u/10055668?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/navdeep-G",
    "html_url": "https://github.com/navdeep-G",
    "followers_url": "https://api.github.com/users/navdeep-G/followers",
    "following_url": "https://api.github.com/users/navdeep-G/following{/other_user}",
    "gists_url": "https://api.github.com/users/navdeep-G/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/navdeep-G/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/navdeep-G/subscriptions",
    "organizations_url": "https://api.github.com/users/navdeep-G/orgs",
    "repos_url": "https://api.github.com/users/navdeep-G/repos",
    "events_url": "https://api.github.com/users/navdeep-G/events{/privacy}",
    "received_events_url": "https://api.github.com/users/navdeep-G/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-03-26T00:07:32Z",
  "updated_at": "2023-06-14T13:09:32Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "* The following code:\r\n\r\n```\r\nimport pandas as pd\r\n\r\ndf = pd.read_csv(os.path.join(MLIBRARY_HOME, \"tests/data/creditcard.csv\"))\r\ntarget_col = \"default payment next month\"\r\nX,y = df.drop(target_col,axis=1), df[target_col]\r\n\r\ngradient_booster = GradientBoostingClassifier(learning_rate=0.1)\r\ngradient_booster.fit(X, y)\r\n\r\nexplainer= shap.Explainer(model=gradient_booster.predict, output_names=list(X.columns))\r\n\r\nexplainer(X)\r\n```\r\n\r\nleads to the following error:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nInput In [4], in <cell line: 14>()\r\n     10 gradient_booster.fit(X, y)\r\n     12 explainer = shap.Explainer(model=gradient_booster.predict, output_names=list(X.columns))\r\n---> 14 explainer(X)\r\n\r\nFile ~/Desktop/mli-2/env_38/lib/python3.8/site-packages/shap/explainers/_permutation.py:74, in Permutation.__call__(self, max_evals, main_effects, error_bounds, batch_size, outputs, silent, *args)\r\n     70 def __call__(self, *args, max_evals=500, main_effects=False, error_bounds=False, batch_size=\"auto\",\r\n     71              outputs=None, silent=False):\r\n     72     \"\"\" Explain the output of the model on the given arguments.\r\n     73     \"\"\"\r\n---> 74     return super().__call__(\r\n     75         *args, max_evals=max_evals, main_effects=main_effects, error_bounds=error_bounds, batch_size=batch_size,\r\n     76         outputs=outputs, silent=silent\r\n     77     )\r\n\r\nFile ~/Desktop/mli-2/env_38/lib/python3.8/site-packages/shap/explainers/_explainer.py:258, in Explainer.__call__(self, max_evals, main_effects, error_bounds, batch_size, outputs, silent, *args, **kwargs)\r\n    256     feature_names = [[] for _ in range(len(args))]\r\n    257 for row_args in show_progress(zip(*args), num_rows, self.__class__.__name__+\" explainer\", silent):\r\n--> 258     row_result = self.explain_row(\r\n    259         *row_args, max_evals=max_evals, main_effects=main_effects, error_bounds=error_bounds,\r\n    260         batch_size=batch_size, outputs=outputs, silent=silent, **kwargs\r\n    261     )\r\n    262     values.append(row_result.get(\"values\", None))\r\n    263     output_indices.append(row_result.get(\"output_indices\", None))\r\n\r\nFile ~/Desktop/mli-2/env_38/lib/python3.8/site-packages/shap/explainers/_permutation.py:132, in Permutation.explain_row(self, max_evals, main_effects, error_bounds, batch_size, outputs, silent, *row_args)\r\n    129     i += 1\r\n    131 # evaluate the masked model\r\n--> 132 outputs = fm(masks, zero_index=0, batch_size=batch_size)\r\n    134 if row_values is None:\r\n    135     row_values = np.zeros((len(fm),) + outputs.shape[1:])\r\n\r\nFile ~/Desktop/mli-2/env_38/lib/python3.8/site-packages/shap/utils/_masked_model.py:64, in MaskedModel.__call__(self, masks, zero_index, batch_size)\r\n     62         full_masks = np.zeros((int(np.sum(masks >= 0)), self._masker_cols), dtype=np.bool)\r\n     63         _convert_delta_mask_to_full(masks, full_masks)\r\n---> 64         return self._full_masking_call(full_masks, zero_index=zero_index, batch_size=batch_size)\r\n     66 else:\r\n     67     return self._full_masking_call(masks, batch_size=batch_size)\r\n\r\nFile ~/Desktop/mli-2/env_38/lib/python3.8/site-packages/shap/utils/_masked_model.py:93, in MaskedModel._full_masking_call(self, masks, zero_index, batch_size)\r\n     91     masked_inputs = self.masker(delta_ind, *self.args).copy()\r\n     92 else:\r\n---> 93     masked_inputs = self.masker(mask, *self.args)\r\n     95 # wrap the masked inputs if they are not already in a tuple\r\n     96 if not isinstance(masked_inputs, tuple):\r\n\r\nTypeError: 'NoneType' object is not callable\r\n```\r\n\r\n* I believe this is due to how the `shap` handles arbitrary models that are callable, which seems to set the `algorithm` argument to `permutation`, which requires a masker.\r\n\r\n* I have attached the dataset for ease of repro.\r\n[creditcard.csv](https://github.com/slundberg/shap/files/8354338/creditcard.csv)\r\n\r\n* Note, I understand I can just pass in the gradient booster model. However, this is the easiest way to show my use case and it also eases reproducibility.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/2460/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/2460/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
