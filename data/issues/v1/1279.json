{
  "url": "https://api.github.com/repos/shap/shap/issues/1279",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1279/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1279/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1279/events",
  "html_url": "https://github.com/shap/shap/issues/1279",
  "id": 642391923,
  "node_id": "MDU6SXNzdWU2NDIzOTE5MjM=",
  "number": 1279,
  "title": "When running categorical column with out  one hot encoding ",
  "user": {
    "login": "abhi-gm",
    "id": 47538684,
    "node_id": "MDQ6VXNlcjQ3NTM4Njg0",
    "avatar_url": "https://avatars.githubusercontent.com/u/47538684?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/abhi-gm",
    "html_url": "https://github.com/abhi-gm",
    "followers_url": "https://api.github.com/users/abhi-gm/followers",
    "following_url": "https://api.github.com/users/abhi-gm/following{/other_user}",
    "gists_url": "https://api.github.com/users/abhi-gm/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/abhi-gm/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/abhi-gm/subscriptions",
    "organizations_url": "https://api.github.com/users/abhi-gm/orgs",
    "repos_url": "https://api.github.com/users/abhi-gm/repos",
    "events_url": "https://api.github.com/users/abhi-gm/events{/privacy}",
    "received_events_url": "https://api.github.com/users/abhi-gm/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2020-06-20T15:00:28Z",
  "updated_at": "2020-06-20T15:01:01Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "\r\nUse cat codes to convert the categorical column into numeric and \r\ndata['region'] = data['region'].cat.codes\r\nthen used as type \r\ndata['region'] = data['region'].astype('category')\r\n\r\nex = shap.KernelExplainer(lin_regr.predict, X_train)\r\nshap_values = ex.shap_values(X_test.iloc[0,:])\r\nshap.force_plot(ex.expected_value, shap_values, X_test.iloc[0,:])\r\n\r\n\r\n\r\n\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-24-89e63093054e> in <module>\r\n      1 ex = shap.KernelExplainer(lin_regr.predict, X_train)\r\n----> 2 shap_values = ex.shap_values(X_test.iloc[0,:])\r\n      3 shap.force_plot(ex.expected_value, shap_values, X_test.iloc[0,:])\r\n\r\n~\\Anaconda3\\envs\\HtO\\lib\\site-packages\\shap\\explainers\\kernel.py in shap_values(self, X, **kwargs)\r\n    186             if self.keep_index:\r\n    187                 data = convert_to_instance_with_index(data, column_name, index_name, index_value)\r\n--> 188             explanation = self.explain(data, **kwargs)\r\n    189 \r\n    190             # vector-output\r\n\r\n~\\Anaconda3\\envs\\HtO\\lib\\site-packages\\shap\\explainers\\kernel.py in explain(self, incoming_instance, **kwargs)\r\n    234         # find the feature groups we will test. If a feature does not change from its\r\n    235         # current value then we know it doesn't impact the model\r\n--> 236         self.varyingInds = self.varying_groups(instance.x)\r\n    237         if self.data.groups is None:\r\n    238             self.varyingFeatureGroups = np.array([i for i in self.varyingInds])\r\n\r\n~\\Anaconda3\\envs\\HtO\\lib\\site-packages\\shap\\explainers\\kernel.py in varying_groups(self, x)\r\n    426                         continue\r\n    427                     x_group = x_group.todense()\r\n--> 428                 num_mismatches = np.sum(np.invert(np.isclose(x_group, self.data.data[:, inds], equal_nan=True)))\r\n    429                 varying[i] = num_mismatches > 0\r\n    430             varying_indices = np.nonzero(varying)[0]\r\n\r\n<__array_function__ internals> in isclose(*args, **kwargs)\r\n\r\n~\\Anaconda3\\envs\\HtO\\lib\\site-packages\\numpy\\core\\numeric.py in isclose(a, b, rtol, atol, equal_nan)\r\n   2255     y = array(y, dtype=dt, copy=False, subok=True)\r\n   2256 \r\n-> 2257     xfin = isfinite(x)\r\n   2258     yfin = isfinite(y)\r\n   2259     if all(xfin) and all(yfin):\r\n\r\nTypeError: ufunc 'isfinite' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1279/reactions",
    "total_count": 1,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1279/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
