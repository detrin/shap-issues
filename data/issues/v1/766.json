{
  "url": "https://api.github.com/repos/shap/shap/issues/766",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/766/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/766/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/766/events",
  "html_url": "https://github.com/shap/shap/issues/766",
  "id": 484555473,
  "node_id": "MDU6SXNzdWU0ODQ1NTU0NzM=",
  "number": 766,
  "title": "AttributeError: 'list' object has no attribute 'shape' and TypeError: Object of type 'ndarray' is not JSON serializable",
  "user": {
    "login": "SeungJinWang",
    "id": 46008351,
    "node_id": "MDQ6VXNlcjQ2MDA4MzUx",
    "avatar_url": "https://avatars.githubusercontent.com/u/46008351?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/SeungJinWang",
    "html_url": "https://github.com/SeungJinWang",
    "followers_url": "https://api.github.com/users/SeungJinWang/followers",
    "following_url": "https://api.github.com/users/SeungJinWang/following{/other_user}",
    "gists_url": "https://api.github.com/users/SeungJinWang/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/SeungJinWang/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/SeungJinWang/subscriptions",
    "organizations_url": "https://api.github.com/users/SeungJinWang/orgs",
    "repos_url": "https://api.github.com/users/SeungJinWang/repos",
    "events_url": "https://api.github.com/users/SeungJinWang/events{/privacy}",
    "received_events_url": "https://api.github.com/users/SeungJinWang/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-08-23T14:19:06Z",
  "updated_at": "2019-08-27T04:42:35Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I tried to apply shap to my ensemble model(categorical, continuous, text), but I couldn't get summary plot and one of force plots. How can I get this? Please help me~\r\n\r\nexplainer_final = shap.DeepExplainer(final_model, [X_categorical_npary, X_continuous_npary, X_padded_docs, full_train_npary])\r\nshap_values_final = explainer_final.shap_values([X_categorical_test_npary, X_continuous_test_npary, padded_docs_test, full_test_npary], ranked_outputs=None, output_rank_order='max')\r\nshap.summary_plot(shap_values_final, [X_categorical_npary, X_continuous_npary, X_padded_docs, full_train_npary], plot_type=\"bar\")\r\n\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-53-907067c1b5f7> in <module>\r\n----> 1 shap.summary_plot(shap_values_final, [X_categorical_npary, X_continuous_npary, X_padded_docs,full_train_npary], plot_type=\"bar\")\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\shap\\plots\\summary.py in summary_plot(shap_values, features, feature_names, max_display, plot_type, color, axis_color, title, alpha, show, sort, color_bar, auto_size_plot, layered_violin_max_num_bins, class_names)\r\n     73         features = None\r\n     74 \r\n---> 75     num_features = (shap_values[0].shape[1] if multi_class else shap_values.shape[1])\r\n     76 \r\n     77     if feature_names is None:\r\n\r\nAttributeError: 'list' object has no attribute 'shape'\r\n\r\nshap.force_plot(explainer_final.expected_value[0], [X_categorical_test_npary, X_continuous_test_npary, padded_docs_test, full_test_npary][0])  ==> this is OK\r\n\r\nshap.force_plot(explainer_final.expected_value[0], [X_categorical_test_npary, X_continuous_test_npary, padded_docs_test, full_test_npary][0], shap_values_final[0])\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-67-5e28f2d44a82> in <module>\r\n----> 1 shap.force_plot(explainer_final.expected_value[0], [X_categorical_test_npary, X_continuous_test_npary, padded_docs_test, full_test_npary][0], shap_values_final[0])\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\shap\\plots\\force.py in force_plot(base_value, shap_values, features, feature_names, out_names, link, plot_cmap, matplotlib, show, figsize, ordering_keys, ordering_keys_time_format, text_rotation)\r\n    168                     ordering_keys=ordering_keys,\r\n    169                     ordering_keys_time_format=ordering_keys_time_format,\r\n--> 170                     text_rotation=text_rotation\r\n    171                 )\r\n    172 \r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\shap\\plots\\force.py in visualize(e, plot_cmap, matplotlib, figsize, show, ordering_keys, ordering_keys_time_format, text_rotation)\r\n    281             assert False, \"Matplotlib plot is only supported for additive explanations\"\r\n    282         else:\r\n--> 283             return AdditiveForceArrayVisualizer(e, plot_cmap=plot_cmap, ordering_keys=ordering_keys, ordering_keys_time_format=ordering_keys_time_format).html()\r\n    284     else:\r\n    285         assert False, \"visualize() can only display Explanation objects (or arrays of them)!\"\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\site-packages\\shap\\plots\\force.py in html(self)\r\n    417     document.getElementById('{id}')\r\n    418   );\r\n--> 419 </script>\"\"\".format(err_msg=err_msg, data=json.dumps(self.data), id=id_generator()))\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\json\\__init__.py in dumps(obj, skipkeys, ensure_ascii, check_circular, allow_nan, cls, indent, separators, default, sort_keys, **kw)\r\n    229         cls is None and indent is None and separators is None and\r\n    230         default is None and not sort_keys and not kw):\r\n--> 231         return _default_encoder.encode(obj)\r\n    232     if cls is None:\r\n    233         cls = JSONEncoder\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\json\\encoder.py in encode(self, o)\r\n    197         # exceptions aren't as detailed.  The list call should be roughly\r\n    198         # equivalent to the PySequence_Fast that ''.join() would do.\r\n--> 199         chunks = self.iterencode(o, _one_shot=True)\r\n    200         if not isinstance(chunks, (list, tuple)):\r\n    201             chunks = list(chunks)\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\json\\encoder.py in iterencode(self, o, _one_shot)\r\n    255                 self.key_separator, self.item_separator, self.sort_keys,\r\n    256                 self.skipkeys, _one_shot)\r\n--> 257         return _iterencode(o, 0)\r\n    258 \r\n    259 def _make_iterencode(markers, _default, _encoder, _indent, _floatstr,\r\n\r\nC:\\ProgramData\\Anaconda3\\lib\\json\\encoder.py in default(self, o)\r\n    178         \"\"\"\r\n    179         raise TypeError(\"Object of type '%s' is not JSON serializable\" %\r\n--> 180                         o.__class__.__name__)\r\n    181 \r\n    182     def encode(self, o):\r\n\r\nTypeError: Object of type 'ndarray' is not JSON serializable\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/766/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/766/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
