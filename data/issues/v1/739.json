{
  "url": "https://api.github.com/repos/shap/shap/issues/739",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/739/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/739/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/739/events",
  "html_url": "https://github.com/shap/shap/issues/739",
  "id": 478780192,
  "node_id": "MDU6SXNzdWU0Nzg3ODAxOTI=",
  "number": 739,
  "title": "SHAP throwing error for multi-input DeepExplainer",
  "user": {
    "login": "sambitnandi",
    "id": 34888906,
    "node_id": "MDQ6VXNlcjM0ODg4OTA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/34888906?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/sambitnandi",
    "html_url": "https://github.com/sambitnandi",
    "followers_url": "https://api.github.com/users/sambitnandi/followers",
    "following_url": "https://api.github.com/users/sambitnandi/following{/other_user}",
    "gists_url": "https://api.github.com/users/sambitnandi/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/sambitnandi/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/sambitnandi/subscriptions",
    "organizations_url": "https://api.github.com/users/sambitnandi/orgs",
    "repos_url": "https://api.github.com/users/sambitnandi/repos",
    "events_url": "https://api.github.com/users/sambitnandi/events{/privacy}",
    "received_events_url": "https://api.github.com/users/sambitnandi/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2019-08-09T03:38:28Z",
  "updated_at": "2020-06-10T04:01:26Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I have created a deep learning model where some inputs and time-dependent which passes through an LSTM and some are time invariant and passes through a MLP architecture with embedding layers. As a result of that my input to the overall model is a list of arrays for the training. The model is running fine and creating expected results but I am facing challenges to generate SHAP values from a List input.\r\n\r\nThe model is working fine with a List of numpy arrays as a input\r\n\r\nModel:\r\n```\r\ndef LSTM_emb(m):\r\n    X_datxt,X_input = dat.Xt()\r\n    input_els_cat = []\r\n    cat_els = []\r\n    for i in range(X_input[1].shape[1]):\r\n        input_els_cat.append(Input(shape=(1,)))\r\n        input_dim = int(X_input[1][:,i].max() + 1)    # dimension being set as the unique values in the the column\r\n        e = Flatten()(Embedding(input_dim, max(min(10, int(np.sqrt(input_dim))), 1),\r\n                                          dropout=0.2)(input_els_cat[-1]))\r\n        cat_els.append(e)\r\n\r\n    input_els_seg = []\r\n    seg_els = []\r\n    for i in range(X_input[2].shape[1]):\r\n        input_els_seg.append(Input(shape=(1,)))\r\n        seg_els.append(e)\r\n\r\n    input_els = input_els_cat + input_els_seg\r\n    aux_els = cat_els + seg_els\r\n    aux_input = concatenate(aux_els)\r\n    layer1a = Dropout(0.2)(Dense(64, activation=\"sigmoid\")(aux_input))\r\n    layer2a = Dropout(0.2)(Dense(64, activation=\"sigmoid\")(layer1a))\r\n    layer3a = Dropout(0.2)(Dense(64, activation=\"sigmoid\")(layer2a))\r\n\r\n    ts_inputs = Input(shape=(X_input[0].shape[1],17))\r\n\r\n    layer_0 = LSTM(units=16, return_sequences= True)(ts_inputs)\r\n    layer_1 = LSTM(units=16, return_sequences=True)(layer_0)\r\n    layer_2 = LSTM(units = 8)(layer_1)\r\n    layer_3 = Dropout(0.2)(Dense(units=8)(layer_2))\r\n\r\n    layer4 = concatenate([layer3a, layer_3])\r\n\r\n    layer5 = Dropout(0.2)(Dense(64, activation=\"sigmoid\")(layer4))\r\n    layer6 = Dropout(0.2)(Dense(32, activation=\"sigmoid\")(layer5))\r\n    layer7 = Dropout(0.2)(Dense(16, activation=\"sigmoid\")(layer6))\r\n\r\n    out_class = Dense(1, activation=\"selu\", use_bias=False)(layer7)\r\n\r\n    ts_model = Model(inputs=input_els + [ts_inputs], outputs=out_class)\r\n\r\n    optm = Adam()\r\n    ts_model.compile(optimizer=optm, loss='mse', metrics=['mae'])\r\n    ts_model.summary()\r\n    return ts_model\r\n\r\ndef train_LSTM_emb(m):\r\n    X_datxt,X_input = m.dat.Xt()\r\n    model = LSTM_emb(m)\r\n    lr_plato = ReduceLROnPlateau(monitor='val_loss', factor=0.2, patience=4,\r\n                                 min_lr=0.000001, verbose=1)\r\n    cp = ModelCheckpoint(filepath=m.path + 'model.h5', verbose=1,\r\n                         save_best_only=True)\r\n    es = EarlyStopping(monitor='val_loss', patience=9, verbose=1)\r\n    model.fit(X_datxt, m.dat.yt(), epochs=10, batch_size=128,\r\n              callbacks=[lr_plato, cp, es],verbose=1)\r\n#    model.load_weights(m.path + 'model.h5')\r\n    return model\r\n```\r\n\r\nSHAP looks like this\r\n\r\n```\r\nX_datxt, X_input = dat.Xt()\r\nexplainer = shap.DeepExplainer(m.model, X_datxt)\r\nshap_values = explainer.shap_values(X_datxt)\r\n\r\n```\r\n\r\nX_datxt is a list of arrays\r\n```\r\nfor i in range(15):\r\n    print(X_datxt[i].shape)\r\n\r\n(76716, 1)\r\n(76716, 1)\r\n(76716, 1)\r\n(76716, 1)\r\n(76716, 1)\r\n(76716, 1)\r\n(76716, 1)\r\n(76716, 1)\r\n(76716, 1)\r\n(76716, 1)\r\n(76716, 1)\r\n(76716, 1)\r\n(76716, 1)\r\n(76716, 1)\r\n(76716, 6, 17)\r\n```\r\n\r\nError I am getting:\r\n\r\n```\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-92-23fe389dc090>\", line 3, in <module>\r\n    shap_values = explainer.shap_values(X_datxt)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\shap\\explainers\\deep\\__init__.py\", line 119, in shap_values\r\n    return self.explainer.shap_values(X, ranked_outputs, output_rank_order)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\shap\\explainers\\deep\\deep_tf.py\", line 262, in shap_values\r\n    sample_phis = self.run(self.phi_symbolic(feature_ind), self.model_inputs, joint_input)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\shap\\explainers\\deep\\deep_tf.py\", line 282, in run\r\n    return self.session.run(out, feed_dict)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 929, in run\r\n    run_metadata_ptr)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 1137, in _run\r\n    self._graph, fetches, feed_dict_tensor, feed_handles=feed_handles)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 471, in __init__\r\n    self._fetch_mapper = _FetchMapper.for_fetch(fetches)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 261, in for_fetch\r\n    return _ListFetchMapper(fetch)\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 370, in __init__\r\n    self._mappers = [_FetchMapper.for_fetch(fetch) for fetch in fetches]\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 370, in <listcomp>\r\n    self._mappers = [_FetchMapper.for_fetch(fetch) for fetch in fetches]\r\n\r\n  File \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\tensorflow\\python\\client\\session.py\", line 258, in for_fetch\r\n    type(fetch)))\r\n\r\nTypeError: Fetch argument None has invalid type <class 'NoneType'>\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/739/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/739/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
