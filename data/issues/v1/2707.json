{
  "url": "https://api.github.com/repos/shap/shap/issues/2707",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/2707/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/2707/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/2707/events",
  "html_url": "https://github.com/shap/shap/issues/2707",
  "id": 1390235092,
  "node_id": "I_kwDOBHDcK85S3U3U",
  "number": 2707,
  "title": "SHAP waterfall plot errors with lightgbm.lgbmclassifier",
  "user": {
    "login": "cheecv",
    "id": 79035793,
    "node_id": "MDQ6VXNlcjc5MDM1Nzkz",
    "avatar_url": "https://avatars.githubusercontent.com/u/79035793?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/cheecv",
    "html_url": "https://github.com/cheecv",
    "followers_url": "https://api.github.com/users/cheecv/followers",
    "following_url": "https://api.github.com/users/cheecv/following{/other_user}",
    "gists_url": "https://api.github.com/users/cheecv/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/cheecv/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/cheecv/subscriptions",
    "organizations_url": "https://api.github.com/users/cheecv/orgs",
    "repos_url": "https://api.github.com/users/cheecv/repos",
    "events_url": "https://api.github.com/users/cheecv/events{/privacy}",
    "received_events_url": "https://api.github.com/users/cheecv/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-09-29T04:26:49Z",
  "updated_at": "2023-03-13T02:12:15Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I used the following codes to draw a waterfall plot.\r\n\r\n    explainer = shap.TreeExplainer(gbm, data=None)\r\n    shap_values = explainer.shap_values(P)\r\n  \r\n    # visualize the first prediction's explanation\r\n    shap.waterfall_plot(explainer.expected_value[0], shap_values[0])\r\nIt shows this error\r\n\r\n    AttributeError: 'numpy.float64' object has no attribute 'base_values'\r\nThen I tried this method according to a similar q&a in github https://github.com/slundberg/shap/issues/2255\r\n\r\n    explainer = shap.TreeExplainer(gbm, data=None)\r\n    shap_values = explainer(P)\r\n  \r\n\r\n    class helper_object():\r\n        \"\"\"\r\n        This wraps the shap object.\r\n        It takes as input i, which indicates the index of the observation to be explained.\r\n        \"\"\"\r\n        def __init__(self, i):\r\n            self.base_values = shap_values.base_values[i][0]\r\n            self.data = P.loc[i]\r\n            self.feature_names = P.columns.to_list()\r\n            self.values = shap_values.values[i]\r\n\r\n    # visualize the sixth prediction's explanation using the workaround\r\n    shap.waterfall_plot(helper_object(5), len(shap_values[0])) \r\nIt shows this error\r\n\r\n    AttributeError: 'list' object has no attribute 'base_values'\r\nI changed to ```explainer(P)``` instead of ```explainer.shap_values(P)```\r\n\r\nIt shows this error\r\n\r\n    AttributeError: 'helper_object' object has no attribute 'display_data'\r\nI printed the values and showed me a range of values instead of a constant.\r\n\r\n    print(shap_values[0].base_values)\r\n    print(type(shap_values.base_values[0]))\r\n    print(shap_values[0])\r\n\r\n    [ 4.03719405 -4.03719405]\r\n    \r\n    <class 'numpy.ndarray'>\r\n    \r\n    .values =\r\n    \r\n    array([[-5.19398412e-02,  5.19398412e-02],\r\n       [-1.52522416e+00,  1.52522416e+00],\r\n       [-7.06765115e-01,  7.06765115e-01],\r\n       [-2.52875346e-01,  2.52875346e-01],\r\n       [-1.54701093e-01,  1.54701093e-01],\r\n       [ 6.35169405e-03, -6.35169405e-03],\r\n       [ 6.57487803e-03, -6.57487803e-03],\r\n       [ 3.70178479e-02, -3.70178479e-02],\r\n       [ 0.00000000e+00,  0.00000000e+00],\r\n       [-6.99857166e-02,  6.99857166e-02],\r\n       [-1.38675779e-01,  1.38675779e-01],\r\n       [-6.09464170e-02,  6.09464170e-02],\r\n       [-1.94668294e-03,  1.94668294e-03],\r\n       [-1.15005190e-03,  1.15005190e-03],\r\n       [-1.11472815e+00,  1.11472815e+00],\r\n       [-1.05449992e-01,  1.05449992e-01],\r\n       [-1.82219843e-01,  1.82219843e-01],\r\n       [ 1.58137725e-02, -1.58137725e-02],\r\n       [-3.98713235e-01,  3.98713235e-01],\r\n       [-9.45830700e-01,  9.45830700e-01],\r\n       [-6.23312829e-02,  6.23312829e-02],\r\n       [ 6.32792510e-02, -6.32792510e-02],\r\n       [-6.01518308e-02,  6.01518308e-02],\r\n       [ 1.87929746e-04, -1.87929746e-04],\r\n       [-1.58341844e-03,  1.58341844e-03],\r\n       [-5.08391166e-03,  5.08391166e-03],\r\n       [ 0.00000000e+00,  0.00000000e+00],\r\n       [ 1.05478554e-02, -1.05478554e-02],\r\n       [ 2.37974651e-02, -2.37974651e-02],\r\n       [ 5.65731935e-03, -5.65731935e-03],\r\n       [ 2.05245700e-03, -2.05245700e-03]])\r\n    \r\n    .base_values =\r\n    \r\n    array([ 4.03719405, -4.03719405])\r\n    \r\n    .data =\r\n    \r\n    array([ 1.07000001e-01,  7.87079980e+03,  4.26199989e+01,  9.39999998e-01,\r\n        1.48000002e+01,  2.19000006e+00,  3.10000002e-01,  7.98212012e+03,\r\n        2.61899994e+02,  8.40000000e+01,  2.00000000e+01,  3.74000001e+00,\r\n       -1.00000000e+00, -1.00000000e+00,  4.00000000e+00,  3.00000000e+00,\r\n        1.00000000e+00, -1.87000008e+01,  8.41299988e+02,  1.36000004e+01,\r\n       -8.52000046e+00,  6.99999809e-01, -7.65000000e+02,  5.40000010e+00,\r\n        0.00000000e+00, -1.00000000e+00,  0.00000000e+00,  0.00000000e+00,\r\n        0.00000000e+00,  0.00000000e+00,  0.00000000e+00])\r\nwhat should I do to generate a waterfall plot for a single observation?",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/2707/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/2707/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
