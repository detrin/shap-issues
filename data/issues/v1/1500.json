{
  "url": "https://api.github.com/repos/shap/shap/issues/1500",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1500/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1500/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1500/events",
  "html_url": "https://github.com/shap/shap/issues/1500",
  "id": 715820450,
  "node_id": "MDU6SXNzdWU3MTU4MjA0NTA=",
  "number": 1500,
  "title": "TreeSHAP Expected Value is not equal to Mean of predictions",
  "user": {
    "login": "BrunoBarre",
    "id": 50590102,
    "node_id": "MDQ6VXNlcjUwNTkwMTAy",
    "avatar_url": "https://avatars.githubusercontent.com/u/50590102?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/BrunoBarre",
    "html_url": "https://github.com/BrunoBarre",
    "followers_url": "https://api.github.com/users/BrunoBarre/followers",
    "following_url": "https://api.github.com/users/BrunoBarre/following{/other_user}",
    "gists_url": "https://api.github.com/users/BrunoBarre/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/BrunoBarre/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/BrunoBarre/subscriptions",
    "organizations_url": "https://api.github.com/users/BrunoBarre/orgs",
    "repos_url": "https://api.github.com/users/BrunoBarre/repos",
    "events_url": "https://api.github.com/users/BrunoBarre/events{/privacy}",
    "received_events_url": "https://api.github.com/users/BrunoBarre/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2020-10-06T16:01:53Z",
  "updated_at": "2020-10-06T16:01:53Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Here is my code, with only a small dataset and simple model\r\n\r\nI understand that the mean predictions is equal to the KernelSHAP.expected_value, but I would have expected (...) to get the same with TreeSHAP, as I put in parameters ```feature_perturbation=\"interventional\", model_output=\"probability\"```.\r\n\r\nIs my code wrong? Or is there a little problem or something else I don't understand?\r\n\r\nMy versions are : \r\nshap : 0.36.0\r\nsklearn : 0.22.1\r\nxgboost : 0.90\r\n\r\n\r\n```\r\n# Imports\r\nimport shap\r\nimport sklearn as sk\r\nimport xgboost as xgb\r\nprint(shap.__version__) ; print(sk.__version__) ; print(xgb.__version__)\r\n\r\n\r\n\r\n\r\n# Model selection\r\nmodel = sk.tree.DecisionTreeClassifier( criterion=\"gini\", max_depth=2, min_samples_split=5 )\r\n#model = sk.ensemble.RandomForestClassifier( n_estimators=200, max_depth=2, min_samples_split=5, max_features=0.5 )\r\n#model = xgb.XGBClassifier(objective=\"binary:logistic\", max_depth=2, min_child_weight=5, subsample=1, booster='gbtree', learning_rate = 0.1)\r\nprint(model)\r\n\r\n\r\n\r\n\r\n\r\n# Training data and model fitting\r\nX, y = sk.datasets.load_iris(return_X_y=True)\r\nmodel.fit(X, y)\r\n\r\n\r\n\r\n\r\n\r\n\r\n# Mean and expected values for model predictions and SHAP methods (Kernel and Tree)\r\nprint( model.predict_proba(X).mean(axis=0) )\r\n\r\nkernel_shap_explainer = shap.KernelExplainer(model.predict_proba, data=X)\r\nprint(kernel_shap_explainer.expected_value)\r\n\r\ntree_shap_explainer = shap.TreeExplainer(model, data=X, feature_perturbation=\"interventional\", model_output=\"probability\")\r\nprint(tree_shap_explainer.expected_value)\r\n```\r\n\r\n\r\nBy the way I have a problem when I use XGBoost in this script. TreeExplainer tells me that ```Exception: Model does not have a known objective or output type! When model_output is not \"raw\" then we need to know the model's objective or link function.```.\r\nBut when I do  : \r\n```\r\nprint(tree_shap_explainer.model.objective)\r\nprint(tree_shap_explainer.model.tree_output)\r\n```\r\nI have what it seems to be correct values (binary_crossentropy and probability respectively).\r\n\r\nThanks!",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1500/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1500/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
