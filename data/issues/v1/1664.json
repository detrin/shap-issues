{
  "url": "https://api.github.com/repos/shap/shap/issues/1664",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1664/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1664/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1664/events",
  "html_url": "https://github.com/shap/shap/issues/1664",
  "id": 769323277,
  "node_id": "MDU6SXNzdWU3NjkzMjMyNzc=",
  "number": 1664,
  "title": "Bug using base_margin() with TreeSHAP (with notebook), sum of shap values off the margin prediction by log(2). Biased shap values for variables with large effects",
  "user": {
    "login": "dan11mcguire",
    "id": 49620432,
    "node_id": "MDQ6VXNlcjQ5NjIwNDMy",
    "avatar_url": "https://avatars.githubusercontent.com/u/49620432?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/dan11mcguire",
    "html_url": "https://github.com/dan11mcguire",
    "followers_url": "https://api.github.com/users/dan11mcguire/followers",
    "following_url": "https://api.github.com/users/dan11mcguire/following{/other_user}",
    "gists_url": "https://api.github.com/users/dan11mcguire/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/dan11mcguire/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/dan11mcguire/subscriptions",
    "organizations_url": "https://api.github.com/users/dan11mcguire/orgs",
    "repos_url": "https://api.github.com/users/dan11mcguire/repos",
    "events_url": "https://api.github.com/users/dan11mcguire/events{/privacy}",
    "received_events_url": "https://api.github.com/users/dan11mcguire/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2020-12-16T22:41:43Z",
  "updated_at": "2020-12-16T22:41:43Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Using an xgboost tree model and setting the base_margin (a poisson-distrubuted count outcome with offset, for example), i.e.\r\n\r\n`xgb.DMatrix(X).set_base_margin(np.log(myoffset))`\r\n\r\n`shap.TreeExplainer(myxgbmodel).expected_value` (tree-path dependent) is off by about +0.5 from the mean of my margin predictions\r\n\r\n`myxgbmodel.predict(xgb.DMatrix(X),output_margin=True) - np.log(myoffset)`\r\nafter running \r\n`shap.TreeExplainer(myxgbmodel).shap_values(X).sum(axis=1) + np.log(myoffset) + expected_value + np.log(2)` is equal to my prediction  (notice the log(2)), and the expected_value is changed from before.\r\n\r\nI have my own class KernelExplainer2 (copied from you @slundberg ) which can take input argmuments to the model , such as offset.  The shap-values are biased comparing KernelShap to TreeSHAP (see fig1), indicating the log(2) isn't just affecting the intercept.  \r\n\r\nDo you know what might be happening?\r\nThanks,\r\nDan \r\n\r\n[basemargin_treeshap_bias.zip](https://github.com/slundberg/shap/files/5705842/basemargin_treeshap_bias.zip)\r\n![fig1](https://user-images.githubusercontent.com/49620432/102415196-c6b83400-3fc5-11eb-94c8-440ada62188d.PNG)\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1664/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1664/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
