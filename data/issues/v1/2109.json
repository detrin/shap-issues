{
  "url": "https://api.github.com/repos/shap/shap/issues/2109",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/2109/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/2109/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/2109/events",
  "html_url": "https://github.com/shap/shap/issues/2109",
  "id": 952371282,
  "node_id": "MDU6SXNzdWU5NTIzNzEyODI=",
  "number": 2109,
  "title": "KernelExplainer fails with pytorch_tabular model",
  "user": {
    "login": "fonnesbeck",
    "id": 81476,
    "node_id": "MDQ6VXNlcjgxNDc2",
    "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fonnesbeck",
    "html_url": "https://github.com/fonnesbeck",
    "followers_url": "https://api.github.com/users/fonnesbeck/followers",
    "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}",
    "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions",
    "organizations_url": "https://api.github.com/users/fonnesbeck/orgs",
    "repos_url": "https://api.github.com/users/fonnesbeck/repos",
    "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fonnesbeck/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-07-25T22:52:24Z",
  "updated_at": "2021-08-02T15:24:18Z",
  "closed_at": "2021-08-02T15:24:18Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I was hoping to apply shap to some tabular deep learning models I am building with [pytorch_tabular](https://github.com/manujosephv/pytorch_tabular), and based on the documentation it seemed like `KernelExplainer` was the way to go. However, passing the fitted model's predict function and a DataFrame to the `KernelExplainer` constructor fails:\r\n\r\n```python\r\nexplainer = shap.KernelExplainer(tabular_model.predict, df_train[PRED_COLUMNS])\r\n```\r\n\r\n```\r\nProvided model function fails when applied to the provided data set.\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n~/GitHub/spatial_pitch_effectiveness/models/pitch_effectiveness_pytorch_tabular.py in \r\n----> 404 explainer = shap.KernelExplainer(tabular_model.predict, df_train[PRED_COLUMNS])\r\n      405 shap_values = explainer.shap_values(df_val[PRED_COLUMNS], nsamples=100)\r\n\r\n~/anaconda3/envs/pytorch_latest_p37/lib/python3.7/site-packages/shap/explainers/_kernel.py in __init__(self, model, data, link, **kwargs)\r\n     67         self.keep_index_ordered = kwargs.get(\"keep_index_ordered\", False)\r\n     68         self.data = convert_to_data(data, keep_index=self.keep_index)\r\n---> 69         model_null = match_model_to_data(self.model, self.data)\r\n     70 \r\n     71         # enforce our current input type limitations\r\n\r\n~/anaconda3/envs/pytorch_latest_p37/lib/python3.7/site-packages/shap/utils/_legacy.py in match_model_to_data(model, data)\r\n    110             out_val = model.f(data.convert_to_df())\r\n    111         else:\r\n--> 112             out_val = model.f(data.data)\r\n    113     except:\r\n    114         print(\"Provided model function fails when applied to the provided data set.\")\r\n\r\n~/anaconda3/envs/pytorch_latest_p37/lib/python3.7/site-packages/pytorch_tabular/tabular_model.py in predict(self, test, quantiles, n_samples, ret_logits)\r\n    603         ), \"Quantiles should be a decimal between 0 and 1\"\r\n    604         self.model.eval()\r\n--> 605         inference_dataloader = self.datamodule.prepare_inference_dataloader(test)\r\n    606         point_predictions = []\r\n    607         quantile_predictions = []\r\n\r\n~/anaconda3/envs/pytorch_latest_p37/lib/python3.7/site-packages/pytorch_tabular/tabular_datamodule.py in prepare_inference_dataloader(self, df)\r\n    510         \"\"\"\r\n    511         df = df.copy()\r\n--> 512         if len(set(self.target) - set(df.columns)) > 0:\r\n    513             if self.config.task == \"classification\":\r\n    514                 df.loc[:, self.target] = np.array(\r\n\r\nAttributeError: 'numpy.ndarray' object has no attribute 'columns'\r\n```\r\n\r\nAnyone come across something similar with models like this? ",
  "closed_by": {
    "login": "fonnesbeck",
    "id": 81476,
    "node_id": "MDQ6VXNlcjgxNDc2",
    "avatar_url": "https://avatars.githubusercontent.com/u/81476?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/fonnesbeck",
    "html_url": "https://github.com/fonnesbeck",
    "followers_url": "https://api.github.com/users/fonnesbeck/followers",
    "following_url": "https://api.github.com/users/fonnesbeck/following{/other_user}",
    "gists_url": "https://api.github.com/users/fonnesbeck/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/fonnesbeck/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/fonnesbeck/subscriptions",
    "organizations_url": "https://api.github.com/users/fonnesbeck/orgs",
    "repos_url": "https://api.github.com/users/fonnesbeck/repos",
    "events_url": "https://api.github.com/users/fonnesbeck/events{/privacy}",
    "received_events_url": "https://api.github.com/users/fonnesbeck/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/2109/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/2109/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
