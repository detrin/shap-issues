{
  "url": "https://api.github.com/repos/shap/shap/issues/305",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/305/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/305/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/305/events",
  "html_url": "https://github.com/shap/shap/issues/305",
  "id": 375022777,
  "node_id": "MDU6SXNzdWUzNzUwMjI3Nzc=",
  "number": 305,
  "title": "DeepExplainer doesn't work with keras concatenate layers",
  "user": {
    "login": "ellehoej",
    "id": 17024024,
    "node_id": "MDQ6VXNlcjE3MDI0MDI0",
    "avatar_url": "https://avatars.githubusercontent.com/u/17024024?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ellehoej",
    "html_url": "https://github.com/ellehoej",
    "followers_url": "https://api.github.com/users/ellehoej/followers",
    "following_url": "https://api.github.com/users/ellehoej/following{/other_user}",
    "gists_url": "https://api.github.com/users/ellehoej/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ellehoej/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ellehoej/subscriptions",
    "organizations_url": "https://api.github.com/users/ellehoej/orgs",
    "repos_url": "https://api.github.com/users/ellehoej/repos",
    "events_url": "https://api.github.com/users/ellehoej/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ellehoej/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 486901329,
      "node_id": "MDU6TGFiZWw0ODY5MDEzMjk=",
      "url": "https://api.github.com/repos/shap/shap/labels/bug",
      "name": "bug",
      "color": "ee0701",
      "default": true,
      "description": "Indicates an unexpected problem or unintended behaviour"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 11,
  "created_at": "2018-10-29T13:45:38Z",
  "updated_at": "2020-04-16T16:10:49Z",
  "closed_at": "2018-11-09T19:49:21Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi, \r\nThanks for some great work.\r\nI'm getting an error (see below) when using DeepExplainer (SHAP 0.24, TF 1.8, Keras 2.2.4) on a keras model that uses \"concatenate\" through the Keras functional API.\r\n\r\nThe model is simply: \r\n\r\n```\r\nx_input = Input(shape=(days_input, n_features_input))\r\n\r\nx_d = Flatten()(x_input)\r\n\r\nx_d1 = Dense(256, use_bias=False)(x_d)\r\nx_d1 = BatchNormalization()(x_d1)\r\nx_dl = PReLU()(x_d1)\r\nx_d1 = Dropout(0.5)(x_d1)\r\n\r\nx_d3 = Dense(128, use_bias=False)(x_d1)\r\nx_d3 = BatchNormalization()(x_d3)\r\nx_d3 = PReLU()(x_d3)\r\nx_d3 = Dropout(0.5)(x_d3)\r\n\r\nx_d3 = concatenate([x_d1, x_d3])\r\n\r\ndense = Dense(1,activation='sigmoid')\r\n\r\nx = dense(x_d3)\r\n\r\nmodel = Model(inputs=x_input, outputs=x)\r\nmodel.compile(loss='mean_squared_error', optimizer='adam', metrics=['mse'])\r\n```\r\nGenerating the DeepExplainer works:\r\n```\r\ne = shap.DeepExplainer(model, train_X[:20])\r\n```\r\nBut when generating shap_values:\r\n\r\n```\r\nshap_values = e.shap_values(test_X)\r\n```\r\nI get the following error:\r\n\r\n```---------------------------------------------------------------------------\r\nInvalidArgumentError                      Traceback (most recent call last)\r\nC:\\Anaconda\\envs\\keras_updated\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py in get_attr(self, name)\r\n   2326         with c_api_util.tf_buffer() as buf:\r\n-> 2327           c_api.TF_OperationGetAttrValueProto(self._c_op, name, buf)\r\n   2328           data = c_api.TF_GetBuffer(buf)\r\n\r\nInvalidArgumentError: Operation 'concatenate_1/concat' has no attr named '_XlaCompile'.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\nC:\\Anaconda\\envs\\keras_updated\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in _MaybeCompile(scope, op, func, grad_fn)\r\n    379     try:\r\n--> 380       xla_compile = op.get_attr(\"_XlaCompile\")\r\n    381       xla_separate_compiled_gradients = op.get_attr(\r\n\r\nC:\\Anaconda\\envs\\keras_updated\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py in get_attr(self, name)\r\n   2330         # Convert to ValueError for backwards compatibility.\r\n-> 2331         raise ValueError(str(e))\r\n   2332       x = attr_value_pb2.AttrValue()\r\n\r\nValueError: Operation 'concatenate_1/concat' has no attr named '_XlaCompile'.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nAssertionError                            Traceback (most recent call last)\r\n<ipython-input-23-9f62380f1037> in <module>()\r\n----> 1 shap_values = e.shap_values(test_X)\r\n\r\nC:\\Anaconda\\envs\\keras_updated\\lib\\site-packages\\shap\\explainers\\deep.py in shap_values(self, X, ranked_outputs, output_rank_order)\r\n    290                 # run attribution computation graph\r\n    291                 feature_ind = model_output_ranks[j,i]\r\n--> 292                 sample_phis = self.run(self.phi_symbolic(feature_ind), self.model_inputs, joint_input)\r\n    293 \r\n    294                 # assign the attributions to the right part of the output arrays\r\n\r\nC:\\Anaconda\\envs\\keras_updated\\lib\\site-packages\\shap\\explainers\\deep.py in phi_symbolic(self, i)\r\n    202             try:\r\n    203                 out = self.model_output[:,i] if self.multi_output else self.model_output\r\n--> 204                 self.phi_symbolics[i] = tf.gradients(out, self.model_inputs)\r\n    205 \r\n    206             finally:\r\n\r\nC:\\Anaconda\\envs\\keras_updated\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in gradients(ys, xs, grad_ys, name, colocate_gradients_with_ops, gate_gradients, aggregation_method, stop_gradients)\r\n    492   with ops.get_default_graph()._lock:  # pylint: disable=protected-access\r\n    493     return _GradientsHelper(ys, xs, grad_ys, name, colocate_gradients_with_ops,\r\n--> 494                             gate_gradients, aggregation_method, stop_gradients)\r\n    495 \r\n    496 \r\n\r\nC:\\Anaconda\\envs\\keras_updated\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in _GradientsHelper(ys, xs, grad_ys, name, colocate_gradients_with_ops, gate_gradients, aggregation_method, stop_gradients)\r\n    634                 # functions.\r\n    635                 in_grads = _MaybeCompile(grad_scope, op, func_call,\r\n--> 636                                          lambda: grad_fn(op, *out_grads))\r\n    637               else:\r\n    638                 # For function call ops, we add a 'SymbolicGradient'\r\n\r\nC:\\Anaconda\\envs\\keras_updated\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in _MaybeCompile(scope, op, func, grad_fn)\r\n    383       xla_scope = op.get_attr(\"_XlaScope\").decode()\r\n    384     except ValueError:\r\n--> 385       return grad_fn()  # Exit early\r\n    386 \r\n    387   if not xla_compile:\r\n\r\nC:\\Anaconda\\envs\\keras_updated\\lib\\site-packages\\tensorflow\\python\\ops\\gradients_impl.py in <lambda>()\r\n    634                 # functions.\r\n    635                 in_grads = _MaybeCompile(grad_scope, op, func_call,\r\n--> 636                                          lambda: grad_fn(op, *out_grads))\r\n    637               else:\r\n    638                 # For function call ops, we add a 'SymbolicGradient'\r\n\r\nC:\\Anaconda\\envs\\keras_updated\\lib\\site-packages\\shap\\explainers\\deep.py in custom_grad(self, op, *grads)\r\n    315         \"\"\" Passes a gradient op creation request to the correct handler.\r\n    316         \"\"\"\r\n--> 317         return op_handlers[op.type](self, op, *grads)\r\n    318 \r\n    319 \r\n\r\nC:\\Anaconda\\envs\\keras_updated\\lib\\site-packages\\shap\\explainers\\deep.py in handler(explainer, op, *grads)\r\n    515 def linearity_1d(input_ind):\r\n    516     def handler(explainer, op, *grads):\r\n--> 517         return linearity_1d_handler(input_ind, explainer, op, *grads)\r\n    518     return handler\r\n    519 \r\n\r\nC:\\Anaconda\\envs\\keras_updated\\lib\\site-packages\\shap\\explainers\\deep.py in linearity_1d_handler(input_ind, explainer, op, *grads)\r\n    522     for i in range(len(op.inputs)):\r\n    523         if i != input_ind:\r\n--> 524             assert not explainer._variable_inputs(op)[i], str(i) + \"th input to \" + op.name + \" cannot vary!\"\r\n    525 \r\n    526     return explainer.orig_grads[op.type](op, *grads)\r\n\r\nAssertionError: 1th input to concatenate_1/concat cannot vary!\r\n```\r\n\r\n",
  "closed_by": {
    "login": "slundberg",
    "id": 3740613,
    "node_id": "MDQ6VXNlcjM3NDA2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3740613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slundberg",
    "html_url": "https://github.com/slundberg",
    "followers_url": "https://api.github.com/users/slundberg/followers",
    "following_url": "https://api.github.com/users/slundberg/following{/other_user}",
    "gists_url": "https://api.github.com/users/slundberg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slundberg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slundberg/subscriptions",
    "organizations_url": "https://api.github.com/users/slundberg/orgs",
    "repos_url": "https://api.github.com/users/slundberg/repos",
    "events_url": "https://api.github.com/users/slundberg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slundberg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/305/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/305/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
