{
  "url": "https://api.github.com/repos/shap/shap/issues/723",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/723/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/723/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/723/events",
  "html_url": "https://github.com/shap/shap/issues/723",
  "id": 474020572,
  "node_id": "MDU6SXNzdWU0NzQwMjA1NzI=",
  "number": 723,
  "title": "shap_interaction_values rows not adding up to shap values for RF classifier",
  "user": {
    "login": "oegedijk",
    "id": 27999937,
    "node_id": "MDQ6VXNlcjI3OTk5OTM3",
    "avatar_url": "https://avatars.githubusercontent.com/u/27999937?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/oegedijk",
    "html_url": "https://github.com/oegedijk",
    "followers_url": "https://api.github.com/users/oegedijk/followers",
    "following_url": "https://api.github.com/users/oegedijk/following{/other_user}",
    "gists_url": "https://api.github.com/users/oegedijk/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/oegedijk/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/oegedijk/subscriptions",
    "organizations_url": "https://api.github.com/users/oegedijk/orgs",
    "repos_url": "https://api.github.com/users/oegedijk/repos",
    "events_url": "https://api.github.com/users/oegedijk/events{/privacy}",
    "received_events_url": "https://api.github.com/users/oegedijk/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-07-29T12:22:19Z",
  "updated_at": "2019-07-30T10:35:06Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi all,\r\n\r\nI have some issues with getting shap_interaction_values to work with a classification problem. To use the example code in [this tutorial](https://github.com/slundberg/shap/blob/master/notebooks/tree_explainer/Basic%20SHAP%20Interaction%20Value%20Example%20in%20XGBoost.ipynb) to generate X and y:\r\n\r\n If you then fit an sklearn RandomForestRegressor it indeed works as advertised:\r\n\r\n```\r\nfrom sklearn.ensemble import RandomForestRegressor\r\nrfr = RandomForestRegressor()\r\nrfr.fit(X, y)\r\nreg_preds = rfr.predict(X)\r\n\r\nreg_explainer = shap.TreeExplainer(rfr)\r\nreg_shap_interact_vals = reg_explainer.shap_interaction_values(X)\r\nreg_shap_vals = reg_explainer.shap_values(X)\r\n\r\nreg_shap_vals[0].round(2)\r\nreg_shap_interact_vals[0].round(2)\r\nreg_shap_interact_vals[0].sum(0).round(2)\r\n\r\nnp.abs(reg_shap_vals.sum(1) + reg_explainer.expected_value - reg_preds).max()\r\n```\r\nOutput for the first row (index 0):\r\n\r\n```\r\narray([ 1.  , -1.25,  0.25,  0.  ,  0.  ])\r\narray([[ 1.  , -0.01, -0.  ,  0.  ,  0.  ],\r\n       [-0.01, -1.5 ,  0.25,  0.  ,  0.  ],\r\n       [-0.  ,  0.25, -0.  ,  0.  ,  0.  ],\r\n       [ 0.  ,  0.  ,  0.  ,  0.  ,  0.  ],\r\n       [ 0.  ,  0.  ,  0.  ,  0.  ,  0.  ]])\r\narray([ 1.  , -1.25,  0.25,  0.  ,  0.  ])\r\n6.124658247230741e-08\r\n```\r\n\r\nHowever when we turn it into a classification problem by generating random 1 and 0 depending on the value of the original y's:\r\n```\r\ny_prob =  1 / (1 + np.exp(-y)) #sigmoid\r\ny_cls = np.where(np.random.rand(2000) > 1-y_prob, 1, 0)\r\n\r\nfrom sklearn.ensemble import  RandomForestClassifier\r\nrfc = RandomForestClassifier()\r\nrfc.fit(X, y_cls)\r\ncls_preds = rfc.predict_proba(X)\r\n\r\ncls_explainer = shap.TreeExplainer(rfc)\r\ncls_shap_interact_vals = cls_explainer.shap_interaction_values(X)[1]\r\ncls_shap_vals = cls_explainer.shap_values(X)[1]\r\n```\r\n\r\nThen the interaction values no longer sum up to the shap values, and what's more the values on the diagonals (which should be the main effect) are simply equal to the shap_values themselves.\r\n\r\n```\r\ncls_shap_vals[0].round(2)\r\ncls_shap_interact_vals[0].round(2)\r\ncls_shap_interact_vals[0].sum(0).round(2)\r\n\r\nnp.abs(cls_shap_vals.sum(1) + cls_explainer.expected_value[1]- cls_preds[:,1]).max()\r\nnp.abs(cls_shap_interact_vals.sum(2).sum(1) + cls_explainer.expected_value[1] - cls_preds[:,1]).max()\r\n```\r\n\r\nOutput for the first row (index 0):\r\n```\r\narray([ 0.17, -0.24,  0.07, -0.01,  0.  ])\r\narray([[ 0.17,  0.01,  0.02, -0.  ,  0.  ],\r\n       [ 0.01, -0.24,  0.04,  0.  ,  0.  ],\r\n       [ 0.02,  0.04,  0.07, -0.  ,  0.  ],\r\n       [-0.  ,  0.  , -0.  , -0.01,  0.  ],\r\n       [ 0.  ,  0.  ,  0.  ,  0.  ,  0.  ]])\r\narray([ 0.2 , -0.19,  0.13, -0.01,  0.  ])\r\n1.0566299279979319e-08\r\n0.14718125134184412\r\n```\r\n\r\nSo the row sums of the interaction values sum up to `array([ 0.2 , -0.19,  0.13, -0.01,  0.  ])` while the shap values are `array([ 0.17, -0.24,  0.07, -0.01,  0.  ])`. \r\n\r\nHowever the values on the diagonal are exactly equal to `array([ 0.17, -0.24,  0.07, -0.01,  0.  ])`. Which begs the question: what are the values off the diagonal then?\r\n\r\nShould interaction values for a classification problem be generated differently? Or is the algorithm malfunctioning somewhere?\r\n\r\n\r\n\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/723/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/723/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
