{
  "url": "https://api.github.com/repos/shap/shap/issues/1039",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1039/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1039/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1039/events",
  "html_url": "https://github.com/shap/shap/issues/1039",
  "id": 563310839,
  "node_id": "MDU6SXNzdWU1NjMzMTA4Mzk=",
  "number": 1039,
  "title": "SHAP Values in a neural network with an Embedding layer",
  "user": {
    "login": "lrdsouza",
    "id": 48129660,
    "node_id": "MDQ6VXNlcjQ4MTI5NjYw",
    "avatar_url": "https://avatars.githubusercontent.com/u/48129660?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lrdsouza",
    "html_url": "https://github.com/lrdsouza",
    "followers_url": "https://api.github.com/users/lrdsouza/followers",
    "following_url": "https://api.github.com/users/lrdsouza/following{/other_user}",
    "gists_url": "https://api.github.com/users/lrdsouza/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lrdsouza/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lrdsouza/subscriptions",
    "organizations_url": "https://api.github.com/users/lrdsouza/orgs",
    "repos_url": "https://api.github.com/users/lrdsouza/repos",
    "events_url": "https://api.github.com/users/lrdsouza/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lrdsouza/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 4,
  "created_at": "2020-02-11T16:07:35Z",
  "updated_at": "2021-02-09T22:34:44Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi, I'm trying to get the SHAP Values from the following neural network:\r\n\r\n```\r\nmodel_ser = Sequential()\r\n\r\nmodel_ser.add(Embedding(input_dim=vocabulary_size, output_dim=embedding_size, input_length=X_train_ser.shape[1],\r\n                    weights=[embedding_matrix], trainable=False))\r\n\r\nmodel_ser.add(Flatten())\r\n\r\nmodel_ser.add(Dense(500, activation='relu', input_shape=(int(X_train_ser.shape[1]*embedding_size),),\r\n                    kernel_regularizer=l2(0.01)))\r\n\r\nmodel_ser.add(Dense(250, activation='relu', kernel_regularizer=l2(0.01)))\r\n\r\nmodel_ser.add(Dropout(0.2))\r\n\r\nmodel_ser.add(Dense(125, activation='relu', kernel_regularizer=l2(0.01)))\r\n\r\nmodel_ser.add(Dropout(0.2))\r\n\r\nmodel_ser.add(Dense(65, activation='relu', kernel_regularizer=l2(0.01)))\r\n\r\nmodel_ser.add(Dropout(0.1))\r\n\r\nmodel_ser.add(Dense(32, activation='relu', kernel_regularizer=l2(0.01)))\r\n\r\nmodel_ser.add(Dense(ser_size, activation='softmax'))\r\n\r\nmodel_ser.compile(loss='categorical_crossentropy',\r\n              optimizer='adadelta',\r\n              metrics=['accuracy'])\r\nmodel_ser.summary() \r\n```\r\n\r\nAnd when I try to get the values through:\r\n\r\n```\r\nk_shap_ser = shap.GradientExplainer(model_ser, X_train_ser)\r\nk_shap_ser_values = k_shap_ser.shap_values(X_train_ser)\r\nshap.summary_plot(k_shap_ser_values, X_train_ser, plot_type='bar')\r\n```\r\n\r\n\r\nThe following error is encountered:\r\n\r\n```\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-21-50a73061b0b6> in <module>\r\n      1 k_shap_ser = shap.GradientExplainer(model_ser, X_train_ser)\r\n----> 2 k_shap_ser_values = k_shap_ser.shap_values(X_train_ser)\r\n      3 shap.summary_plot(k_shap_ser_values, X_train_ser, plot_type='bar')\r\n\r\n~/virtual/lib/python3.6/site-packages/shap/explainers/gradient.py in shap_values(self, X, nsamples, ranked_outputs, output_rank_order, rseed, return_variances)\r\n    103         were chosen as \"top\".\r\n    104         \"\"\"\r\n--> 105         return self.explainer.shap_values(X, nsamples, ranked_outputs, output_rank_order, rseed, return_variances)\r\n    106 \r\n    107 \r\n\r\n~/virtual/lib/python3.6/site-packages/shap/explainers/gradient.py in shap_values(self, X, nsamples, ranked_outputs, output_rank_order, rseed, return_variances)\r\n    285                     batch = [samples_input[l][b:min(b+self.batch_size,nsamples)] for l in range(len(X))]\r\n    286                     grads.append(self.run(self.gradient(find), self.model_inputs, batch))\r\n--> 287                 grad = [np.concatenate([g[l] for g in grads], 0) for l in range(len(X))]\r\n    288 \r\n    289                 # assign the attributions to the right part of the output arrays\r\n\r\n~/virtual/lib/python3.6/site-packages/shap/explainers/gradient.py in <listcomp>(.0)\r\n    285                     batch = [samples_input[l][b:min(b+self.batch_size,nsamples)] for l in range(len(X))]\r\n    286                     grads.append(self.run(self.gradient(find), self.model_inputs, batch))\r\n--> 287                 grad = [np.concatenate([g[l] for g in grads], 0) for l in range(len(X))]\r\n    288 \r\n    289                 # assign the attributions to the right part of the output arrays\r\n\r\n<__array_function__ internals> in concatenate(*args, **kwargs)\r\n\r\nValueError: zero-dimensional arrays cannot be concatenated\r\n```\r\n\r\n**X_train_ser** is an array, its composition is as follows:\r\n\r\n```\r\narray([[ 5, 16, 16, ..., 64, 63,  0],\r\n       [ 5, 24, 16, ..., 62,  0,  0],\r\n       [ 5, 24, 16, ..., 62,  0,  0],\r\n       ...,\r\n       [ 5, 16, 16, ..., 65, 63,  0],\r\n       [ 5, 16, 16, ..., 65, 63,  0],\r\n       [ 5, 16, 16, ..., 65, 63,  0]], dtype=int32)\r\n```\r\n\r\nI do not understand what could be causing this error, however, in a previous network that did not have the Embedding layer, I was able to obtain the SHAP values in the same way that I presented here.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1039/reactions",
    "total_count": 6,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1039/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
