{
  "url": "https://api.github.com/repos/shap/shap/issues/2190",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/2190/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/2190/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/2190/events",
  "html_url": "https://github.com/shap/shap/issues/2190",
  "id": 1002971711,
  "node_id": "I_kwDOBHDcK847yCI_",
  "number": 2190,
  "title": "AssertionError: Unknown type passed as data object: <class 'list'>",
  "user": {
    "login": "admodadmod",
    "id": 89395602,
    "node_id": "MDQ6VXNlcjg5Mzk1NjAy",
    "avatar_url": "https://avatars.githubusercontent.com/u/89395602?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/admodadmod",
    "html_url": "https://github.com/admodadmod",
    "followers_url": "https://api.github.com/users/admodadmod/followers",
    "following_url": "https://api.github.com/users/admodadmod/following{/other_user}",
    "gists_url": "https://api.github.com/users/admodadmod/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/admodadmod/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/admodadmod/subscriptions",
    "organizations_url": "https://api.github.com/users/admodadmod/orgs",
    "repos_url": "https://api.github.com/users/admodadmod/repos",
    "events_url": "https://api.github.com/users/admodadmod/events{/privacy}",
    "received_events_url": "https://api.github.com/users/admodadmod/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2021-09-21T17:57:30Z",
  "updated_at": "2021-09-21T17:57:30Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi,\r\nI used KernelExplainer for my deep network but I got the following error:\r\nAssertionError: Unknown type passed as data object: <class 'list'>\r\n\r\nCan you help me with how I can add a layer to handle input?\r\n\r\n``\r\n## Sparate to  train and test\r\nfrom multiprocessing import Pool\r\n\r\ntrainx, testx, trainy, testy = train_test_split(XN, YN, test_size=0.2, random_state=40)\r\n\r\nfrom keras import backend as K\r\n\r\ndef coeff_determination(y_true, y_pred):\r\n    SS_res =  K.sum(K.square( y_true-y_pred )) \r\n    SS_tot = K.sum(K.square( y_true - K.mean(y_true) ) ) \r\n    return ( 1 - SS_res/(SS_tot + K.epsilon()) )\r\n\r\n\r\n# load models\r\ndef load_all_model(n_model,coeff_determination):\r\n    all_model=list()\r\n    for i in range(n_model):\r\n        ## define file name\r\n        filename='Omodels/model_'+str(i+1)+'.h5'\r\n        ## load file friom folder\r\n        dependency={'coeff_determination': coeff_determination}\r\n        model=load_model(filename,custom_objects=dependency)\r\n        all_model.append(model)\r\n        print('> Loaded %s' % filename)\r\n    return all_model\r\n\r\n## define stacked model from multiple member input model\r\ndef  define_stacked_model(members):\r\n    ##  update all layers in all models to not be trainable\r\n    for i in range(len(members)):\r\n        model = members[i]\r\n        for  layer in model.layers:\r\n            ## make not trainable\r\n            layer.trainable=False\r\n            ## rename to avoid unique name\r\n            layer._name='ensemble_'+str(i+1)+'_'+layer.name\r\n    ## define multi headed input \r\n    ensemble_visible = [model.input for model in members]\r\n    ## concatenate merge output from each model\r\n    ensemble_outputs = [model.output  for model in members]\r\n    merge_outs = concatenate(ensemble_outputs)\r\n    hidden = Dense(40,activation='tanh')(merge_outs)\r\n    output = Dense(1,activation='tanh')(hidden)\r\n    model = Model(inputs=ensemble_visible,outputs=output)\r\n    ## plot graph of ensemble\r\n    # plot_model(model, to_file='model_graph',show_shapes=True)\r\n    ## compile\r\n    model.compile(loss='mse', optimizer = Nadam(learning_rate=0.02), metrics=[coeff_determination])\r\n    return  model\r\n\r\n##  fit stacked model\r\ndef  fit_stacked_model(model, inputx, inputy):\r\n    ## prepare input data\r\n    X = [inputx  for _  in  range(len(model.input))]\r\n    ## fit model\r\n    model.fit(X,inputy, epochs=500, verbose=0)\r\n\r\n## make prediction with stacked model\r\ndef  predict_stacked_model(model, inputx):\r\n    ## prepare input data\r\n    X = [inputx   for  _  in  range(len(model.input))]\r\n    ## make prediction\r\n    yhat=model.predict(X,verbose=0)\r\n    return yhat\r\n\r\n## load all model\r\nmodel_number = 5\r\nmembers = load_all_model(model_number, coeff_determination)\r\n\r\n## create/define stacked model\r\nstacked_model = define_stacked_model(members)\r\n\r\n## fit stavked model on data\r\nfit_stacked_model(stacked_model, trainx,trainy)\r\n\r\n\r\nXts2 = [testx   for  _  in  range(len(stacked_model.input))]\r\n\r\n## explain all the predictions in the test set\r\nexplainer = shap.KernelExplainer(stacked_model.predict, Xts2)\r\nshap_values = explainer.shap_values(Xts1)\r\n``",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/2190/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/2190/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
