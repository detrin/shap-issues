{
  "url": "https://api.github.com/repos/shap/shap/issues/1189",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1189/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1189/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1189/events",
  "html_url": "https://github.com/shap/shap/issues/1189",
  "id": 609196489,
  "node_id": "MDU6SXNzdWU2MDkxOTY0ODk=",
  "number": 1189,
  "title": "Unable to create dependence plot if one of the features is of type category",
  "user": {
    "login": "gmyrianthous",
    "id": 6135204,
    "node_id": "MDQ6VXNlcjYxMzUyMDQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/6135204?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gmyrianthous",
    "html_url": "https://github.com/gmyrianthous",
    "followers_url": "https://api.github.com/users/gmyrianthous/followers",
    "following_url": "https://api.github.com/users/gmyrianthous/following{/other_user}",
    "gists_url": "https://api.github.com/users/gmyrianthous/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gmyrianthous/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gmyrianthous/subscriptions",
    "organizations_url": "https://api.github.com/users/gmyrianthous/orgs",
    "repos_url": "https://api.github.com/users/gmyrianthous/repos",
    "events_url": "https://api.github.com/users/gmyrianthous/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gmyrianthous/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-04-29T16:35:40Z",
  "updated_at": "2020-06-17T17:10:16Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "So in the scenario you have at least one variable of type `category`, the user will get a `ValueError: could not convert string to float:`\r\n\r\n### How to reproduce\r\n\r\n```\r\nimport shap\r\nimport lightgbm as lgbm\r\nimport numpy as np\r\nimport platform\r\nimport pandas as pd\r\nimport matplotlib.pyplot as plt\r\nimport matplotlib\r\n\r\n\r\ndef generate_sample_data():\r\n    np.random.seed(123)\r\n\r\n    df = pd.DataFrame(np.random.randint(0, 100, size=(100, 3)), columns=list('ABC'))\r\n    df['D'] = np.random.choice(['X', 'Y', 'Z'], len(df))\r\n    df['D'] = df['D'].astype('category')\r\n    df['label'] = np.random.choice([0, 1], len(df))\r\n\r\n    return df\r\n\r\n\r\ndef report_versions():\r\n    print(\"=\"*35)\r\n    print(f\"python version: {platform.python_version()}\")\r\n    print(f\"pandas version: {pd.__version__}\")\r\n    print(f\"lightgbm version: {lgbm.__version__}\")\r\n    print(f\"shap version: {shap.__version__}\")\r\n    print(f\"matplotlib version: {matplotlib.__version__}\")\r\n    print(\"=\"*35)\r\n\r\n\r\ndef train_model(df, feature_names, label_name, parameters, categorical_feature=None):\r\n    training_df = lgbm.Dataset(df[feature_names], label=df[label_name], categorical_feature=categorical_feature)\r\n    model = lgbm.train(parameters, training_df, categorical_feature=categorical_feature)\r\n    model.save_model('lightgbm_model_file.txt')\r\n\r\n\r\ndef create_shap_dependence_plots(model_filename, df, feature_names, label_name):\r\n    bst = lgbm.Booster(model_file=model_filename)\r\n\r\n    tree_explainer = shap.TreeExplainer(bst)\r\n    tree_explainer.model.original_model.params = params\r\n    shap_vals = tree_explainer.shap_values(df[feature_names], y=df[label_name])\r\n\r\n    for feature in feature_names:\r\n        plt.figure(figsize=(18, 18))\r\n        shap.dependence_plot(feature, shap_vals[-1], df[feature_names], display_features=df[feature_names], show=False)\r\n        plt.xticks(rotation=90)\r\n        plt.tight_layout()\r\n        plt.savefig(f\"{feature}.png\")\r\n        plt.close()\r\n\r\n\r\nif __name__ == '__main__':\r\n    # Report all versions of the packages used\r\n    report_versions()\r\n\r\n    # Generate a dummy dataset\r\n    df = generate_sample_data()\r\n    print(df)\r\n\r\n    # Prepare the parameters for the LightGBM model\r\n    params = dict(\r\n        objective='binary',\r\n        num_leaves=3,\r\n        num_trees=10,\r\n        learning_rate=0.5,\r\n        tree_learner='data',\r\n        device='cpu',\r\n        seed=123,\r\n        max_depth=15,\r\n        metric='binary_logloss'\r\n    )\r\n\r\n    # Train the model and save the model file\r\n    feature_names = ['A', 'B', 'C', 'D']\r\n    train_model(df, feature_names, 'label', params, ['D'])\r\n\r\n    # Attempt to create SHAP dependence plots\r\n    create_shap_dependence_plots('lightgbm_model_file.txt', df, feature_names, 'label')\r\n```\r\n\r\nand the result will be something like: \r\n\r\n```\r\n===================================\r\npython version: 3.7.7\r\npandas version: 1.0.3\r\nlightgbm version: 2.3.1\r\nshap version: 0.35.0\r\nmatplotlib version: 3.2.1\r\n===================================\r\nFound `num_trees` in params. Will use it instead of argument\r\n     A   B   C  D  label\r\n0   66  92  98  Y      1\r\n1   17  83  57  Y      0\r\n2   86  97  96  Z      0\r\n3   47  73  32  Z      1\r\n4   46  96  25  Y      1\r\n..  ..  ..  .. ..    ...\r\n95  84  90   4  Z      0\r\n96  21  32  39  X      0\r\n97   1  98  82  Z      0\r\n98  90  35  58  X      1\r\n99  38   1  52  Y      1\r\n\r\n[100 rows x 5 columns]\r\n[LightGBM] [Warning] Starting from the 2.1.2 version, default value for the \"boost_from_average\" parameter in \"binary\" objective is true.\r\nThis may cause significantly different results comparing to the previous versions of LightGBM.\r\nTry to set boost_from_average=false, if your old models produce bad results\r\n[LightGBM] [Info] Number of positive: 56, number of negative: 44\r\n[LightGBM] [Info] Total Bins 90\r\n[LightGBM] [Info] Number of data: 100, number of used features: 4\r\n[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.560000 -> initscore=0.241162\r\n[LightGBM] [Info] Start training from score 0.241162\r\nSetting feature_perturbation = \"tree_path_dependent\" because no background data was given.\r\nLightGBM binary classifier with TreeExplainer shap values output has changed to a list of ndarray\r\nTraceback (most recent call last):\r\n  File \"/Users/gmyrianthous/PycharmProjects/shap-category/test.py\", line 79, in <module>\r\n    create_shap_dependence_plots('lightgbm_model_file.txt', df, feature_names, 'label')\r\n  File \"/Users/gmyrianthous/PycharmProjects/shap-category/test.py\", line 46, in create_shap_dependence_plots\r\n    shap.dependence_plot(feature, shap_vals[-1], df[feature_names], display_features=df[feature_names], show=False)\r\n  File \"/Users/gmyrianthous/PycharmProjects/shap-category/venv/lib/python3.7/site-packages/shap/plots/dependence.py\", line 108, in dependence_plot\r\n    interaction_index = approximate_interactions(ind, shap_values, features)[0]\r\n  File \"/Users/gmyrianthous/PycharmProjects/shap-category/venv/lib/python3.7/site-packages/shap/common.py\", line 307, in approximate_interactions\r\n    val_other = X[inds, i][srt].astype(np.float)\r\nValueError: could not convert string to float: 'Z'\r\n```\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1189/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1189/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
