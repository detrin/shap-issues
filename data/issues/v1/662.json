{
  "url": "https://api.github.com/repos/shap/shap/issues/662",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/662/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/662/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/662/events",
  "html_url": "https://github.com/shap/shap/issues/662",
  "id": 460191479,
  "node_id": "MDU6SXNzdWU0NjAxOTE0Nzk=",
  "number": 662,
  "title": "Is SHAP appropriate for mostly categorical data?",
  "user": {
    "login": "ljmartin",
    "id": 8262765,
    "node_id": "MDQ6VXNlcjgyNjI3NjU=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8262765?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ljmartin",
    "html_url": "https://github.com/ljmartin",
    "followers_url": "https://api.github.com/users/ljmartin/followers",
    "following_url": "https://api.github.com/users/ljmartin/following{/other_user}",
    "gists_url": "https://api.github.com/users/ljmartin/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ljmartin/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ljmartin/subscriptions",
    "organizations_url": "https://api.github.com/users/ljmartin/orgs",
    "repos_url": "https://api.github.com/users/ljmartin/repos",
    "events_url": "https://api.github.com/users/ljmartin/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ljmartin/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 14,
  "created_at": "2019-06-25T03:34:55Z",
  "updated_at": "2019-11-21T13:00:46Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi, firstly thanks for providing SHAP. I have some survey data that I've analyzed using CatBoost. Almost all the features are categorical. I noticed an error in loading a `TreeExplainer` (minimal reproduction below), and I've since seen this post labelled ToDo: https://github.com/slundberg/shap/issues/292 discussing how categorical variables can't be split in the way SHAP expects. So question is - is SHAP appropriate for this type of data? Any advice here is appreciated!\r\n\r\nMinimal example: \r\n\r\n```\r\nfrom catboost import CatBoostClassifier\r\nimport pandas as pd\r\nimport shap\r\nprint('Cat is:', catboost.__version__)\r\nprint('Pandas is:', pd.__version__)\r\nprint('Shap is:', shap.__version__)\r\n\r\nfeatures = dict()\r\nfeatures['Cat'] = ['Yes', 'Yes', 'Yes', 'Yes', 'Yes', 'No', 'No', 'No']\r\nfeatures['Hat'] = [1, 1, 1, 1, 0, 0, 0, 0]\r\n\r\ncat_hat = pd.DataFrame(features)\r\n\r\nmodel=CatBoostClassifier(iterations=5, \r\n                         depth=1, \r\n                         learning_rate=0.1, \r\n                         loss_function='Logloss', \r\n                         verbose=False)\r\nmodel.fit(cat_hat['Cat'].values, cat_hat['Hat'].values, cat_features=[0])\r\n\r\n\r\n# load JS visualization code to notebook\r\nshap.initjs()\r\n# explain the model's predictions using SHAP values\r\n# (same syntax works for LightGBM, CatBoost, and scikit-learn models)\r\nexplainer = shap.TreeExplainer(model)\r\n```\r\n\r\noutput:\r\n```\r\nCat is: 0.15.1\r\nPandas is: 0.24.2\r\nShap is: 0.29.2\r\n\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\n<ipython-input-151-6315d3774046> in <module>\r\n     24 # explain the model's predictions using SHAP values\r\n     25 # (same syntax works for LightGBM, CatBoost, and scikit-learn models)\r\n---> 26 explainer = shap.TreeExplainer(model)\r\n\r\n~/miniconda3/envs/lew_conda/lib/python3.7/site-packages/shap/explainers/tree.py in __init__(self, model, data, model_output, feature_dependence)\r\n     94         self.feature_dependence = feature_dependence\r\n     95         self.expected_value = None\r\n---> 96         self.model = TreeEnsemble(model, self.data, self.data_missing)\r\n     97 \r\n     98         assert feature_dependence in feature_dependence_codes, \"Invalid feature_dependence option!\"\r\n\r\n~/miniconda3/envs/lew_conda/lib/python3.7/site-packages/shap/explainers/tree.py in __init__(self, model, data, data_missing)\r\n    592             self.dtype = np.float32\r\n    593             cb_loader = CatBoostTreeModelLoader(model)\r\n--> 594             self.trees = cb_loader.get_trees(data=data, data_missing=data_missing)\r\n    595             self.tree_output = \"log_odds\"\r\n    596             self.objective = \"binary_crossentropy\"\r\n\r\n~/miniconda3/envs/lew_conda/lib/python3.7/site-packages/shap/explainers/tree.py in get_trees(self, data, data_missing)\r\n   1148             # split features and borders go from leafs to the root\r\n   1149             for elem in self.loaded_cb_model['oblivious_trees'][tree_index]['splits']:\r\n-> 1150                 split_features_index.append(elem['float_feature_index'])\r\n   1151                 borders.append(elem['border'])\r\n   1152 \r\n\r\nKeyError: 'float_feature_index'\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/662/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/662/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
