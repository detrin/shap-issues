{
  "url": "https://api.github.com/repos/shap/shap/issues/2861",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/2861/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/2861/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/2861/events",
  "html_url": "https://github.com/shap/shap/issues/2861",
  "id": 1591862149,
  "node_id": "I_kwDOBHDcK85e4eOF",
  "number": 2861,
  "title": "In TreeExplainer, when feature_pertrubation='tree_path_dependent' but data is not None, do we have 'interventional' shap?",
  "user": {
    "login": "kyrxanthos",
    "id": 67141092,
    "node_id": "MDQ6VXNlcjY3MTQxMDky",
    "avatar_url": "https://avatars.githubusercontent.com/u/67141092?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kyrxanthos",
    "html_url": "https://github.com/kyrxanthos",
    "followers_url": "https://api.github.com/users/kyrxanthos/followers",
    "following_url": "https://api.github.com/users/kyrxanthos/following{/other_user}",
    "gists_url": "https://api.github.com/users/kyrxanthos/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kyrxanthos/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kyrxanthos/subscriptions",
    "organizations_url": "https://api.github.com/users/kyrxanthos/orgs",
    "repos_url": "https://api.github.com/users/kyrxanthos/repos",
    "events_url": "https://api.github.com/users/kyrxanthos/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kyrxanthos/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2023-02-20T13:17:56Z",
  "updated_at": "2023-02-22T16:16:44Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "So when `feature_pertrubation='tree_path_dependent'` the `data` argument is optional. If we give a background dataset, do we have the same behaviour as if `feature_pertrubation='interventional`? \r\n\r\nFrom my minimal example that's what it seems like, at least for expected_value:\r\n\r\n```python\r\nimport shap\r\nimport numpy as np\r\nfrom sklearn.tree import DecisionTreeRegressor\r\n\r\nnum_points = 500\r\nnum_samples = 100\r\nnum_features = 5\r\nrng = np.random.default_rng(seed=1)\r\nX = rng.normal(size=(num_points, num_features))\r\ny = rng.integers(2, size=(num_points,))\r\nX_sample = X[np.random.randint(X.shape[0], size=num_samples), :]\r\n\r\ndt_model = DecisionTreeRegressor(max_depth=2).fit(X, y)\r\nexplainer1 = shap.TreeExplainer(dt_model, feature_perturbation='tree_path_dependent', model_output='raw')\r\nexplainer2 = shap.TreeExplainer(dt_model, feature_perturbation='tree_path_dependent', data=X_sample, model_output='raw')       \r\nexplainer3 = shap.TreeExplainer(dt_model, feature_perturbation='interventional', data=X_sample, model_output='raw')                                          \r\nprint(f'explainer1.expected_value = {explainer1.expected_value}')\r\nprint(f'explainer2.expected_value = {explainer2.expected_value}')\r\nprint(f'explainer3.expected_value = {explainer3.expected_value}')\r\n```\r\n\r\n```\r\nexplainer1.expected_value = [0.514]\r\nexplainer2.expected_value = 0.5139024767801856\r\nexplainer3.expected_value = 0.5139024767801856\r\n```\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/2861/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/2861/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
