{
  "url": "https://api.github.com/repos/shap/shap/issues/1028",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1028/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1028/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1028/events",
  "html_url": "https://github.com/shap/shap/issues/1028",
  "id": 558863185,
  "node_id": "MDU6SXNzdWU1NTg4NjMxODU=",
  "number": 1028,
  "title": "Feature Request: add support for sklearn.ensemble.HistGradientBoostingRegressor / Classifier to TreeExplainer",
  "user": {
    "login": "ogrisel",
    "id": 89061,
    "node_id": "MDQ6VXNlcjg5MDYx",
    "avatar_url": "https://avatars.githubusercontent.com/u/89061?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ogrisel",
    "html_url": "https://github.com/ogrisel",
    "followers_url": "https://api.github.com/users/ogrisel/followers",
    "following_url": "https://api.github.com/users/ogrisel/following{/other_user}",
    "gists_url": "https://api.github.com/users/ogrisel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ogrisel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ogrisel/subscriptions",
    "organizations_url": "https://api.github.com/users/ogrisel/orgs",
    "repos_url": "https://api.github.com/users/ogrisel/repos",
    "events_url": "https://api.github.com/users/ogrisel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ogrisel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 6,
  "created_at": "2020-02-03T06:02:34Z",
  "updated_at": "2021-04-09T14:17:56Z",
  "closed_at": "2020-02-08T01:09:19Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Steps to reproduce:\r\n\r\n```python\r\nimport shap\r\nfrom sklearn.ensemble import GradientBoostingRegressor\r\nfrom sklearn.experimental import enable_hist_gradient_boosting\r\nfrom sklearn.ensemble import HistGradientBoostingRegressor\r\n\r\n# load JS visualization code to notebook\r\nshap.initjs()\r\n\r\n# train a tree-based model\r\nX, y = shap.datasets.diabetes()\r\n\r\n# model = GradientBoostingRegressor().fit(X, y)  # works for exact GBRT\r\nmodel = HistGradientBoostingRegressor().fit(X, y)\r\n\r\n# explain the model's predictions using SHAP\r\nexplainer = shap.TreeExplainer(model)\r\nshap_values = explainer.shap_values(X)\r\n\r\n# visualize the first prediction's explanation (use matplotlib=True\r\n# to avoid Javascript)\r\nshap.force_plot(explainer.expected_value, shap_values[0, :], X.iloc[0, :])\r\n\r\n```\r\n```python-traceback\r\n/tmp/shap_demo.py in \r\n     15 # explain the model's predictions using SHAP\r\n     16 \r\n---> 17 explainer = shap.TreeExplainer(model)\r\n     18 \r\n     19 shap_values = explainer.shap_values(X)\r\n\r\n~/miniconda3/envs/pylatest/lib/python3.7/site-packages/shap/explainers/tree.py in __init__(self, model, data, model_output, feature_perturbation, **deprecated_options)\r\n    110         self.feature_perturbation = feature_perturbation\r\n    111         self.expected_value = None\r\n--> 112         self.model = TreeEnsemble(model, self.data, self.data_missing)\r\n    113 \r\n    114         if feature_perturbation not in feature_perturbation_codes:\r\n\r\n~/miniconda3/envs/pylatest/lib/python3.7/site-packages/shap/explainers/tree.py in __init__(self, model, data, data_missing)\r\n    752             self.tree_output = \"probability\"\r\n    753         else:\r\n--> 754             raise Exception(\"Model type not yet supported by TreeExplainer: \" + str(type(model)))\r\n    755 \r\n    756         # build a dense numpy version of all the tree objects\r\n\r\nException: Model type not yet supported by TreeExplainer: \r\n```\r\n\r\n## Implementation notes\r\n\r\nThe code of the new `HistGradientBoostingRegressor` classifier is different from other tree-based models in scikit-learn but it should quite easy to adapt the code to leverage de structure of the `model._predictors` collection. The source code of the `TreePredictor` datastructure is here:\r\n\r\nhttps://github.com/scikit-learn/scikit-learn/blob/master/sklearn/ensemble/_hist_gradient_boosting/predictor.py\r\nhttps://github.com/scikit-learn/scikit-learn/blob/master/sklearn/ensemble/_hist_gradient_boosting/_predictor.pyx\r\n\r\n\r\nThe nodes of the predictors are detailed in https://github.com/scikit-learn/scikit-learn/blob/master/sklearn/ensemble/_hist_gradient_boosting/common.pxd\r\nwhich is mapped to the PREDICTOR_RECORD_DTYPE array datatype:\r\nhttps://github.com/scikit-learn/scikit-learn/blob/master/sklearn/ensemble/_hist_gradient_boosting/common.pyx\r\n\r\n```python\r\nPREDICTOR_RECORD_DTYPE = np.dtype([\r\n    ('value', Y_DTYPE),\r\n    ('count', np.uint32),\r\n    ('feature_idx', np.uint32),\r\n    ('threshold', X_DTYPE),\r\n    ('missing_go_to_left', np.uint8),\r\n    ('left', np.uint32),\r\n    ('right', np.uint32),\r\n    ('gain', Y_DTYPE),\r\n    ('depth', np.uint32),\r\n    ('is_leaf', np.uint8),\r\n    ('bin_threshold', X_BINNED_DTYPE),\r\n])\r\n```\r\n\r\nThis is considered private API of scikit-learn but it should be quite easy to update the explainer code in the unlikely case of change.",
  "closed_by": {
    "login": "slundberg",
    "id": 3740613,
    "node_id": "MDQ6VXNlcjM3NDA2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3740613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slundberg",
    "html_url": "https://github.com/slundberg",
    "followers_url": "https://api.github.com/users/slundberg/followers",
    "following_url": "https://api.github.com/users/slundberg/following{/other_user}",
    "gists_url": "https://api.github.com/users/slundberg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slundberg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slundberg/subscriptions",
    "organizations_url": "https://api.github.com/users/slundberg/orgs",
    "repos_url": "https://api.github.com/users/slundberg/repos",
    "events_url": "https://api.github.com/users/slundberg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slundberg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1028/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1028/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
