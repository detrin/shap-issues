{
  "url": "https://api.github.com/repos/shap/shap/issues/1035",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1035/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1035/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1035/events",
  "html_url": "https://github.com/shap/shap/issues/1035",
  "id": 562114012,
  "node_id": "MDU6SXNzdWU1NjIxMTQwMTI=",
  "number": 1035,
  "title": "Why does it convert data to GPU all at once in `DeepExplainer` of Pytorch?",
  "user": {
    "login": "rightx2",
    "id": 10606994,
    "node_id": "MDQ6VXNlcjEwNjA2OTk0",
    "avatar_url": "https://avatars.githubusercontent.com/u/10606994?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rightx2",
    "html_url": "https://github.com/rightx2",
    "followers_url": "https://api.github.com/users/rightx2/followers",
    "following_url": "https://api.github.com/users/rightx2/following{/other_user}",
    "gists_url": "https://api.github.com/users/rightx2/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rightx2/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rightx2/subscriptions",
    "organizations_url": "https://api.github.com/users/rightx2/orgs",
    "repos_url": "https://api.github.com/users/rightx2/repos",
    "events_url": "https://api.github.com/users/rightx2/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rightx2/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-02-09T03:11:42Z",
  "updated_at": "2020-02-14T02:46:29Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "## Problem\r\n\r\n1. It converts all data to GPU when I passed data in GPU\r\n    - In the `PytorchDeepExplainer` code, there is a bunch of code like:\r\n```\r\n        _ = model(*data) \r\n        ....\r\n        ....\r\n        X = [x.detach().to(self.device) for x in X]\r\n```\r\n2. In the example notebook, it looks like it doesn't matter much, because in the notebook, it uses only **100 samples** in creating `DeepExplainer` object... But I checked that shap values cosine similarity is almost 0 between when using 100 samples and 10000 samples. When I tried over 10000 samples, GPU went out of memory.\r\n\r\n## Solution (Suggestion)\r\n\r\nSo, I think that it needs to support something like **batch** operation. What do you think?\r\n(I've been doing refactoring `PyTorchDeepExplainer` to support this. If you think that this function is indispensible, I would keep going)\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1035/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1035/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
