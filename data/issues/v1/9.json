{
  "url": "https://api.github.com/repos/shap/shap/issues/9",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/9/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/9/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/9/events",
  "html_url": "https://github.com/shap/shap/issues/9",
  "id": 285110293,
  "node_id": "MDU6SXNzdWUyODUxMTAyOTM=",
  "number": 9,
  "title": "Integration with React",
  "user": {
    "login": "JuanCorp",
    "id": 27902909,
    "node_id": "MDQ6VXNlcjI3OTAyOTA5",
    "avatar_url": "https://avatars.githubusercontent.com/u/27902909?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JuanCorp",
    "html_url": "https://github.com/JuanCorp",
    "followers_url": "https://api.github.com/users/JuanCorp/followers",
    "following_url": "https://api.github.com/users/JuanCorp/following{/other_user}",
    "gists_url": "https://api.github.com/users/JuanCorp/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JuanCorp/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JuanCorp/subscriptions",
    "organizations_url": "https://api.github.com/users/JuanCorp/orgs",
    "repos_url": "https://api.github.com/users/JuanCorp/repos",
    "events_url": "https://api.github.com/users/JuanCorp/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JuanCorp/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 10,
  "created_at": "2017-12-29T15:24:52Z",
  "updated_at": "2021-11-29T11:52:06Z",
  "closed_at": "2018-01-03T03:33:45Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I was reading the comments on other issues, and noticed that the visualizations are made with D3.js and React. I was wondering if there's a way to render them directly in a React front-end. \r\n\r\nFor example, a request is made from a React front-end for the explanation of a prediction. This calls a REST-API on the server, which returns the SHAP values, model feature names, and the data used to create the prediction (basically the shap.visualize() parameters). Finally, on React, the same visualization created on the notebooks is displayed on the app.  \r\n\r\nOne alternative to this is creating an image from the visualization, in the case of single explanations, like the one mentioned on #3 . But a native result would be preferable. Â¿Is there currently a way to do this?\r\n\r\nThanks in advance!",
  "closed_by": {
    "login": "JuanCorp",
    "id": 27902909,
    "node_id": "MDQ6VXNlcjI3OTAyOTA5",
    "avatar_url": "https://avatars.githubusercontent.com/u/27902909?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/JuanCorp",
    "html_url": "https://github.com/JuanCorp",
    "followers_url": "https://api.github.com/users/JuanCorp/followers",
    "following_url": "https://api.github.com/users/JuanCorp/following{/other_user}",
    "gists_url": "https://api.github.com/users/JuanCorp/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/JuanCorp/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/JuanCorp/subscriptions",
    "organizations_url": "https://api.github.com/users/JuanCorp/orgs",
    "repos_url": "https://api.github.com/users/JuanCorp/repos",
    "events_url": "https://api.github.com/users/JuanCorp/events{/privacy}",
    "received_events_url": "https://api.github.com/users/JuanCorp/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/9/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/9/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
