{
  "url": "https://api.github.com/repos/shap/shap/issues/324",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/324/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/324/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/324/events",
  "html_url": "https://github.com/shap/shap/issues/324",
  "id": 380195439,
  "node_id": "MDU6SXNzdWUzODAxOTU0Mzk=",
  "number": 324,
  "title": "DeepExplainer - TypeError: Fetch argument None has invalid type <type 'NoneType'>",
  "user": {
    "login": "ZeonTrevor",
    "id": 4203328,
    "node_id": "MDQ6VXNlcjQyMDMzMjg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4203328?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ZeonTrevor",
    "html_url": "https://github.com/ZeonTrevor",
    "followers_url": "https://api.github.com/users/ZeonTrevor/followers",
    "following_url": "https://api.github.com/users/ZeonTrevor/following{/other_user}",
    "gists_url": "https://api.github.com/users/ZeonTrevor/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ZeonTrevor/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ZeonTrevor/subscriptions",
    "organizations_url": "https://api.github.com/users/ZeonTrevor/orgs",
    "repos_url": "https://api.github.com/users/ZeonTrevor/repos",
    "events_url": "https://api.github.com/users/ZeonTrevor/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ZeonTrevor/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 8,
  "created_at": "2018-11-13T12:08:44Z",
  "updated_at": "2022-05-12T06:21:59Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I get this error using the DeepExplainer while trying to get the shap values for the Keras model as defined [here](https://github.com/ZeonTrevor/MatchZoo/blob/245957a38f16af97a11434bf1091fbcb3a6cba22/matchzoo/models/matchpyramid.py#L39-L76). The DeepExplainer instantiates correctly for the above model giving the right expected value for the given set of background samples. I have tried DeepExplainer before using another model and it works fine, so I feel it could possibly be due to the use of a custom layer [DynamicMaxPooling](https://github.com/ZeonTrevor/MatchZoo/blob/245957a38f16af97a11434bf1091fbcb3a6cba22/matchzoo/layers/DynamicMaxPooling.py) that requires TF ```gather_nd``` op. I use SHAP (0.25.2), TF(1.11), Keras(2.2.2).\r\n\r\n```---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-28-6b4492cabadb> in <module>()\r\n----> 1 shap_values = deep_explainer.shap_values([background_query[:1], background_doc[:1], background_dpool_index[:1]])\r\n\r\n/home/fernando/neuir/local/lib/python2.7/site-packages/shap/explainers/deep/__init__.pyc in shap_values(self, X, ranked_outputs, output_rank_order)\r\n    115         were chosen as \"top\".\r\n    116         \"\"\"\r\n--> 117         return self.explainer.shap_values(X, ranked_outputs, output_rank_order)\r\n\r\n/home/fernando/neuir/local/lib/python2.7/site-packages/shap/explainers/deep/deep_tf.pyc in shap_values(self, X, ranked_outputs, output_rank_order)\r\n    248                 # run attribution computation graph\r\n    249                 feature_ind = model_output_ranks[j,i]\r\n--> 250                 sample_phis = self.run(self.phi_symbolic(feature_ind), self.model_inputs, joint_input)\r\n    251 \r\n    252                 # assign the attributions to the right part of the output arrays\r\n\r\n/home/fernando/neuir/local/lib/python2.7/site-packages/shap/explainers/deep/deep_tf.pyc in run(self, out, model_inputs, X)\r\n    268         for t in self.learning_phase_flags:\r\n    269             feed_dict[t] = False\r\n--> 270         return self.session.run(out, feed_dict)\r\n    271 \r\n    272     def custom_grad(self, op, *grads):\r\n\r\n/home/fernando/neuir/local/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in run(self, fetches, feed_dict, options, run_metadata)\r\n    927     try:\r\n    928       result = self._run(None, fetches, feed_dict, options_ptr,\r\n--> 929                          run_metadata_ptr)\r\n    930       if run_metadata:\r\n    931         proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)\r\n\r\n/home/fernando/neuir/local/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in _run(self, handle, fetches, feed_dict, options, run_metadata)\r\n   1135     # Create a fetch handler to take care of the structure of fetches.\r\n   1136     fetch_handler = _FetchHandler(\r\n-> 1137         self._graph, fetches, feed_dict_tensor, feed_handles=feed_handles)\r\n   1138 \r\n   1139     # Run request and get response.\r\n\r\n/home/fernando/neuir/local/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in __init__(self, graph, fetches, feeds, feed_handles)\r\n    469     \"\"\"\r\n    470     with graph.as_default():\r\n--> 471       self._fetch_mapper = _FetchMapper.for_fetch(fetches)\r\n    472     self._fetches = []\r\n    473     self._targets = []\r\n\r\n/home/fernando/neuir/local/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in for_fetch(fetch)\r\n    259     elif isinstance(fetch, (list, tuple)):\r\n    260       # NOTE(touts): This is also the code path for namedtuples.\r\n--> 261       return _ListFetchMapper(fetch)\r\n    262     elif isinstance(fetch, collections.Mapping):\r\n    263       return _DictFetchMapper(fetch)\r\n\r\n/home/fernando/neuir/local/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in __init__(self, fetches)\r\n    368     \"\"\"\r\n    369     self._fetch_type = type(fetches)\r\n--> 370     self._mappers = [_FetchMapper.for_fetch(fetch) for fetch in fetches]\r\n    371     self._unique_fetches, self._value_indices = _uniquify_fetches(self._mappers)\r\n    372 \r\n\r\n/home/fernando/neuir/local/lib/python2.7/site-packages/tensorflow/python/client/session.pyc in for_fetch(fetch)\r\n    256     if fetch is None:\r\n    257       raise TypeError('Fetch argument %r has invalid type %r' % (fetch,\r\n--> 258                                                                  type(fetch)))\r\n    259     elif isinstance(fetch, (list, tuple)):\r\n    260       # NOTE(touts): This is also the code path for namedtuples.\r\n\r\nTypeError: Fetch argument None has invalid type <type 'NoneType'>```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/324/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/324/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
