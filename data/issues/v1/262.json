{
  "url": "https://api.github.com/repos/shap/shap/issues/262",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/262/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/262/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/262/events",
  "html_url": "https://github.com/shap/shap/pull/262",
  "id": 360684873,
  "node_id": "MDExOlB1bGxSZXF1ZXN0MjE1ODQ4ODU4",
  "number": 262,
  "title": "PyTorch Deep Explainer",
  "user": {
    "login": "gabrieltseng",
    "id": 29063740,
    "node_id": "MDQ6VXNlcjI5MDYzNzQw",
    "avatar_url": "https://avatars.githubusercontent.com/u/29063740?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gabrieltseng",
    "html_url": "https://github.com/gabrieltseng",
    "followers_url": "https://api.github.com/users/gabrieltseng/followers",
    "following_url": "https://api.github.com/users/gabrieltseng/following{/other_user}",
    "gists_url": "https://api.github.com/users/gabrieltseng/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gabrieltseng/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gabrieltseng/subscriptions",
    "organizations_url": "https://api.github.com/users/gabrieltseng/orgs",
    "repos_url": "https://api.github.com/users/gabrieltseng/repos",
    "events_url": "https://api.github.com/users/gabrieltseng/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gabrieltseng/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2018-09-16T22:26:39Z",
  "updated_at": "2018-10-03T16:03:52Z",
  "closed_at": "2018-10-03T16:03:52Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "draft": false,
  "pull_request": {
    "url": "https://api.github.com/repos/shap/shap/pulls/262",
    "html_url": "https://github.com/shap/shap/pull/262",
    "diff_url": "https://github.com/shap/shap/pull/262.diff",
    "patch_url": "https://github.com/shap/shap/pull/262.patch",
    "merged_at": "2018-10-03T16:03:52Z"
  },
  "body": "This pull request is the second part of a solution to #191. I would appreciate any feedback!\r\n\r\nHere are two notes about this pull request:\r\n\r\n1. The deep explainer doesn't quite go back along PyTorch's backpropagation graph. \r\n\r\nIn PyTorch, this graph is generated using [Function](https://pytorch.org/docs/stable/autograd.html?highlight=function#torch.autograd.Function) objects; these used to have a `saved_tensors` attribute, which made the input tensors accessible. However, as more and more functions are being written in C++, this is no longer the case. If these saved tensors are exposed once again, it would make sense to use them, especially since function objects can handle backward hooks (which allow the gradients to be manipulated).\r\n\r\nWhat is implemented is a backpropagation along the [Module](https://pytorch.org/docs/stable/nn.html#torch.nn.Module) objects, which are a little coarser. As an example, the following network works with the Deep Explainer, because all operations are captured in a module object:\r\n\r\n```python\r\nclass Net(nn.Module):\r\n    def __init__(self):\r\n        super(Net, self).__init__()\r\n\r\n        self.conv_layers = nn.Sequential(\r\n            nn.Conv2d(1, 10, kernel_size=5),\r\n            nn.MaxPool2d(2),\r\n            nn.ReLU(),\r\n            nn.Conv2d(10, 20, kernel_size=5),\r\n            nn.Dropout(),\r\n            nn.MaxPool2d(2),\r\n            nn.ReLU(),\r\n        )\r\n        self.fc_layers = nn.Sequential(\r\n            nn.Linear(320, 50),\r\n            nn.ReLU(),\r\n            nn.Dropout(),\r\n            nn.Linear(50, 10),\r\n            nn.Softmax(dim=1)\r\n        )\r\n\r\n    def forward(self, x):\r\n        x = self.conv_layers(x)\r\n        x = x.view(-1, 320) # doesn't affect the gradient, so can be outside an nn.Module object\r\n        x = self.fc_layers(x)\r\n        return x\r\n```\r\nbut the following doesn't:\r\n```python\r\nclass Net(nn.Module):\r\n    def __init__(self):\r\n        super(Net, self).__init__()\r\n        self.conv1 = nn.Conv2d(1, 10, kernel_size=5)\r\n        self.conv2 = nn.Conv2d(10, 20, kernel_size=5)\r\n        self.conv2_drop = nn.Dropout2d()\r\n        self.fc1 = nn.Linear(320, 50)\r\n        self.fc2 = nn.Linear(50, 10)\r\n\r\n    def forward(self, x):\r\n        x = F.relu(F.max_pool2d(self.conv1(x), 2))\r\n        x = F.relu(F.max_pool2d(self.conv2_drop(self.conv2(x)), 2))\r\n        x = x.view(-1, 320)\r\n        x = F.relu(self.fc1(x))\r\n        x = F.dropout(x, training=self.training)\r\n        x = self.fc2(x)\r\n        return F.softmax(x, dim=1)\r\n```\r\nbecause the relu activations, the maxpooling and the dropout happen using functions, not modules. I understand that this limits the functionality somewhat, and did spend some time trying to use the `Function`s instead.\r\n\r\n2. The API for this feature is identical to the PyTorch Gradient Explainer; the entire model can be explained by simply passing the model, and if a `tuple` (model, layer) is passed, then the inputs of that interim layer will be explained.",
  "closed_by": {
    "login": "slundberg",
    "id": 3740613,
    "node_id": "MDQ6VXNlcjM3NDA2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3740613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slundberg",
    "html_url": "https://github.com/slundberg",
    "followers_url": "https://api.github.com/users/slundberg/followers",
    "following_url": "https://api.github.com/users/slundberg/following{/other_user}",
    "gists_url": "https://api.github.com/users/slundberg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slundberg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slundberg/subscriptions",
    "organizations_url": "https://api.github.com/users/slundberg/orgs",
    "repos_url": "https://api.github.com/users/slundberg/repos",
    "events_url": "https://api.github.com/users/slundberg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slundberg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/262/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/262/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
