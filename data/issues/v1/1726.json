{
  "url": "https://api.github.com/repos/shap/shap/issues/1726",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1726/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1726/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1726/events",
  "html_url": "https://github.com/shap/shap/issues/1726",
  "id": 783079081,
  "node_id": "MDU6SXNzdWU3ODMwNzkwODE=",
  "number": 1726,
  "title": "GPUTreeShap shap-loss values different from TreeShap",
  "user": {
    "login": "gtcf",
    "id": 77260734,
    "node_id": "MDQ6VXNlcjc3MjYwNzM0",
    "avatar_url": "https://avatars.githubusercontent.com/u/77260734?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/gtcf",
    "html_url": "https://github.com/gtcf",
    "followers_url": "https://api.github.com/users/gtcf/followers",
    "following_url": "https://api.github.com/users/gtcf/following{/other_user}",
    "gists_url": "https://api.github.com/users/gtcf/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/gtcf/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/gtcf/subscriptions",
    "organizations_url": "https://api.github.com/users/gtcf/orgs",
    "repos_url": "https://api.github.com/users/gtcf/repos",
    "events_url": "https://api.github.com/users/gtcf/events{/privacy}",
    "received_events_url": "https://api.github.com/users/gtcf/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2021-01-11T05:37:24Z",
  "updated_at": "2021-01-11T05:37:24Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "It seems that GPUTreeShap gives different shap values from TreeShap, when using \r\nfeature_perturbation=\"interventional\", \r\nmodel_output=\"log_loss\".\r\n```\r\nfrom sklearn.model_selection import train_test_split\r\nimport lightgbm as lgb\r\nimport numpy as np\r\nfrom pprint import pprint\r\nimport shap\r\nimport time\r\n\r\n# # print the JS visualization code to the notebook\r\n# shap.initjs()\r\n\r\n## Load dataset\r\n\r\nX,y = shap.datasets.adult()\r\nX_display,y_display = shap.datasets.adult(display=True)\r\n\r\n# create a train/test split\r\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=7)\r\nd_train = lgb.Dataset(X_train, label=y_train)\r\nd_test = lgb.Dataset(X_test, label=y_test)\r\n\r\n## Train the model\r\n\r\nparams = {\r\n    \"max_bin\": 512,\r\n    \"learning_rate\": 0.05,\r\n    \"boosting_type\": \"gbdt\",\r\n    \"objective\": \"binary\",\r\n    \"metric\": \"binary_logloss\",\r\n    \"num_leaves\": 10,\r\n    \"verbose\": -1,\r\n    \"min_data\": 100,\r\n    \"boost_from_average\": True\r\n}\r\n\r\nmodel = lgb.train(params, d_train, 10000, valid_sets=[d_test], early_stopping_rounds=50, verbose_eval=1000)\r\n\r\n## Explain predictions\r\n\r\n# Here we use the Tree SHAP implementation integrated into Light GBM to explain the entire dataset (32561 samples).\r\ntrain_sample = X_train.sample(1000)\r\nloss_explainer = shap.TreeExplainer(model, train_sample, \r\n                            feature_perturbation=\"interventional\", \r\n                                  model_output=\"log_loss\")\r\nstart = time.process_time()\r\nshap_loss_values = loss_explainer.shap_values(X_test, y_test)\r\n\r\nprint(\"\\nSHAP values in CPU were estimated in %d sec.\" % (time.process_time() - start))\r\n\r\ngpu_loss_explainer = shap.GPUTreeExplainer(model, train_sample, \r\n                            feature_perturbation=\"interventional\", \r\n                                  model_output=\"log_loss\")\r\nstart = time.process_time()\r\nshap_loss_values_gpu = gpu_loss_explainer.shap_values(X_test, y_test)\r\nprint(\"\\nSHAP values in GPU were estimated in %d sec.\" % (time.process_time() - start))\r\n\r\nif not np.isclose(shap_loss_values_gpu, shap_loss_values).all():\r\n    print(\"\\nCAUTION: different SHAP values were obtained using GPU:\")\r\n    print(np.around(shap_loss_values_gpu - shap_loss_values, 2))\r\n\r\n```\r\n\r\n> \r\n> Training until validation scores don't improve for 50 rounds\r\n> Early stopping, best iteration is:\r\n> [644]\tvalid_0's binary_logloss: 0.278029\r\n> \r\n>  99%|===================| 6434/6513 [00:54<00:00]        \r\n> \r\n> \r\n> SHAP values in CPU were estimated in 53 sec.\r\n> \r\n> SHAP values in GPU were estimated in 1 sec.\r\n> \r\n> CAUTION: different SHAP values were obtained using GPU:\r\n> [[ 0.21  0.03  0.   ... -0.19  0.02  0.  ]\r\n>  [ 1.37  0.62  1.24 ... -0.1   1.48  0.02]\r\n>  [-1.45 -0.01  0.01 ... -0.06 -0.1   0.  ]\r\n>  ...\r\n>  [-2.55  0.11  0.11 ... -0.08 -0.79 -0.01]\r\n>  [-0.76 -0.11 -0.13 ... -0.06  0.06  0.26]\r\n>  [ 0.57  0.01  0.13 ... -0.02  0.11  0.02]]\r\n> ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1726/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1726/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
