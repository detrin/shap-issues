{
  "url": "https://api.github.com/repos/shap/shap/issues/1122",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1122/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1122/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1122/events",
  "html_url": "https://github.com/shap/shap/issues/1122",
  "id": 589430614,
  "node_id": "MDU6SXNzdWU1ODk0MzA2MTQ=",
  "number": 1122,
  "title": "Shap LSTM (Keras, TensorFlow) ValueError: shape mismatch: objects cannot be broadcast to a single shape",
  "user": {
    "login": "stringcode86",
    "id": 4541819,
    "node_id": "MDQ6VXNlcjQ1NDE4MTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4541819?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stringcode86",
    "html_url": "https://github.com/stringcode86",
    "followers_url": "https://api.github.com/users/stringcode86/followers",
    "following_url": "https://api.github.com/users/stringcode86/following{/other_user}",
    "gists_url": "https://api.github.com/users/stringcode86/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stringcode86/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stringcode86/subscriptions",
    "organizations_url": "https://api.github.com/users/stringcode86/orgs",
    "repos_url": "https://api.github.com/users/stringcode86/repos",
    "events_url": "https://api.github.com/users/stringcode86/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stringcode86/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-03-27T21:50:36Z",
  "updated_at": "2020-03-30T15:43:10Z",
  "closed_at": "2020-03-30T15:43:10Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Im trying to plot summary from simple LSTM model. Im getting `ValueError: shape mismatch: objects cannot be broadcast to a single shape` when calling shap.summary_plot. [Colab that reproduces the issue](https://colab.research.google.com/drive/1TnT6YVfp-VHyl3tf_C3_53a5XRYrhzK8)\r\n\r\n```\r\nimport numpy as np\r\nimport tensorflow as tf\r\nfrom tensorflow.keras.models import Sequential\r\nfrom tensorflow.keras.layers import Dense, Dropout, BatchNormalization, LSTM\r\nimport shap\r\n\r\n# Create random training values.\r\n#\r\n# train_x is [\r\n#   [\r\n#        [0.3, 0.54 ... 0.8],\r\n#        [0.4, 0.6 ... 0.55],\r\n#        ...\r\n#   ],\r\n#   [\r\n#        [0.3, 0.54 ... 0.8],\r\n#        [0.4, 0.6 ... 0.55],\r\n#        ...\r\n#   ],\r\n#   ...\r\n# ]\r\n#\r\n# train_y is corresponding classification of train_x sequences, always 0 or 1\r\n# [0, 1, 0, 1, 0, ... 0]\r\n\r\nSAMPLES_CNT = 1000\r\n\r\ntrain_x = np.random.rand(SAMPLES_CNT,5,4)\r\ntrain_y = np.vectorize(lambda x: int(round(x)))(np.random.rand(SAMPLES_CNT))\r\n\r\nval_x = np.random.rand(int(SAMPLES_CNT * 0.1),5,4)\r\nval_y = np.vectorize(lambda x: int(round(x)))(np.random.rand(int(SAMPLES_CNT * 0.1)))\r\n\r\n# Train model\r\n\r\nmodel = Sequential()\r\nmodel.add(LSTM(32,input_shape=train_x.shape[1:], return_sequences=False, stateful=False))\r\nmodel.add(Dense(1, activation='sigmoid'))\r\n\r\nmodel.compile(optimizer=tf.keras.optimizers.Adam(lr=0.001, decay=1e-6),\r\n              loss='binary_crossentropy',metrics=['accuracy'])\r\n\r\nfit = model.fit(train_x, train_y, batch_size=64, epochs=2, \r\n                validation_data=(val_x, val_y), shuffle=False)\r\n\r\nexplainer = shap.DeepExplainer(model, train_x[:10])\r\nshap_vals = explainer.shap_values(val_x[:10])\r\nshap.summary_plot(shap_vals, val_x[:10], plot_type=\"bar\")\r\n```\r\n\r\ncrashes with stack trace\r\n\r\n```\r\nValueError                                Traceback (most recent call last)\r\n\r\n<ipython-input-78-906a7898852e> in <module>\r\n----> 1 shap.summary_plot(shap_vals, val_x[:10], feature_names=feature_names, plot_type=\"bar\")\r\n      2 \r\n\r\n/usr/local/lib/python3.7/site-packages/shap/plots/summary.py in summary_plot(shap_values, features, feature_names, max_display, plot_type, color, axis_color, title, alpha, show, sort, color_bar, plot_size, layered_violin_max_num_bins, class_names, class_inds, color_bar_label, auto_size_plot)\r\n    442             pl.barh(\r\n    443                 y_pos, global_shap_values[feature_inds], 0.7, left=left_pos, align='center',\r\n--> 444                 color=color(i), label=class_names[ind]\r\n    445             )\r\n    446             left_pos += global_shap_values[feature_inds]\r\n\r\n/usr/local/lib/python3.7/site-packages/matplotlib/pyplot.py in barh(y, width, height, left, align, **kwargs)\r\n   2421 def barh(y, width, height=0.8, left=None, *, align='center', **kwargs):\r\n   2422     return gca().barh(\r\n-> 2423         y, width, height=height, left=left, align=align, **kwargs)\r\n   2424 \r\n   2425 \r\n\r\n/usr/local/lib/python3.7/site-packages/matplotlib/axes/_axes.py in barh(self, y, width, height, left, align, **kwargs)\r\n   2544         kwargs.setdefault('orientation', 'horizontal')\r\n   2545         patches = self.bar(x=left, height=height, width=width, bottom=y,\r\n-> 2546                            align=align, **kwargs)\r\n   2547         return patches\r\n   2548 \r\n\r\n/usr/local/lib/python3.7/site-packages/matplotlib/__init__.py in inner(ax, data, *args, **kwargs)\r\n   1563     def inner(ax, *args, data=None, **kwargs):\r\n   1564         if data is None:\r\n-> 1565             return func(ax, *map(sanitize_sequence, args), **kwargs)\r\n   1566 \r\n   1567         bound = new_sig.bind(ax, *args, **kwargs)\r\n\r\n/usr/local/lib/python3.7/site-packages/matplotlib/axes/_axes.py in bar(self, x, height, width, bottom, align, **kwargs)\r\n   2339         x, height, width, y, linewidth = np.broadcast_arrays(\r\n   2340             # Make args iterable too.\r\n-> 2341             np.atleast_1d(x), height, width, y, linewidth)\r\n   2342 \r\n   2343         # Now that units have been converted, set the tick locations.\r\n\r\n<__array_function__ internals> in broadcast_arrays(*args, **kwargs)\r\n\r\n/usr/local/lib/python3.7/site-packages/numpy/lib/stride_tricks.py in broadcast_arrays(*args, **kwargs)\r\n    262     args = [np.array(_m, copy=False, subok=subok) for _m in args]\r\n    263 \r\n--> 264     shape = _broadcast_shape(*args)\r\n    265 \r\n    266     if all(array.shape == shape for array in args):\r\n\r\n/usr/local/lib/python3.7/site-packages/numpy/lib/stride_tricks.py in _broadcast_shape(*args)\r\n    189     # use the old-iterator because np.nditer does not handle size 0 arrays\r\n    190     # consistently\r\n--> 191     b = np.broadcast(*args[:32])\r\n    192     # unfortunately, it cannot handle 32 or more arguments directly\r\n    193     for pos in range(32, len(args), 31):\r\n\r\nValueError: shape mismatch: objects cannot be broadcast to a single shape\r\n```\r\nUsing TensorFlow 1.15.2. Am I doing something wrong or is this a bug ?",
  "closed_by": {
    "login": "stringcode86",
    "id": 4541819,
    "node_id": "MDQ6VXNlcjQ1NDE4MTk=",
    "avatar_url": "https://avatars.githubusercontent.com/u/4541819?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/stringcode86",
    "html_url": "https://github.com/stringcode86",
    "followers_url": "https://api.github.com/users/stringcode86/followers",
    "following_url": "https://api.github.com/users/stringcode86/following{/other_user}",
    "gists_url": "https://api.github.com/users/stringcode86/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/stringcode86/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/stringcode86/subscriptions",
    "organizations_url": "https://api.github.com/users/stringcode86/orgs",
    "repos_url": "https://api.github.com/users/stringcode86/repos",
    "events_url": "https://api.github.com/users/stringcode86/events{/privacy}",
    "received_events_url": "https://api.github.com/users/stringcode86/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1122/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1122/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
