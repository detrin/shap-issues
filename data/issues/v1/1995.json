{
  "url": "https://api.github.com/repos/shap/shap/issues/1995",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1995/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1995/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1995/events",
  "html_url": "https://github.com/shap/shap/issues/1995",
  "id": 891906868,
  "node_id": "MDU6SXNzdWU4OTE5MDY4Njg=",
  "number": 1995,
  "title": "Slicing shapley values for multiple classes",
  "user": {
    "login": "lauritz1000",
    "id": 49445198,
    "node_id": "MDQ6VXNlcjQ5NDQ1MTk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/49445198?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lauritz1000",
    "html_url": "https://github.com/lauritz1000",
    "followers_url": "https://api.github.com/users/lauritz1000/followers",
    "following_url": "https://api.github.com/users/lauritz1000/following{/other_user}",
    "gists_url": "https://api.github.com/users/lauritz1000/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lauritz1000/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lauritz1000/subscriptions",
    "organizations_url": "https://api.github.com/users/lauritz1000/orgs",
    "repos_url": "https://api.github.com/users/lauritz1000/repos",
    "events_url": "https://api.github.com/users/lauritz1000/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lauritz1000/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-05-14T13:05:14Z",
  "updated_at": "2021-05-27T18:54:35Z",
  "closed_at": "2021-05-27T18:54:34Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I'm trying out the shap module for a RandomForestClassifier with a fairly simple dataset of 4 features and 3 classes, on 150 samples.\r\n\r\n```\r\n# load dataset\r\niris = sklearn.datasets.load_iris()\r\nX = iris.data\r\nY = iris.target\r\n\r\n# get test/train data split\r\nX_train, X_test, Y_train, Y_test = sklearn.model_selection.train_test_split(X, Y, train_size=0.80)\r\n\r\n# train random forest\r\nrf = sklearn.ensemble.RandomForestClassifier(n_estimators=500)\r\nrf.fit(X_train, Y_train)\r\n\r\n# create the shap explainer\r\nexplainer_shap = shap.explainers.Tree(rf)\r\nshap_values = explainer_shap(X_test)\r\n```\r\n\r\nMy issue is, because there are multiple classes, the dimensionality of the shap_values doesn't seem to fit for most of the plots. Each shap_values entry predicts for each of the 4 features for each of the 3 classes. So for a single sample it would look like this:\r\n\r\n```\r\nIn :  shap_values[0]\r\n\r\nOut:  .values =\r\n      array([[ 0.06525814, -0.03292662, -0.03233152],\r\n             [ 0.00759871, -0.00445447, -0.00314424],\r\n             [ 0.30288234, -0.16837527, -0.13450706],\r\n             [ 0.29476082, -0.12041031, -0.17435051]])\r\n         \r\n      .base_values =\r\n      array([0.3295    , 0.32616667, 0.34433333])\r\n         \r\n      .data =\r\n      array([5.1, 3.5, 1.4, 0.2])\r\n         \r\n```\r\n\r\nThat's why i came up with the idea of slicing the entire array of shapley values for every class by primitive means, as shown in the code below.\r\n\r\n```\r\n# get class-specific shapley descriptions\r\nshap_values_setosa = explainer_shap(X_test)\r\nshap_values_setosa.values = shap_values.values[:,:,0]\r\nshap_values_setosa.base_values = shap_values.base_values[:,0]\r\n```\r\n\r\nThis worked fine for the global predictions (e.g. with `shap.plots.bar(shap_values_setosa)`) but it seems as if my slicing has destroyed the Explanation-type array structure, and i cannot adress `shap_values_setosa[0]` anymore even though `shap_values_setosa` is correctly of shape (30,4). Thus i cannot call, for example, `shap.plots.waterfall(shap_values_setosa[0]`) because i would get the following error:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-302-273961a4718e> in <module>\r\n----> 1 shap_values_setosa[0]\r\n\r\n~/.local/lib/python3.9/site-packages/shap/_explanation.py in __getitem__(self, item)\r\n    316         # call slicer for the real work\r\n    317         new_self = copy.copy(self)\r\n--> 318         new_self._s = self._s.__getitem__(item)\r\n    319         new_self.op_history.append({\r\n    320             \"name\": \"__getitem__\",\r\n\r\n~/.local/lib/python3.9/site-packages/slicer/slicer.py in __getitem__(self, item)\r\n    110                 index_slicer = AtomicSlicer(index_tup, max_dim=1)\r\n    111                 slicer_index = index_slicer[tracked.dim]\r\n--> 112                 sliced_o = tracked[slicer_index]\r\n    113                 sliced_dim = resolve_dim(index_tup, tracked.dim)\r\n    114 \r\n\r\n~/.local/lib/python3.9/site-packages/slicer/slicer_internal.py in __getitem__(self, item)\r\n     64         \"\"\"\r\n     65         # Turn item into tuple if not already.\r\n---> 66         index_tup = unify_slice(item, self.max_dim)\r\n     67 \r\n     68         # Slice according to object type.\r\n\r\n~/.local/lib/python3.9/site-packages/slicer/slicer_internal.py in unify_slice(item, max_dim, alias_lookup)\r\n     83     item = _normalize_slice_key(item)\r\n     84     index_tup = _normalize_subkey_types(item)\r\n---> 85     index_tup = _handle_newaxis_ellipses(index_tup, max_dim)\r\n     86     if alias_lookup:\r\n     87         index_tup = _handle_aliases(index_tup, alias_lookup)\r\n\r\n~/.local/lib/python3.9/site-packages/slicer/slicer_internal.py in _handle_newaxis_ellipses(index_tup, max_dim)\r\n    176 \r\n    177     if len(index_list) > max_dim:  # pragma: no cover\r\n--> 178         raise IndexError(\"too many indices for array\")\r\n    179     while len(index_list) < max_dim:\r\n    180         index_list.append(slice(None))\r\n\r\nIndexError: too many indices for array\r\n```\r\n\r\nUnfortunately, local importance values are exactly what i want, because i want to compare the Shapley approach with my LIME's predictions. \r\n\r\nSo my questions are:\r\n- Can i reconstruct the Explanation-type array structure?\r\n- Is there a different way to get class-specific predictions from the shap explainers?\r\n- Or are there even possibilities in `shap.plots` to plot for multiple classes at once? I only tried `shap.multioutput_decision_plot` but it plotted absolute gibberish (it plotted 3 Features against 3 Features?)",
  "closed_by": {
    "login": "lauritz1000",
    "id": 49445198,
    "node_id": "MDQ6VXNlcjQ5NDQ1MTk4",
    "avatar_url": "https://avatars.githubusercontent.com/u/49445198?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lauritz1000",
    "html_url": "https://github.com/lauritz1000",
    "followers_url": "https://api.github.com/users/lauritz1000/followers",
    "following_url": "https://api.github.com/users/lauritz1000/following{/other_user}",
    "gists_url": "https://api.github.com/users/lauritz1000/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lauritz1000/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lauritz1000/subscriptions",
    "organizations_url": "https://api.github.com/users/lauritz1000/orgs",
    "repos_url": "https://api.github.com/users/lauritz1000/repos",
    "events_url": "https://api.github.com/users/lauritz1000/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lauritz1000/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1995/reactions",
    "total_count": 1,
    "+1": 1,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1995/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
