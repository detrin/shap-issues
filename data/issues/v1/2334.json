{
  "url": "https://api.github.com/repos/shap/shap/issues/2334",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/2334/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/2334/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/2334/events",
  "html_url": "https://github.com/shap/shap/issues/2334",
  "id": 1088166509,
  "node_id": "I_kwDOBHDcK85A3Bpt",
  "number": 2334,
  "title": "LightGBM shap_values output != XGBoost shap_values output for binary classification",
  "user": {
    "login": "TremaMiguel",
    "id": 49818188,
    "node_id": "MDQ6VXNlcjQ5ODE4MTg4",
    "avatar_url": "https://avatars.githubusercontent.com/u/49818188?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/TremaMiguel",
    "html_url": "https://github.com/TremaMiguel",
    "followers_url": "https://api.github.com/users/TremaMiguel/followers",
    "following_url": "https://api.github.com/users/TremaMiguel/following{/other_user}",
    "gists_url": "https://api.github.com/users/TremaMiguel/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/TremaMiguel/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/TremaMiguel/subscriptions",
    "organizations_url": "https://api.github.com/users/TremaMiguel/orgs",
    "repos_url": "https://api.github.com/users/TremaMiguel/repos",
    "events_url": "https://api.github.com/users/TremaMiguel/events{/privacy}",
    "received_events_url": "https://api.github.com/users/TremaMiguel/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2021-12-24T05:48:13Z",
  "updated_at": "2022-01-25T20:03:49Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Following the discussion in this [StackOverflow question](https://stackoverflow.com/questions/70450755/shap-xgboost-and-lightgbm-difference-in-shap-values-calculation/70464152#70464152) `shap.TreeExplainer.shap_values()` gives different results for `xgboost` and `lightgbm` for a binary classification task.\r\n\r\nThe output from `lightgbm` is list of length two, while the output from `xgboost` is a matrix of shape `(n_samples, n_features)`\r\n\r\n**Data Sample**\r\n\r\n```\r\n# test_data.csv\r\nCat1,Cat2,Age,Cat3,Cat4,target\r\n0,0,18,1,0,1\r\n0,0,17,1,0,0\r\n0,0,15,1,1,1\r\n0,0,15,1,0,0\r\n0,0,16,1,0,0\r\n0,1,16,1,1,1\r\n0,1,16,1,1,1\r\n0,0,17,1,0,1\r\n0,1,15,1,1,0\r\n0,1,15,1,0,1\r\n0,0,15,1,0,1\r\n0,0,15,1,0,0\r\n0,1,15,1,1,1\r\n0,1,15,1,0,1\r\n0,1,15,1,0,1\r\n0,0,16,1,0,1\r\n0,0,16,1,0,0\r\n0,0,16,1,0,0\r\n0,1,17,1,0,0\r\n0,1,16,1,1,1\r\n0,1,15,1,0,1\r\n0,1,15,1,0,1\r\n0,1,16,1,1,1\r\n0,1,16,1,1,1\r\n0,0,15,0,0,1\r\n0,0,16,1,0,1\r\n0,1,15,1,0,1\r\n```\r\n\r\n**Code Sample**\r\n\r\n```\r\nimport pandas as pd\r\nimport shap\r\nimport lightgbm as lgb\r\nimport xgboost as xgb \r\nfrom sklearn.model_selection import train_test_split\r\n\r\ndf = pd.read_csv(\"./mydataset.csv\")\r\ntarget=df.pop('target')\r\nX_train, X_test, y_train, y_test = train_test_split(df, target, test_size=0.5, random_state=22)\r\n\r\n# select one of the two models\r\nxgb_model = xgb.XGBClassifier()\r\nlgb_model = lgb.LGBMClassifier()\r\n\r\nxgb_model_fitted = xgb_model.fit(X_train, y_train)\r\nlgb_model_fitted = lgb_model.fit(X_train, y_train)\r\n\r\nxgb_explainer = shap.Explainer(xgb_model_fitted)\r\nxgb_shap_values = xgb_explainer.shap_values(X_test)\r\nxgb_shap_values\r\n>>>\r\n>>>\r\narray([[ 0.        , -0.35038763, -0.5808259 ,  0.        ,  0.        ],\r\n       [ 0.        , -0.35038763, -0.5808259 ,  0.        ,  0.        ],\r\n       [ 0.        ,  0.3065111 , -0.5808259 ,  0.        ,  0.        ],\r\n       [ 0.        , -0.35038763,  0.4087782 ,  0.        ,  0.        ],\r\n       [ 0.        ,  0.3065111 ,  0.4087782 ,  0.        ,  0.        ],\r\n       [ 0.        , -0.35038763, -0.5808259 ,  0.        ,  0.        ],\r\n       [ 0.        ,  0.3065111 ,  0.4087782 ,  0.        ,  0.        ],\r\n       [ 0.        ,  0.3065111 , -0.5808259 ,  0.        ,  0.        ],\r\n       [ 0.        ,  0.3065111 ,  0.4087782 ,  0.        ,  0.        ],\r\n       [ 0.        ,  0.3065111 , -0.5808259 ,  0.        ,  0.        ],\r\n       [ 0.        , -0.35038763,  0.4087782 ,  0.        ,  0.        ],\r\n       [ 0.        , -0.35038763,  0.4087782 ,  0.        ,  0.        ],\r\n       [ 0.        , -0.35038763, -0.5808259 ,  0.        ,  0.        ],\r\n       [ 0.        ,  0.3065111 , -0.5808259 ,  0.        ,  0.        ]],\r\n      dtype=float32)\r\n\r\nlgb_explainer = shap.Explainer(lgb_model_fitted)\r\nlgb_shap_values = lgb_explainer.shap_values(X_test)\r\nlgb_shap_values\r\n>>>\r\n[array([[0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.]]),\r\n array([[0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.],\r\n        [0., 0., 0., 0., 0.]])]\r\n\r\n```\r\n\r\n**What could be the issue**\r\n\r\nChecking the source code the main difference in calculation happens because after concatenating `phi` [here](https://github.com/slundberg/shap/blob/46b3800b31df04745416da27c71b216f91d61775/shap/explainers/_tree.py#L352) the shape differs with `X`, that is, `if phi.shape[1] != X.shape[1] + 1` is `True` and `phi` is reshape to a three dimensional array. \r\n```\r\nphi = phi.reshape(X.shape[0], phi.shape[1]//(X.shape[1]+1), X.shape[1]+1)\r\n```\r\nwhen the length of `phi` is three the output is a list of shape the number of target variable values (in this case two)\r\n\r\n```\r\nout = [phi[:, i, :-1] for i in range(phi.shape[1])]\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/2334/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/2334/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
