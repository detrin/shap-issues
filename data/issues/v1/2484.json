{
  "url": "https://api.github.com/repos/shap/shap/issues/2484",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/2484/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/2484/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/2484/events",
  "html_url": "https://github.com/shap/shap/issues/2484",
  "id": 1195170554,
  "node_id": "I_kwDOBHDcK85HPNr6",
  "number": 2484,
  "title": "SHAP All Positive",
  "user": {
    "login": "rm17tink",
    "id": 19717266,
    "node_id": "MDQ6VXNlcjE5NzE3MjY2",
    "avatar_url": "https://avatars.githubusercontent.com/u/19717266?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/rm17tink",
    "html_url": "https://github.com/rm17tink",
    "followers_url": "https://api.github.com/users/rm17tink/followers",
    "following_url": "https://api.github.com/users/rm17tink/following{/other_user}",
    "gists_url": "https://api.github.com/users/rm17tink/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/rm17tink/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/rm17tink/subscriptions",
    "organizations_url": "https://api.github.com/users/rm17tink/orgs",
    "repos_url": "https://api.github.com/users/rm17tink/repos",
    "events_url": "https://api.github.com/users/rm17tink/events{/privacy}",
    "received_events_url": "https://api.github.com/users/rm17tink/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-04-06T20:47:02Z",
  "updated_at": "2022-08-08T12:35:45Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "More of  a question but all my SHAP values are positive. Am I getting the values correct for the given model?  Is there a better way to get the class 1 variables for a light gbm \r\n\r\n\r\n```\r\nimport shap\r\nimport numpy as np\r\n\r\n# pass in model\r\nexplainer = shap.TreeExplainer(best_booster.booster_)\r\nshap_values = explainer.shap_values(X_train[cols_to_keep_sans_meg_1]) \r\n\r\n#shap values \r\nvals= np.abs(shap_values[1]).mean(0)\r\n\r\n#shap.summary_plot(shap_values, X_train[cols_to_keep])\r\n\r\n# Build a dataframe storing the SHAP\r\nfold_importance_df = pd.DataFrame()\r\nfold_importance_df[\"Feature\"] = X_train[cols_to_keep_sans_meg_1].columns.values\r\nfold_importance_df[\"Importance\"] = best_booster.feature_importances_\r\nfold_importance_df[\"shap_values\"] = vals\r\nfold_importance_df['coef'] = fold_importance_df.shap_values.map(lambda x: '+'if x>=0 else '-')\r\n# fold_importance_df.to_csv(\"shap_values.csv\")\r\n\r\nfold_importance_df.sort_values(by='Importance', ascending=False).head()\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/2484/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/2484/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
