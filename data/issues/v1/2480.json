{
  "url": "https://api.github.com/repos/shap/shap/issues/2480",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/2480/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/2480/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/2480/events",
  "html_url": "https://github.com/shap/shap/issues/2480",
  "id": 1194276552,
  "node_id": "I_kwDOBHDcK85HLzbI",
  "number": 2480,
  "title": "Shap on pyspark doesn't work with a loaded model",
  "user": {
    "login": "BDon-Tan",
    "id": 12856975,
    "node_id": "MDQ6VXNlcjEyODU2OTc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/12856975?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/BDon-Tan",
    "html_url": "https://github.com/BDon-Tan",
    "followers_url": "https://api.github.com/users/BDon-Tan/followers",
    "following_url": "https://api.github.com/users/BDon-Tan/following{/other_user}",
    "gists_url": "https://api.github.com/users/BDon-Tan/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/BDon-Tan/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/BDon-Tan/subscriptions",
    "organizations_url": "https://api.github.com/users/BDon-Tan/orgs",
    "repos_url": "https://api.github.com/users/BDon-Tan/repos",
    "events_url": "https://api.github.com/users/BDon-Tan/events{/privacy}",
    "received_events_url": "https://api.github.com/users/BDon-Tan/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-04-06T08:42:39Z",
  "updated_at": "2022-09-22T17:42:37Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi, all\r\n     I followed the code in test_trees.py. However, I got an error with a loaded pyspark model. But the trained pyspark model works well.  The error is:\r\n\r\n~~~ bash\r\nAssertionError: The background dataset you provided does not cover all the leaves in the model, so TreeExplainer cannot run with the feature_perturbation=\"tree_path_dependent\" option! Try providing a larger background dataset, no background dataset, or using feature_perturbation=\"interventional\".\r\n~~~\r\n\r\nIt seems fully_defined_weighting turns to be False while loading the saved model, which it will be True if the model was trained. There should be somethings wrong with SingleTree class but I couldn't correct them (I guess node_sample_weight is the key).\r\n~~~ bash\r\nIn [84]: explainer_train.model.fully_defined_weighting\r\nOut[84]: True\r\n\r\nIn [85]: explainer_model.model.fully_defined_weighting\r\nOut[85]: False\r\n\r\n~~~\r\n\r\n~~~ python\r\n                # ensure that the passed background dataset lands in every leaf\r\n                if np.min(self.trees[i].node_sample_weight) <= 0:\r\n                    self.fully_defined_weighting = False\r\n~~~\r\n\r\nThe code I used is below:\r\n\r\n    iris_sk = sklearn.datasets.load_iris()\r\n    iris = pd.DataFrame(data=np.c_[iris_sk['data'], iris_sk['target']],\r\n                        columns=iris_sk['feature_names'] + ['target'])[:100]\r\n    col = [\"sepal_length\", \"sepal_width\", \"petal_length\", \"petal_width\", \"type\"]\r\n    iris = spark.createDataFrame(iris, col)\r\n    pipeline = PipelineModel.load(\"/user/tanbingdong/iris_pipeline\")\r\n    model = GBTClassificationModel.load(\"/user/tanbingdong/iris_gbt.model\")\r\n\r\n    va = VectorAssembler(inputCols=col[:-1], outputCol=\"features\")\r\n    si = StringIndexer(inputCol=\"type\", outputCol=\"label\")\r\n    gbt = GBTClassifier(labelCol=\"label\", featuresCol=\"features\")\r\n\r\n    pipe = Pipeline(stages=[va, si, gbt])\r\n    pipeline_train = pipe.fit(iris)\r\n\r\n    explainer_train = shap.TreeExplainer(pipeline_train.stages[-1])\r\n    explainer_pipeline = shap.TreeExplainer(pipeline.stages[-1])\r\n    explainer_model = shap.TreeExplainer(model)\r\n\r\n    X = pd.DataFrame(data=iris_sk.data, columns=iris_sk.feature_names)[:100]\r\n\r\n    shap_values_train = explainer_train.shap_values(X)\r\n    shap_values_pipeline = explainer_pipeline.shap_values(X)\r\n    shap_values_model = explainer_model.shap_values(X)\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/2480/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/2480/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
