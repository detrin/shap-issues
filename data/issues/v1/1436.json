{
  "url": "https://api.github.com/repos/shap/shap/issues/1436",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1436/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1436/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1436/events",
  "html_url": "https://github.com/shap/shap/issues/1436",
  "id": 702640152,
  "node_id": "MDU6SXNzdWU3MDI2NDAxNTI=",
  "number": 1436,
  "title": "shap with autogluon (ensemble) model",
  "user": {
    "login": "tvkpz",
    "id": 8055298,
    "node_id": "MDQ6VXNlcjgwNTUyOTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/8055298?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tvkpz",
    "html_url": "https://github.com/tvkpz",
    "followers_url": "https://api.github.com/users/tvkpz/followers",
    "following_url": "https://api.github.com/users/tvkpz/following{/other_user}",
    "gists_url": "https://api.github.com/users/tvkpz/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tvkpz/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tvkpz/subscriptions",
    "organizations_url": "https://api.github.com/users/tvkpz/orgs",
    "repos_url": "https://api.github.com/users/tvkpz/repos",
    "events_url": "https://api.github.com/users/tvkpz/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tvkpz/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 3,
  "created_at": "2020-09-16T10:17:05Z",
  "updated_at": "2022-10-18T14:31:32Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I am trying to use shap with autogluon (ensemble) models. The following code for creating the explainer works:\r\n```\r\ncolumns = df_train.columns\r\ndef f(X):\r\n    df = pd.DataFrame(X, columns=columns)\r\n    return predictor.predict(df)\r\nX = np.array(df_train.values.tolist())\r\nexplainer = shap.KernelExplainer(f, X)\r\n```\r\n\r\nHowever when I try to create the shap_values it throws me some errors (see below). Any advice what is wrong.\r\n```\r\nX_test = np.array(test_data.values.tolist())\r\nshap_values = explainer.shap_values(X_test[10,:], nsamples=1000)\r\n```\r\nError Trace\r\n```\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\n<ipython-input-190-a158594a246f> in <module>\r\n      1 X_test = np.array(test_data.values.tolist())\r\n      2 print(type(X_test[:1]))\r\n----> 3 shap_values = explainer.shap_values(X_test[:2,:], nsamples=1000)\r\n\r\n~/SageMaker/autogluon-tabular_2020-09-11/package/shap/explainers/_kernel.py in shap_values(self, X, **kwargs)\r\n    176                 if self.keep_index:\r\n    177                     data = convert_to_instance_with_index(data, column_name, index_value[i:i + 1], index_name)\r\n--> 178                 explanations.append(self.explain(data, **kwargs))\r\n    179 \r\n    180             # vector-output\r\n\r\n~/SageMaker/autogluon-tabular_2020-09-11/package/shap/explainers/_kernel.py in explain(self, incoming_instance, **kwargs)\r\n    197         # convert incoming input to a standardized iml object\r\n    198         instance = convert_to_instance(incoming_instance)\r\n--> 199         match_instance_to_data(instance, self.data)\r\n    200 \r\n    201         # find the feature groups we will test. If a feature does not change from its\r\n\r\n~/SageMaker/autogluon-tabular_2020-09-11/package/shap/utils/_legacy.py in match_instance_to_data(instance, data)\r\n     85     if isinstance(data, DenseData):\r\n     86         if instance.group_display_values is None:\r\n---> 87             instance.group_display_values = [instance.x[0, group[0]] if len(group) == 1 else \"\" for group in data.groups]\r\n     88         assert len(instance.group_display_values) == len(data.groups)\r\n     89         instance.groups = data.groups\r\n\r\n~/SageMaker/autogluon-tabular_2020-09-11/package/shap/utils/_legacy.py in <listcomp>(.0)\r\n     85     if isinstance(data, DenseData):\r\n     86         if instance.group_display_values is None:\r\n---> 87             instance.group_display_values = [instance.x[0, group[0]] if len(group) == 1 else \"\" for group in data.groups]\r\n     88         assert len(instance.group_display_values) == len(data.groups)\r\n     89         instance.groups = data.groups\r\n\r\nIndexError: index 826 is out of bounds for axis 1 with size 826\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1436/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1436/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
