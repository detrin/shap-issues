{
  "url": "https://api.github.com/repos/shap/shap/issues/2673",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/2673/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/2673/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/2673/events",
  "html_url": "https://github.com/shap/shap/issues/2673",
  "id": 1364555023,
  "node_id": "I_kwDOBHDcK85RVXUP",
  "number": 2673,
  "title": "Re-scaling of target variable problematic with shap values",
  "user": {
    "login": "klerings",
    "id": 43270158,
    "node_id": "MDQ6VXNlcjQzMjcwMTU4",
    "avatar_url": "https://avatars.githubusercontent.com/u/43270158?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/klerings",
    "html_url": "https://github.com/klerings",
    "followers_url": "https://api.github.com/users/klerings/followers",
    "following_url": "https://api.github.com/users/klerings/following{/other_user}",
    "gists_url": "https://api.github.com/users/klerings/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/klerings/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/klerings/subscriptions",
    "organizations_url": "https://api.github.com/users/klerings/orgs",
    "repos_url": "https://api.github.com/users/klerings/repos",
    "events_url": "https://api.github.com/users/klerings/events{/privacy}",
    "received_events_url": "https://api.github.com/users/klerings/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-09-07T11:58:51Z",
  "updated_at": "2023-06-16T09:03:02Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "**Problem/Question:**\r\nTraining a simple feed-forward network on a regression problem with one output variable and using sklearn's 'MinMaxScaler' to transform the target variable for training. After prediction, ``scaler.inverse_transform`` is used to rescale the predictions into the correct output range. However, the shap-values plus expected value don't add up to the re-scaled prediction anymore.\r\n\r\n**Idea/Solution:**\r\nI have seen this question [here](https://github.com/slundberg/shap/issues/1033), where a similar issue is discussed, but the conclusion \"calling inverse_transform on the shap_values should always work (just remember to also call it on the expected_value)\" doesn't produce the expected result. Since the issue is already a bit outdated, I was wondering whether anyone else encountered a similar challenge in the meantime and could share a minimal code example maybe?\r\n\r\nAlso wondering, whether a possible alternative way would be to not call inverse_transform on the shap and expected value but to use the shap percentage shares from the scaled output, to infer their percentage shares on the re-scaled output?\r\n\r\nThankful, for any response.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/2673/reactions",
    "total_count": 2,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/2673/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
