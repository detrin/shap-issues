{
  "url": "https://api.github.com/repos/shap/shap/issues/3044",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/3044/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/3044/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/3044/events",
  "html_url": "https://github.com/shap/shap/pull/3044",
  "id": 1774994236,
  "node_id": "PR_kwDOBHDcK85T7pzq",
  "number": 3044,
  "title": "FIX: Add fixture to set pyspark python driver",
  "user": {
    "login": "connortann",
    "id": 71127464,
    "node_id": "MDQ6VXNlcjcxMTI3NDY0",
    "avatar_url": "https://avatars.githubusercontent.com/u/71127464?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/connortann",
    "html_url": "https://github.com/connortann",
    "followers_url": "https://api.github.com/users/connortann/followers",
    "following_url": "https://api.github.com/users/connortann/following{/other_user}",
    "gists_url": "https://api.github.com/users/connortann/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/connortann/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/connortann/subscriptions",
    "organizations_url": "https://api.github.com/users/connortann/orgs",
    "repos_url": "https://api.github.com/users/connortann/repos",
    "events_url": "https://api.github.com/users/connortann/events{/privacy}",
    "received_events_url": "https://api.github.com/users/connortann/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 486901329,
      "node_id": "MDU6TGFiZWw0ODY5MDEzMjk=",
      "url": "https://api.github.com/repos/shap/shap/labels/bug",
      "name": "bug",
      "color": "ee0701",
      "default": true,
      "description": "Indicates an unexpected problem or unintended behaviour"
    }
  ],
  "state": "closed",
  "locked": false,
  "assignee": {
    "login": "connortann",
    "id": 71127464,
    "node_id": "MDQ6VXNlcjcxMTI3NDY0",
    "avatar_url": "https://avatars.githubusercontent.com/u/71127464?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/connortann",
    "html_url": "https://github.com/connortann",
    "followers_url": "https://api.github.com/users/connortann/followers",
    "following_url": "https://api.github.com/users/connortann/following{/other_user}",
    "gists_url": "https://api.github.com/users/connortann/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/connortann/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/connortann/subscriptions",
    "organizations_url": "https://api.github.com/users/connortann/orgs",
    "repos_url": "https://api.github.com/users/connortann/repos",
    "events_url": "https://api.github.com/users/connortann/events{/privacy}",
    "received_events_url": "https://api.github.com/users/connortann/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "connortann",
      "id": 71127464,
      "node_id": "MDQ6VXNlcjcxMTI3NDY0",
      "avatar_url": "https://avatars.githubusercontent.com/u/71127464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/connortann",
      "html_url": "https://github.com/connortann",
      "followers_url": "https://api.github.com/users/connortann/followers",
      "following_url": "https://api.github.com/users/connortann/following{/other_user}",
      "gists_url": "https://api.github.com/users/connortann/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/connortann/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/connortann/subscriptions",
      "organizations_url": "https://api.github.com/users/connortann/orgs",
      "repos_url": "https://api.github.com/users/connortann/repos",
      "events_url": "https://api.github.com/users/connortann/events{/privacy}",
      "received_events_url": "https://api.github.com/users/connortann/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2023-06-26T14:59:44Z",
  "updated_at": "2023-06-27T20:31:06Z",
  "closed_at": "2023-06-27T20:30:59Z",
  "author_association": "COLLABORATOR",
  "active_lock_reason": null,
  "draft": false,
  "pull_request": {
    "url": "https://api.github.com/repos/shap/shap/pulls/3044",
    "html_url": "https://github.com/shap/shap/pull/3044",
    "diff_url": "https://github.com/shap/shap/pull/3044.diff",
    "patch_url": "https://github.com/shap/shap/pull/3044.patch",
    "merged_at": "2023-06-27T20:30:58Z"
  },
  "body": "Closes #3012\r\n\r\nThe cibuildwheel on Windows is currently failing due to a pyspark error, as the works have a different python version than the driver. This PR adds a fixture to fix this via environment variables.\r\n\r\nExample runs:\r\nhttps://github.com/slundberg/shap/actions/workflows/build_wheels.yml\r\n\r\nPrevious failing test:\r\n\r\n<details>\r\n\r\n```\r\n================================== FAILURES ===================================\r\n  ____________________ test_pyspark_classifier_decision_tree ____________________\r\n  \r\n      def test_pyspark_classifier_decision_tree():\r\n          # pylint: disable=bare-except\r\n          pyspark = pytest.importorskip(\"pyspark\")\r\n          pytest.importorskip(\"pyspark.ml\")\r\n          try:\r\n              spark = pyspark.sql.SparkSession.builder.config(\r\n                  conf=pyspark.SparkConf().set(\"spark.master\", \"local[*]\")).getOrCreate()\r\n          except:\r\n              pytest.skip(\"Could not create pyspark context\")\r\n      \r\n          iris_sk = sklearn.datasets.load_iris()\r\n          iris = pd.DataFrame(data=np.c_[iris_sk['data'], iris_sk['target']],\r\n                              columns=iris_sk['feature_names'] + ['target'])[:100]\r\n          col = [\"sepal_length\", \"sepal_width\", \"petal_length\", \"petal_width\", \"type\"]\r\n          iris = spark.createDataFrame(iris, col)\r\n          iris = pyspark.ml.feature.VectorAssembler(inputCols=col[:-1], outputCol=\"features\").transform(\r\n              iris)\r\n  >       iris = pyspark.ml.feature.StringIndexer(inputCol=\"type\", outputCol=\"label\").fit(iris).transform(\r\n              iris)\r\n  \r\n  D:\\a\\shap\\shap\\tests\\explainers\\test_tree.py:223: \r\n  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n  ..\\venv-test\\lib\\site-packages\\pyspark\\ml\\base.py:205: in fit\r\n      return self._fit(dataset)\r\n  ..\\venv-test\\lib\\site-packages\\pyspark\\ml\\wrapper.py:381: in _fit\r\n      java_model = self._fit_java(dataset)\r\n  ..\\venv-test\\lib\\site-packages\\pyspark\\ml\\wrapper.py:378: in _fit_java\r\n      return self._java_obj.fit(dataset._jdf)\r\n  ..\\venv-test\\lib\\site-packages\\py4j\\java_gateway.py:1322: in __call__\r\n      return_value = get_return_value(\r\n  ..\\venv-test\\lib\\site-packages\\pyspark\\errors\\exceptions\\captured.py:169: in deco\r\n      return f(*a, **kw)\r\n  _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n  \r\n  answer = 'xro79'\r\n  gateway_client = <py4j.clientserver.JavaClient object at 0x000001D8A0997130>\r\n  target_id = 'o63', name = 'fit'\r\n  \r\n      def get_return_value(answer, gateway_client, target_id=None, name=None):\r\n          \"\"\"Converts an answer received from the Java gateway into a Python object.\r\n      \r\n          For example, string representation of integers are converted to Python\r\n          integer, string representation of objects are converted to JavaObject\r\n          instances, etc.\r\n      \r\n          :param answer: the string returned by the Java gateway\r\n          :param gateway_client: the gateway client used to communicate with the Java\r\n              Gateway. Only necessary if the answer is a reference (e.g., object,\r\n              list, map)\r\n          :param target_id: the name of the object from which the answer comes from\r\n              (e.g., *object1* in `object1.hello()`). Optional.\r\n          :param name: the name of the member from which the answer comes from\r\n              (e.g., *hello* in `object1.hello()`). Optional.\r\n          \"\"\"\r\n          if is_error(answer)[0]:\r\n              if len(answer) > 1:\r\n                  type = answer[1]\r\n                  value = OUTPUT_CONVERTER[type](answer[2:], gateway_client)\r\n                  if answer[1] == REFERENCE_TYPE:\r\n  >                   raise Py4JJavaError(\r\n                          \"An error occurred while calling {0}{1}{2}.\\n\".\r\n                          format(target_id, \".\", name), value)\r\n  E                   py4j.protocol.Py4JJavaError: An error occurred while calling o63.fit.\r\n  E                   : org.apache.spark.SparkException: Job aborted due to stage failure: Task 0 in stage 0.0 failed 1 times, most recent failure: Lost task 0.0 in stage 0.0 (TID 0) (fv-az411-556.4oxf4n2mvjkerjqzlchgjvcyfa.gx.internal.cloudapp.net executor driver): org.apache.spark.api.python.PythonException: Traceback (most recent call last):\r\n  E                     File \"C:\\Users\\runneradmin\\AppData\\Local\\Temp\\cibw-run-6cnzsr1v\\cp38-win_amd64\\venv-test\\Lib\\site-packages\\pyspark\\python\\lib\\pyspark.zip\\pyspark\\worker.py\", line 683, in main\r\n  E                   RuntimeError: Python in worker has different version 3.9 than that in driver 3.8, PySpark cannot run with different minor versions. Please check environment variables PYSPARK_PYTHON and PYSPARK_DRIVER_PYTHON are correctly set.\r\n```\r\n\r\n</details>",
  "closed_by": {
    "login": "connortann",
    "id": 71127464,
    "node_id": "MDQ6VXNlcjcxMTI3NDY0",
    "avatar_url": "https://avatars.githubusercontent.com/u/71127464?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/connortann",
    "html_url": "https://github.com/connortann",
    "followers_url": "https://api.github.com/users/connortann/followers",
    "following_url": "https://api.github.com/users/connortann/following{/other_user}",
    "gists_url": "https://api.github.com/users/connortann/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/connortann/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/connortann/subscriptions",
    "organizations_url": "https://api.github.com/users/connortann/orgs",
    "repos_url": "https://api.github.com/users/connortann/repos",
    "events_url": "https://api.github.com/users/connortann/events{/privacy}",
    "received_events_url": "https://api.github.com/users/connortann/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/3044/reactions",
    "total_count": 2,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 2,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/3044/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
