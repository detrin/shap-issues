{
  "url": "https://api.github.com/repos/shap/shap/issues/545",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/545/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/545/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/545/events",
  "html_url": "https://github.com/shap/shap/issues/545",
  "id": 431627188,
  "node_id": "MDU6SXNzdWU0MzE2MjcxODg=",
  "number": 545,
  "title": "Using SHAP values to estimate value add of a feature",
  "user": {
    "login": "ytsaig",
    "id": 1490131,
    "node_id": "MDQ6VXNlcjE0OTAxMzE=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1490131?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/ytsaig",
    "html_url": "https://github.com/ytsaig",
    "followers_url": "https://api.github.com/users/ytsaig/followers",
    "following_url": "https://api.github.com/users/ytsaig/following{/other_user}",
    "gists_url": "https://api.github.com/users/ytsaig/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/ytsaig/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/ytsaig/subscriptions",
    "organizations_url": "https://api.github.com/users/ytsaig/orgs",
    "repos_url": "https://api.github.com/users/ytsaig/repos",
    "events_url": "https://api.github.com/users/ytsaig/events{/privacy}",
    "received_events_url": "https://api.github.com/users/ytsaig/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-04-10T17:36:42Z",
  "updated_at": "2023-08-26T09:12:39Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Thank you for all the work on this package, it is a fantastic contribution to the ML community!\r\n\r\nI have a conceptual question on whether there's a way to use SHAP values to assess the marginal contribution of a new feature to an existing set of features. To make things concrete: suppose we have a model with 100 features, and I construct a 101th feature. I'm interested in estimating the the value add of the 101th feature to the generalization power of the model. While I don't have a formal definition in mind, here's one (inefficient) way to estimate it: \r\n1. Train first model on existing features, compute accuracy on validation set (or via CV).\r\n2. Train second model on existing features + 101th feature, compute accuracy on validation set.\r\n3. Use the difference in accuracies as the value add of the 101th feature.\r\n\r\nThis approach is not scalable, but quite useful in understanding the contribution of features to prediction accuracy. When thinking about using SHAP values to get a similar result, I see two issues:\r\n1. SHAP doesn't know anything about model generalization, by construction. To alleviate that, we can assume that the expected training error is a good estimate of the generalization error, i.e., that a decrease in training loss implies a decrease in validation loss.\r\n2. The bigger issue is that, as pointed out in [#288](https://github.com/slundberg/shap/issues/288#issuecomment-457916528), Shapley values distribute credit among correlated features. For example, if feature 101 is some linear combination of the first 100 features, it will be assigned some non-zero aggregate SHAP value, though by definition it does not contribute to model accuracy.\r\n\r\nI'm wondering if you have any suggestions or thoughts on how to calculate feature \"value add\" using SHAP?\r\n\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/545/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/545/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
