{
  "url": "https://api.github.com/repos/shap/shap/issues/593",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/593/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/593/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/593/events",
  "html_url": "https://github.com/shap/shap/issues/593",
  "id": 444828518,
  "node_id": "MDU6SXNzdWU0NDQ4Mjg1MTg=",
  "number": 593,
  "title": "DeepExplainer fails for PyTorch Pretrained Alexnet Model",
  "user": {
    "login": "kracekumar",
    "id": 311929,
    "node_id": "MDQ6VXNlcjMxMTkyOQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/311929?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kracekumar",
    "html_url": "https://github.com/kracekumar",
    "followers_url": "https://api.github.com/users/kracekumar/followers",
    "following_url": "https://api.github.com/users/kracekumar/following{/other_user}",
    "gists_url": "https://api.github.com/users/kracekumar/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kracekumar/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kracekumar/subscriptions",
    "organizations_url": "https://api.github.com/users/kracekumar/orgs",
    "repos_url": "https://api.github.com/users/kracekumar/repos",
    "events_url": "https://api.github.com/users/kracekumar/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kracekumar/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2019-05-16T08:45:04Z",
  "updated_at": "2019-05-16T15:12:17Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "```python\r\nfrom torchvision import transforms\r\nimport torchvision.models as models\r\n\r\nfrom torch.utils.data.dataset import Dataset\r\nfrom torch.utils.data import DataLoader\r\n\r\nalexnet = models.alexnet(pretrained=True).eval()\r\ntransforms = transforms.Compose([\r\n            transforms.ToTensor(),\r\n            #transforms.Normalize([0.5, 0.5, 0.5], [0.5, 0.5, 0.5])\r\n        ])\r\ndataloader = DataLoader(ImageDataset('images', transforms=transforms), batch_size=16)\r\nbatch = next(iter(dataloader))\r\nimages, _ = batch\r\ne = shap.DeepExplainer(alexnet, images[0:1])\r\nshap_values = e.shap_values(images[1:])\r\n````\r\n\r\nThe output of the `e.shap_values` call is below\r\n```\r\nWarning: unrecognized nn.Module: <class 'type'>\r\nWarning: unrecognized nn.Module: <class 'type'>\r\nWarning: unrecognized nn.Module: <class 'type'>\r\n...\r\n```\r\n\r\nThe architecture of alexnet \r\n\r\n```python\r\nprint(alexnet)\r\nAlexNet(\r\n  (features): Sequential(\r\n    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))\r\n    (1): ReLU(inplace)\r\n    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)\r\n    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))\r\n    (4): ReLU(inplace)\r\n    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)\r\n    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\r\n    (7): ReLU(inplace)\r\n    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\r\n    (9): ReLU(inplace)\r\n    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))\r\n    (11): ReLU(inplace)\r\n    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)\r\n  )\r\n  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))\r\n  (classifier): Sequential(\r\n    (0): Dropout(p=0.5)\r\n    (1): Linear(in_features=9216, out_features=4096, bias=True)\r\n    (2): ReLU(inplace)\r\n    (3): Dropout(p=0.5)\r\n    (4): Linear(in_features=4096, out_features=4096, bias=True)\r\n    (5): ReLU(inplace)\r\n    (6): Linear(in_features=4096, out_features=1000, bias=True)\r\n  )\r\n)\r\n# Custom dataset definition\r\nfrom PIL import Image\r\nclass ImageDataset(Dataset):\r\n    def __init__(self, path, transforms):\r\n        self.path = Path(path)\r\n        self.items = list(self.path.glob('*.jpg'))\r\n        self.transforms = transforms\r\n\r\n    def __getitem__(self, index):\r\n        path = self.items[index]\r\n        im = Image.open(path).convert('RGB')\r\n        im = np.asarray(im.resize((227,227)))\r\n        return self.transforms(im), path.name\r\n    \r\n    def __len__(self):\r\n        return len(self.items)\r\n\r\ntransforms = transforms.Compose([\r\n            transforms.ToTensor(),\r\n            #transforms.Normalize([0.5, 0.5, 0.5], [0.5, 0.5, 0.5])\r\n        ])\r\n\r\n```\r\n\r\nMaybe [AdaptiveAvgPool2d](https://pytorch.org/docs/stable/nn.html#adaptiveavgpool2d) used in alexnet architecture is missing `op_handlers`. This happens for pre trained models like `vgg16, resnet, inception_v3`.\r\n\r\nWhat could be the reason for the failure?",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/593/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/593/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
