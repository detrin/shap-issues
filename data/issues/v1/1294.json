{
  "url": "https://api.github.com/repos/shap/shap/issues/1294",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1294/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1294/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1294/events",
  "html_url": "https://github.com/shap/shap/issues/1294",
  "id": 646092914,
  "node_id": "MDU6SXNzdWU2NDYwOTI5MTQ=",
  "number": 1294,
  "title": "SHAP values for aleatoric and epistemic uncertainties",
  "user": {
    "login": "astrogilda",
    "id": 23521054,
    "node_id": "MDQ6VXNlcjIzNTIxMDU0",
    "avatar_url": "https://avatars.githubusercontent.com/u/23521054?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/astrogilda",
    "html_url": "https://github.com/astrogilda",
    "followers_url": "https://api.github.com/users/astrogilda/followers",
    "following_url": "https://api.github.com/users/astrogilda/following{/other_user}",
    "gists_url": "https://api.github.com/users/astrogilda/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/astrogilda/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/astrogilda/subscriptions",
    "organizations_url": "https://api.github.com/users/astrogilda/orgs",
    "repos_url": "https://api.github.com/users/astrogilda/repos",
    "events_url": "https://api.github.com/users/astrogilda/events{/privacy}",
    "received_events_url": "https://api.github.com/users/astrogilda/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2020-06-26T08:15:24Z",
  "updated_at": "2020-06-26T08:15:24Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hello,\r\n\r\nThis related in part to #1025. The uncertainty coming from ngboost is aleatoric uncertainty; to get epistemic, a simple way is to bootstrap. Since this is a `post-processing' method, is there a way to get SHAP values for epistemic uncertainties using TreeExplainer?\r\n\r\nPlease let me know if the above is not clear and you'd like me to expand.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1294/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1294/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
