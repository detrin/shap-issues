{
  "url": "https://api.github.com/repos/shap/shap/issues/1378",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1378/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1378/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1378/events",
  "html_url": "https://github.com/shap/shap/issues/1378",
  "id": 682843906,
  "node_id": "MDU6SXNzdWU2ODI4NDM5MDY=",
  "number": 1378,
  "title": "TreeExplainer efficiency fail points to bug with XGBoost model loading",
  "user": {
    "login": "HughChen",
    "id": 3814434,
    "node_id": "MDQ6VXNlcjM4MTQ0MzQ=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3814434?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/HughChen",
    "html_url": "https://github.com/HughChen",
    "followers_url": "https://api.github.com/users/HughChen/followers",
    "following_url": "https://api.github.com/users/HughChen/following{/other_user}",
    "gists_url": "https://api.github.com/users/HughChen/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/HughChen/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/HughChen/subscriptions",
    "organizations_url": "https://api.github.com/users/HughChen/orgs",
    "repos_url": "https://api.github.com/users/HughChen/repos",
    "events_url": "https://api.github.com/users/HughChen/events{/privacy}",
    "received_events_url": "https://api.github.com/users/HughChen/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 2,
  "created_at": "2020-08-20T15:57:50Z",
  "updated_at": "2020-08-27T00:18:17Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I noticed a bug with efficiency that I isolated to the following example:\r\n\r\n```python\r\nfrom sklearn.model_selection import train_test_split\r\nimport shap, sklearn, xgboost\r\nimport numpy as np\r\n\r\n# Make the problem a binary prediction\r\nX_train,X_test,Y_train,Y_test = train_test_split(*shap.datasets.iris(), \r\n                                                 test_size=0.2, \r\n                                                 random_state=0)\r\nY_train[Y_train==2] = 0\r\nY_test[Y_test==2] = 0\r\n\r\n# Fit XGB model\r\nmodel = xgboost.XGBClassifier(objective=\"binary:logistic\", max_depth=4, n_estimators=10)\r\nmodel.fit(X_train, Y_train)\r\n\r\n# Explain\r\nexplainer   = shap.TreeExplainer(model, X_test, feature_dependence=\"interventional\")\r\nshap_values = explainer.shap_values(X_test)\r\n\r\n# Prediction minus baseline\r\n# Mostly sums up to the right thing - there is a bug with the 8th element though\r\npred_minus_base = np.round(shap_values.sum(1) + explainer.expected_value - \\\r\n                           model.predict(X_test, output_margin=True), 5)\r\nprint(pred_minus_base) \r\n```\r\n\r\nTo look into it a bit further, I tried checking additivity using the parsed XGBoost model as follows:\r\n```python\r\npred_minus_base = np.round(shap_values.sum(1) + explainer.expected_value - \\\r\n                           explainer.model.predict(X_test),5)\r\nprint(pred_minus_base)\r\n```\r\n\r\nAnd this passes efficiency which suggests to me there is a bug with the TreeEnsemble TreeExplainer is loading.  I'm using xgboost version 1.0.2.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1378/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1378/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
