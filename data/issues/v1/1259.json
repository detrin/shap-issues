{
  "url": "https://api.github.com/repos/shap/shap/issues/1259",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1259/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1259/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1259/events",
  "html_url": "https://github.com/shap/shap/issues/1259",
  "id": 635192660,
  "node_id": "MDU6SXNzdWU2MzUxOTI2NjA=",
  "number": 1259,
  "title": "keras is no longer supported, please use tf.keras instead.",
  "user": {
    "login": "lineho",
    "id": 58538129,
    "node_id": "MDQ6VXNlcjU4NTM4MTI5",
    "avatar_url": "https://avatars.githubusercontent.com/u/58538129?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/lineho",
    "html_url": "https://github.com/lineho",
    "followers_url": "https://api.github.com/users/lineho/followers",
    "following_url": "https://api.github.com/users/lineho/following{/other_user}",
    "gists_url": "https://api.github.com/users/lineho/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/lineho/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/lineho/subscriptions",
    "organizations_url": "https://api.github.com/users/lineho/orgs",
    "repos_url": "https://api.github.com/users/lineho/repos",
    "events_url": "https://api.github.com/users/lineho/events{/privacy}",
    "received_events_url": "https://api.github.com/users/lineho/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-06-09T07:46:27Z",
  "updated_at": "2023-04-13T08:31:43Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hello, I am a student who learns by watching dipshap on this site(https://towardsdatascience.com/interpretability-of-deep-learning-models-9f52e54d72ab). I can't do this part well, can you help me?\r\nKeras changed, but the error continues.\r\n:\r\n`\r\nimport pandas as pd\r\nimport seaborn as sns\r\nimport keras\r\nimport shap\r\nimport sklearn\r\nfrom sklearn import model_selection\r\nimport tensorflow as tf\r\nfrom tensorflow.keras.layers import Input, Dense, BatchNormalization\r\nfrom tensorflow.keras.models import Model\r\nfrom tensorflow.keras.callbacks import EarlyStopping\r\nimport matplotlib.pyplot as plt\r\n\r\ndf=sns.load_dataset(name='diamonds')\r\nprint(df.head())\r\nprint(df.describe()) \r\n\r\nX = df.drop('price',axis=1)\r\nY = df.price\r\n\r\nX[['cut','color','clarity']] = X[['cut','color','clarity']].astype('category')\r\n.\r\n\r\ncut_cat_map = [x for x in zip(X.cut.cat.categories,X.cut.cat.codes.unique() )]\r\ncolor_cat_map = [x for x in zip(X.color.cat.categories,X.cut.cat.codes.unique() )]\r\nclarity_cat_map = [x for x in zip(X.clarity.cat.categories,X.cut.cat.codes.unique() )]\r\nprint('cut_cat_map:' , cut_cat_map)\r\nprint('color_cat_map: ',color_cat_map)\r\nprint('clarity_cat_map: ', clarity_cat_map)\r\n\r\nX[['cut','color','clarity']] = X[['cut','color','clarity']].apply(lambda c : c.cat.codes)\r\n\r\nX_train, X_test, Y_train, Y_test = model_selection.train_test_split(X, Y, test_size = 0.33, random_state = 5)\r\nprint('X_train: ', X_train.shape)\r\nprint('X_test: ', X_test.shape)\r\nprint('Y_train: ', Y_train.shape)\r\nprint('Y_test: ', Y_test.shape)\r\n\r\ninputs = Input(shape=(X_train.shape[1],), name='input')\r\n\r\nx = BatchNormalization(name='input_bn')(inputs)\r\n\r\nx = Dense(X_train.shape[1], activation='relu', name='first')(x)\r\nx = Dense(64, activation='relu',name='second')(x)\r\nx = Dense(X_train.shape[1], activation='elu',name='last')(x)\r\n\r\npredictions = Dense(1, activation='relu', name='ouput')(x)\r\n\r\nmodel = Model(inputs=inputs, outputs=predictions)\r\nmodel.compile(optimizer='adam',\r\n              loss='mape')\r\nmodel.fit(X_train,\r\n          Y_train,\r\n          epochs = 100,\r\n          batch_size = 1000,\r\n          validation_data = (X_test,Y_test),\r\n          shuffle=True,\r\n          callbacks=[EarlyStopping(monitor='val_loss', patience=1,)])\r\n\r\n\r\nval_loss = model.history.history['val_loss']\r\nloss = model.history.history['loss']\r\n\r\nprint(model.summary())\r\n\r\nplt.figure()\r\nplt.plot(val_loss, label='val_loss')\r\nplt.plot(loss, label = 'loss')\r\nplt.legend()\r\nplt.show()\r\n\r\nshap.initjs()\r\n\r\nexplainer_shap = shap.DeepExplainer(model=model,data=X_train)\r\n\r\nshap_values = explainer_shap.shap_values(X=X_train.values[:500],ranked_outputs=True)\r\n`\r\n\r\nand error said\r\n\r\nkeras is no longer supported, please use tf.keras instead.\r\nYou have provided over 5k background samples! For better performance consider using smaller random sample.\r\nTraceback (most recent call last):\r\n  File \"F:/dropbox/Dropbox/Coding/python/study/deep-learning/DeepSHAP/DeepSHAP.py\", line 110, in <module>\r\n  File \"C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\shap\\explainers\\deep\\__init__.py\", line 119, in shap_values\r\n    return self.explainer.shap_values(X, ranked_outputs, output_rank_order, check_additivity=check_additivity)\r\n  File \"C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\shap\\explainers\\deep\\deep_tf.py\", line 304, in shap_values\r\n    sample_phis = self.run(self.phi_symbolic(feature_ind), self.model_inputs, joint_input)\r\n  File \"C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\shap\\explainers\\deep\\deep_tf.py\", line 361, in run\r\n    return self.execute_with_overridden_gradients(anon)\r\n  File \"C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\shap\\explainers\\deep\\deep_tf.py\", line 397, in execute_with_overridden_gradients\r\n    out = f()\r\n  File \"C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\shap\\explainers\\deep\\deep_tf.py\", line 357, in anon\r\n    final_out = out(inputs)\r\n  File \"C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\tensorflow\\python\\eager\\def_function.py\", line 580, in __call__\r\n    result = self._call(*args, **kwds)\r\n  File \"C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\tensorflow\\python\\eager\\def_function.py\", line 627, in _call\r\n    self._initialize(args, kwds, add_initializers_to=initializers)\r\n  File \"C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\tensorflow\\python\\eager\\def_function.py\", line 505, in _initialize\r\n    self._stateful_fn._get_concrete_function_internal_garbage_collected(  # pylint: disable=protected-access\r\n  File \"C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\tensorflow\\python\\eager\\function.py\", line 2446, in _get_concrete_function_internal_garbage_collected\r\n    graph_function, _, _ = self._maybe_define_function(args, kwargs)\r\n  File \"C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\tensorflow\\python\\eager\\function.py\", line 2777, in _maybe_define_function\r\n    graph_function = self._create_graph_function(args, kwargs)\r\n  File \"C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\tensorflow\\python\\eager\\function.py\", line 2657, in _create_graph_function\r\n    func_graph_module.func_graph_from_py_func(\r\n  File \"C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\tensorflow\\python\\framework\\func_graph.py\", line 981, in func_graph_from_py_func\r\n    func_outputs = python_func(*func_args, **func_kwargs)\r\n  File \"C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\tensorflow\\python\\eager\\def_function.py\", line 441, in wrapped_fn\r\n    return weak_wrapped_fn().__wrapped__(*args, **kwds)\r\n  File \"C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\tensorflow\\python\\framework\\func_graph.py\", line 968, in wrapper\r\n    raise e.ag_error_metadata.to_exception(e)\r\ntensorflow.python.autograph.impl.api.StagingError: in user code:\r\n\r\n    C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\shap\\explainers\\deep\\deep_tf.py:244 grad_graph  *\r\n        x_grad = tape.gradient(out, shap_rAnD)\r\n    C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\tensorflow\\python\\eager\\backprop.py:1042 gradient  **\r\n        flat_grad = imperative_grad.imperative_grad(\r\n    C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\tensorflow\\python\\eager\\imperative_grad.py:71 imperative_grad\r\n        return pywrap_tfe.TFE_Py_TapeGradient(\r\n    C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\tensorflow\\python\\eager\\backprop.py:145 _gradient_function\r\n        grad_fn = ops._gradient_registry.lookup(op_name)  # pylint: disable=protected-access\r\n    C:\\Users\\e\\anaconda3\\envs\\torch\\lib\\site-packages\\tensorflow\\python\\framework\\registry.py:96 lookup\r\n        raise LookupError(\r\n\r\n    LookupError: gradient registry has no entry for: shap_AddV2",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1259/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1259/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
