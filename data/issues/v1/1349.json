{
  "url": "https://api.github.com/repos/shap/shap/issues/1349",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1349/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1349/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1349/events",
  "html_url": "https://github.com/shap/shap/issues/1349",
  "id": 674395401,
  "node_id": "MDU6SXNzdWU2NzQzOTU0MDE=",
  "number": 1349,
  "title": "SamplingExplainer draws incorrect number of samples.",
  "user": {
    "login": "tcbegley",
    "id": 15220906,
    "node_id": "MDQ6VXNlcjE1MjIwOTA2",
    "avatar_url": "https://avatars.githubusercontent.com/u/15220906?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/tcbegley",
    "html_url": "https://github.com/tcbegley",
    "followers_url": "https://api.github.com/users/tcbegley/followers",
    "following_url": "https://api.github.com/users/tcbegley/following{/other_user}",
    "gists_url": "https://api.github.com/users/tcbegley/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/tcbegley/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/tcbegley/subscriptions",
    "organizations_url": "https://api.github.com/users/tcbegley/orgs",
    "repos_url": "https://api.github.com/users/tcbegley/repos",
    "events_url": "https://api.github.com/users/tcbegley/events{/privacy}",
    "received_events_url": "https://api.github.com/users/tcbegley/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2020-08-06T15:19:28Z",
  "updated_at": "2020-09-18T22:26:18Z",
  "closed_at": "2020-09-18T22:26:18Z",
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "The `SamplingExplainer` doesn't draw the number of samples specified by the `nsamples` keyword argument in the `.shap_values` method. \r\n\r\nThe reason is in [these two lines](https://github.com/slundberg/shap/blob/0.35.0/shap/explainers/sampling.py#L115-L116). During the second round of sampling, remaining samples are allocated to features according to variance in estimates from the first round of sampling, represented by `phi_var` which has shape `(n_features, n_model_outputs)`. `phi_var` is first normalised by `phi_var.sum()`, then the number of samples for each feature is weighted by `phi_var.mean(1)`, i.e. the mean (taken over model outputs) variance for that feature. However since the entire array has been normalised to sum to 1, the columns sum to `1 / n_model_outputs` rather than `1`, resulting in the number of samples for round two being dramatically reduced.\r\n\r\nHere's a minimal example using a simple MNIST classifier. In the second round, the number of remaining samples is reduced by 90% (as the model has 10-dimensional output) resulting in a fraction of the requested samples being drawn. I wrote a little wrapper class to keep track of both the number of times the model is evaluated and the number of data points it is evaluated on.\r\n\r\n```python\r\nimport numpy as np\r\nimport shap\r\nimport tensorflow as tf\r\n\r\n# load MNIST data from Keras\r\n(x_train, y_train), (x_test, y_test) = tf.keras.datasets.mnist.load_data()\r\n\r\nx_train = x_train.reshape(-1, 784).astype(np.float32) / 255\r\ny_train = y_train.astype(np.int32)\r\nx_test = x_test.reshape(-1, 784).astype(np.float32) / 255\r\ny_test = y_test.astype(np.int32)\r\n\r\n# train simple feed forward network\r\nmodel = tf.keras.Sequential([\r\n    tf.keras.layers.Dense(100, activation=\"relu\"),\r\n    tf.keras.layers.Dense(10, activation=\"softmax\"),\r\n])\r\n\r\nmodel.compile(\r\n    tf.optimizers.Adam(),\r\n    \"sparse_categorical_crossentropy\",\r\n    metrics=[\"accuracy\"],\r\n)\r\n\r\nmodel.fit(\r\n    x_train,\r\n    y_train, \r\n    batch_size=128,\r\n    validation_split=0.25,\r\n    epochs=200,\r\n    callbacks=[tf.keras.callbacks.EarlyStopping(patience=2, restore_best_weights=True)],\r\n)\r\n\r\n# wrap model.predict to keep track of how many model evaluations and how many\r\n# spliced data points are passed to the model for evaluation\r\nclass PredictCounter:\r\n    def __init__(self, predict_fn):\r\n        self.predict_fn = predict_fn\r\n        self.reset()\r\n    \r\n    def __call__(self, x, *args, **kwargs):\r\n        self.eval_count += 1\r\n        self.rows += x.shape[0]\r\n        return self.predict_fn(x, *args, **kwargs)\r\n    \r\n    def reset(self):\r\n        self.eval_count = 0\r\n        self.rows = 0\r\n\r\n\r\nmodel.predict = PredictCounter(model.predict)\r\n\r\n# create the explainer\r\nexplainer = shap.SamplingExplainer(model.predict, x_test)\r\n\r\n# sample the Shapley values for a particular data point\r\nres = explainer.shap_values(x_test[0], nsamples=500_000)\r\n\r\n# report model evaluations and number of data points evaluated\r\nprint(\"Evaluation count:\", model.predict.eval_count)\r\nprint(\"Rows evaluated:\", model.predict.rows)\r\n```\r\n\r\nThe output I got was \r\n\r\n```\r\nEvaluation count: 1338\r\nRows evaluated: 121433\r\n```\r\n\r\nShowing that the model was evaluated on 120k spliced data points rather than the expected and requested 500k.\r\n\r\nI have submitted #1350 to address this issue.\r\n\r\nAs a side note, I notice that the number of samples that this method will produce is actually `nsamples // 2`, as model evaluations with the feature of interest turned on and turned off are [counted separately](https://github.com/slundberg/shap/blob/0.35.0/shap/explainers/sampling.py#L173-L174). I would have expected a sample to correspond to a single coalition of features and the difference in resulting model evaluations. Would be happy to include a fix to that also in my PR if you think it's worth correcting.",
  "closed_by": {
    "login": "slundberg",
    "id": 3740613,
    "node_id": "MDQ6VXNlcjM3NDA2MTM=",
    "avatar_url": "https://avatars.githubusercontent.com/u/3740613?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/slundberg",
    "html_url": "https://github.com/slundberg",
    "followers_url": "https://api.github.com/users/slundberg/followers",
    "following_url": "https://api.github.com/users/slundberg/following{/other_user}",
    "gists_url": "https://api.github.com/users/slundberg/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/slundberg/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/slundberg/subscriptions",
    "organizations_url": "https://api.github.com/users/slundberg/orgs",
    "repos_url": "https://api.github.com/users/slundberg/repos",
    "events_url": "https://api.github.com/users/slundberg/events{/privacy}",
    "received_events_url": "https://api.github.com/users/slundberg/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1349/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1349/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
