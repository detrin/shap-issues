{
  "url": "https://api.github.com/repos/shap/shap/issues/2898",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/2898/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/2898/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/2898/events",
  "html_url": "https://github.com/shap/shap/issues/2898",
  "id": 1659949161,
  "node_id": "I_kwDOBHDcK85i8NBp",
  "number": 2898,
  "title": "Use text template to explain sequential model for recommendations",
  "user": {
    "login": "kan5",
    "id": 61619826,
    "node_id": "MDQ6VXNlcjYxNjE5ODI2",
    "avatar_url": "https://avatars.githubusercontent.com/u/61619826?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kan5",
    "html_url": "https://github.com/kan5",
    "followers_url": "https://api.github.com/users/kan5/followers",
    "following_url": "https://api.github.com/users/kan5/following{/other_user}",
    "gists_url": "https://api.github.com/users/kan5/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kan5/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kan5/subscriptions",
    "organizations_url": "https://api.github.com/users/kan5/orgs",
    "repos_url": "https://api.github.com/users/kan5/repos",
    "events_url": "https://api.github.com/users/kan5/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kan5/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": true,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2023-04-09T17:40:29Z",
  "updated_at": "2023-06-16T23:20:31Z",
  "closed_at": "2023-06-16T23:20:31Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "I use RecBole lib to implement sequential model [BERT4Rec](https://recbole.io/docs/user_guide/model/sequential/bert4rec.html).  \r\n\r\nRec model input: list of items.\r\nRec model output: array with shape (all_item_num)\r\n\r\nI tried to change the standard input of the model to a text input to fit the multi-class text classification problem.\r\nFor this I made my own function using the [tutorial](https://shap.readthedocs.io/en/latest/example_notebooks/text_examples/sentiment_analysis/Using%20custom%20functions%20and%20tokenizers.html).\r\n\r\nYou can run it on kaggle: https://www.kaggle.com/code/payngay/anime-recommender-recbole-with-shap\r\n\r\n```python\r\ndef f(sequences):\r\n    print(sequences)\r\n    # future output 2d-array\r\n    out = []\r\n    proc_sequences = []\r\n    # i don't know if it's correct to change strokes in this way\r\n    for seq in sequences:\r\n        seq = seq.replace('...', '')\r\n        seq = seq.split()\r\n        seq = list(map(int, seq))\r\n        proc_sequences.append(seq)\r\n    # applying model for each sequence with closed items\r\n    for seq in proc_sequences:\r\n        if len(seq) == 0:\r\n            seq = [0]\r\n            len_seq = 0\r\n        len_seq = len(seq)\r\n        input_inter = Interaction({\r\n            'user_id': torch.tensor([1]),\r\n            'anime_id_list': torch.tensor([seq]),\r\n            'item_length': torch.tensor([len_seq]),\r\n            })\r\n        with torch.no_grad():\r\n            scores = model.full_sort_predict(input_inter)\r\n            # predictions for 10 items for simplify output\r\n            out.append(scores[0][:10].numpy())\r\n    return np.array(out)\r\n\r\n\r\nmasker = shap.maskers.Text(r\"\\W\") # this will create a basic whitespace tokenizer\r\nexplainer = shap.Explainer(f, masker)\r\n\r\nshap_values = explainer(['5 13 23 43'])\r\nprint(shap_values)\r\nshap.plots.text(shap_values)\r\n```\r\n### Every input array for func f when i calling explainer \r\n```\r\n['...']\r\n['5 13 23 43']\r\n['5 13 ...' '...23 43']\r\n['5 ...' '...13 ...' '5 ...23 43' '...13 23 43' '5 13 23 ...' '5 13 ...43']\r\n['...23 ...' '...43']\r\n```\r\n### Explainer output:\r\n```\r\n.values =\r\narray([[[-7.29364038e-01,  6.33913875e-01,  3.06767166e-01,\r\n          5.47838673e-01, -4.79293227e-01,  5.97867481e-01,\r\n          4.52940829e-01, -4.58241999e-02,  6.36546075e-01,\r\n          4.77575630e-01],\r\n        [ 5.61337829e-01, -2.03750122e+00, -1.11684850e+00,\r\n         -1.86921732e+00,  8.70344520e-01, -1.09398686e+00,\r\n         -1.92754234e+00, -4.23363656e-01, -1.78751212e+00,\r\n         -1.63428947e+00],\r\n        [-4.06678915e-02,  6.12927675e-02,  2.17219517e-02,\r\n          5.36474288e-02, -3.40525508e-02,  4.00626063e-02,\r\n          5.31172156e-02, -5.63263893e-04,  5.68146110e-02,\r\n          3.87389213e-02],\r\n        [-3.82922888e-02,  6.39134645e-02,  2.30076090e-02,\r\n          5.62215149e-02, -3.38643193e-02,  4.03074622e-02,\r\n          5.62291741e-02,  1.09529495e-03,  5.86182475e-02,\r\n          4.09799069e-02]]])\r\n\r\n.base_values =\r\narray([[-7.06466484,  3.53171921,  0.71773797,  3.05890965, -3.16552186,\r\n         1.5206027 ,  2.77057242, -1.25324082,  2.98390007,  1.62703848]])\r\n\r\n.data =\r\n(array(['5 ', '13 ', '23 ', '43'], dtype=object),)\r\n```\r\n\r\n### Questions:\r\nWhat are these dots in [input arrays for func f when i calling explainer](#every-input-array-for-func-f-when-i-calling-explainer)?\r\nIs it correct to predict values just by throwing out these dots?\r\nAre there ways to solve the problem of interpreting predictions in a better way?\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/2898/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/2898/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
