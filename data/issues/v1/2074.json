{
  "url": "https://api.github.com/repos/shap/shap/issues/2074",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/2074/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/2074/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/2074/events",
  "html_url": "https://github.com/shap/shap/issues/2074",
  "id": 936484813,
  "node_id": "MDU6SXNzdWU5MzY0ODQ4MTM=",
  "number": 2074,
  "title": "Coalitional Methods to Reduce Computation Time",
  "user": {
    "login": "BrunoBarre",
    "id": 50590102,
    "node_id": "MDQ6VXNlcjUwNTkwMTAy",
    "avatar_url": "https://avatars.githubusercontent.com/u/50590102?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/BrunoBarre",
    "html_url": "https://github.com/BrunoBarre",
    "followers_url": "https://api.github.com/users/BrunoBarre/followers",
    "following_url": "https://api.github.com/users/BrunoBarre/following{/other_user}",
    "gists_url": "https://api.github.com/users/BrunoBarre/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/BrunoBarre/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/BrunoBarre/subscriptions",
    "organizations_url": "https://api.github.com/users/BrunoBarre/orgs",
    "repos_url": "https://api.github.com/users/BrunoBarre/repos",
    "events_url": "https://api.github.com/users/BrunoBarre/events{/privacy}",
    "received_events_url": "https://api.github.com/users/BrunoBarre/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2021-07-04T15:41:50Z",
  "updated_at": "2021-07-04T15:41:50Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi and thanks again for your great work :+1: \r\n\r\nThis is not really an issue but I just found a paper I think present interesting ideas/methods that could be applied to SHAP, especially for KernelSHAP : [https://arxiv.org/abs/2104.00765](https://arxiv.org/abs/2104.00765)\r\n\r\nThey have a different strategy for computing influence (ie \"SHAP values\") by retraining several models on data with only a subset of the explanatory variables (named \"coalition\"). \r\nEven if this is not related _a priori_ to SHAP since it requires retraining, their method consisting in the elimination of some \"useless\" coalitions/subsets (throught grouping techniques such as PCA, VIF, Spearman, etc) might be of great interest, in order to avoid some computations that do not brought enough information/gain to the results (ie influences).\r\n\r\nCouldn't it be also applied to SHAP computation (especially Kernel method)? \r\nEven if this now would be an approximation of actual SHAP values (which is already in a sense an approximation of actual Shapley values), the results from the paper show that these coalitional based methods are an efficient approximation of actual _complete_ influences (ie computed over all subsets/coalitions of features/explanatory variables).\r\n\r\nWhat do you think of this paper and their method? Would it be applicable to SHAP?\r\n\r\nThanks again",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/2074/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/2074/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
