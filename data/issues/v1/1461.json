{
  "url": "https://api.github.com/repos/shap/shap/issues/1461",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1461/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1461/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1461/events",
  "html_url": "https://github.com/shap/shap/issues/1461",
  "id": 707573782,
  "node_id": "MDU6SXNzdWU3MDc1NzM3ODI=",
  "number": 1461,
  "title": "KernelShap Issue when adding a new variable",
  "user": {
    "login": "BrunoBarre",
    "id": 50590102,
    "node_id": "MDQ6VXNlcjUwNTkwMTAy",
    "avatar_url": "https://avatars.githubusercontent.com/u/50590102?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/BrunoBarre",
    "html_url": "https://github.com/BrunoBarre",
    "followers_url": "https://api.github.com/users/BrunoBarre/followers",
    "following_url": "https://api.github.com/users/BrunoBarre/following{/other_user}",
    "gists_url": "https://api.github.com/users/BrunoBarre/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/BrunoBarre/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/BrunoBarre/subscriptions",
    "organizations_url": "https://api.github.com/users/BrunoBarre/orgs",
    "repos_url": "https://api.github.com/users/BrunoBarre/repos",
    "events_url": "https://api.github.com/users/BrunoBarre/events{/privacy}",
    "received_events_url": "https://api.github.com/users/BrunoBarre/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-09-23T18:10:22Z",
  "updated_at": "2020-09-24T09:05:34Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hello, I have problems with a particular way of dealing with shap (kernelshap more specifically).\r\n\r\nI have a regression problem, with two variables x1 and x2. x1 is continuous while x2 only takes values 0 or 1.\r\n\r\nI first trained a model (linear regression) on it. Then I wanted to see the difference of the output according to x2, while keeping x1 unchanging. It means that I \"manually\" set x2 to 0 at first, then see the difference when x2 is equals to 1.\r\n\r\nTo see the impact of the variable x1 on this difference, I set up a \"new model\" which means a class, that takes a trained model as parameter, then returns the difference. Then I wanted to put kernelshap on it.\r\nBut apparently, there is a problem with kernelshap, linked to the fact that in the prediction method of my class, I set up a new column, which represents the variable x2.\r\n\r\nMy code is just below.\r\nMy real problem is more complex than that, but the error is reproductible with that following code. Is there a way to deal with it (right now, without having to change the shap code package)?\r\n\r\n```\r\nimport numpy as np\r\nimport pandas as pd\r\nfrom sklearn.linear_model import LinearRegression\r\nimport shap\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nn = 1000\r\n\r\nx1 = np.random.normal(2, 3, n)\r\nx2 = np.random.binomial(1, 0.7, n)  #just 0 or 1\r\n\r\nX = pd.DataFrame({\"x1\":x1, \"x2\":x2})\r\n\r\n\r\ny = 3*x1 + 4*x2 + np.random.normal(0, 1, n)\r\n\r\n\r\n\r\n\r\nlinear_regression = LinearRegression()\r\nlinear_regression.fit(X, y)\r\n\r\nprint(linear_regression.coef_, \"\\n\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n### Value according to value of x2 (0 or 1)\r\n\r\nX_x2_equals_0 = X.copy().replace( { \"x2\":{1:0} } )\r\nX_x2_equals_1 = X.copy().replace( { \"x2\":{0:1} } )\r\n\r\nprint(X_x2_equals_0[\"x2\"].unique(), X_x2_equals_1[\"x2\"].unique(), \"\\n\")\r\n\r\n\r\ndifferences = linear_regression.predict(X_x2_equals_1) - linear_regression.predict(X_x2_equals_0)\r\nprint(differences[:10], \"\\n\")\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Test_Difference_x2 :\r\n    \r\n    def __init__( self, trained_linear_regression, list_variables ) :\r\n        self.trained_linear_regression_ = trained_linear_regression\r\n        self.list_variables_ = list_variables\r\n    \r\n    \r\n    \r\n    def predict_difference( self, df_only_x1 ) :\r\n        df_ = df_only_x1.copy()\r\n        df_[\"x2\"] = 0\r\n        df_ = df_.reindex(columns=self.list_variables_)\r\n        \r\n        ##### x2 == 0\r\n        y_when_x2_equals_0 = self.trained_linear_regression_.predict( df_ )\r\n        \r\n        ##### x2 == 1\r\n        y_when_x2_equals_1 = self.trained_linear_regression_.predict( df_.replace( { \"x2\":{0:1} } ) )\r\n        \r\n        \r\n        return y_when_x2_equals_1 - y_when_x2_equals_0\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\nmy_list_variables = X.columns.to_list()\r\nprint(my_list_variables, \"\\n\")\r\n\r\n\r\n\r\n\r\nmodel_Test_Difference_x2 = Test_Difference_x2(linear_regression, my_list_variables)\r\n\r\ndifference_Test = model_Test_Difference_x2.predict_difference(X.drop(\"x2\", axis=1))\r\nprint(difference_Test[:10], \"\\n\")\r\n\r\n\r\n\r\n\r\nkernelshap_explainer = shap.KernelExplainer( model_Test_Difference_x2.predict_difference, \r\n                                            data=X.drop(\"x2\", axis=1) )\r\n```\r\n\r\n\r\n\r\nThanks a lot for any suggestion of question! ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1461/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1461/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
