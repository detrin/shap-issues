{
  "url": "https://api.github.com/repos/shap/shap/issues/1479",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1479/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1479/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1479/events",
  "html_url": "https://github.com/shap/shap/issues/1479",
  "id": 709954570,
  "node_id": "MDU6SXNzdWU3MDk5NTQ1NzA=",
  "number": 1479,
  "title": "Deep Explainer fails on Resnet50 pretrained model.",
  "user": {
    "login": "giangnguyen2412",
    "id": 30857111,
    "node_id": "MDQ6VXNlcjMwODU3MTEx",
    "avatar_url": "https://avatars.githubusercontent.com/u/30857111?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/giangnguyen2412",
    "html_url": "https://github.com/giangnguyen2412",
    "followers_url": "https://api.github.com/users/giangnguyen2412/followers",
    "following_url": "https://api.github.com/users/giangnguyen2412/following{/other_user}",
    "gists_url": "https://api.github.com/users/giangnguyen2412/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/giangnguyen2412/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/giangnguyen2412/subscriptions",
    "organizations_url": "https://api.github.com/users/giangnguyen2412/orgs",
    "repos_url": "https://api.github.com/users/giangnguyen2412/repos",
    "events_url": "https://api.github.com/users/giangnguyen2412/events{/privacy}",
    "received_events_url": "https://api.github.com/users/giangnguyen2412/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 19,
  "created_at": "2020-09-28T05:48:59Z",
  "updated_at": "2023-06-28T06:06:44Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "My code to run Deep Explainer on some Imagenet images is as follows:\r\n```python3\r\nimport glob\r\n# load the model\r\nmodel = models.resnet50(pretrained=True).eval()\r\n\r\n# Get the prediction for the input image\r\ntest_image_paths = glob.glob('/home/dexter/Downloads/Exp1/Exp1-1 100/*.*')\r\ntest_images = list(map(lambda x: Image.open(x), test_image_paths))\r\ntest_inputs  = [Compose([Resize((224,224)), ToTensor(), image_net_preprocessing])(x).unsqueeze(0) for x in test_images]  # add 1 dim for batch\r\n# test_inputs = [i.to(device) for i in test_inputs]\r\n\r\nbackground = torch.cat(test_inputs[:10])\r\ntest_images = torch.cat(test_inputs[10:12])\r\n\r\n\r\nprint(type(background))\r\nprint(background.shape)\r\nprint(type(test_images))\r\nprint(test_images.shape[0])\r\n    \r\n# Tracer()()\r\ne = shap.DeepExplainer(model, background)\r\n# Tracer()()\r\nprint(e)\r\nshap_values = e.shap_values(test_images) --> Error on this line\r\n```\r\n\r\nHowever, when I run this, I receive error on the last line about the size of input tensors. Can any one help me solve this problem?\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\n<ipython-input-3-8c5fd1ae491a> in <module>\r\n     26 # Tracer()()\r\n     27 print(e)\r\n---> 28 shap_values = e.shap_values(test_images)\r\n\r\n~/miniconda3/envs/advanced_ml/lib/python3.6/site-packages/shap/explainers/_deep/__init__.py in shap_values(self, X, ranked_outputs, output_rank_order, check_additivity)\r\n    117         were chosen as \"top\".\r\n    118         \"\"\"\r\n--> 119         return self.explainer.shap_values(X, ranked_outputs, output_rank_order, check_additivity=check_additivity)\r\n\r\n~/miniconda3/envs/advanced_ml/lib/python3.6/site-packages/shap/explainers/_deep/deep_pytorch.py in shap_values(self, X, ranked_outputs, output_rank_order, check_additivity)\r\n    183                 # run attribution computation graph\r\n    184                 feature_ind = model_output_ranks[j, i]\r\n--> 185                 sample_phis = self.gradient(feature_ind, joint_x)\r\n    186                 # assign the attributions to the right part of the output arrays\r\n    187                 if self.interim:\r\n\r\n~/miniconda3/envs/advanced_ml/lib/python3.6/site-packages/shap/explainers/_deep/deep_pytorch.py in gradient(self, idx, inputs)\r\n    121                 grad = torch.autograd.grad(selected, x,\r\n    122                                            retain_graph=True if idx + 1 < len(X) else None,\r\n--> 123                                            allow_unused=True)[0]\r\n    124                 if grad is not None:\r\n    125                     grad = grad.cpu().numpy()\r\n\r\n~/miniconda3/envs/advanced_ml/lib/python3.6/site-packages/torch/autograd/__init__.py in grad(outputs, inputs, grad_outputs, retain_graph, create_graph, only_inputs, allow_unused)\r\n    147     return Variable._execution_engine.run_backward(\r\n    148         outputs, grad_outputs, retain_graph, create_graph,\r\n--> 149         inputs, allow_unused)\r\n    150 \r\n    151 \r\n\r\n~/miniconda3/envs/advanced_ml/lib/python3.6/site-packages/shap/explainers/_deep/deep_pytorch.py in deeplift_grad(module, grad_input, grad_output)\r\n    224     if module_type in op_handler:\r\n    225         if op_handler[module_type].__name__ not in ['passthrough', 'linear_1d']:\r\n--> 226             return op_handler[module_type](module, grad_input, grad_output)\r\n    227     else:\r\n    228         print('Warning: unrecognized nn.Module: {}'.format(module_type))\r\n\r\n~/miniconda3/envs/advanced_ml/lib/python3.6/site-packages/shap/explainers/_deep/deep_pytorch.py in nonlinear_1d(module, grad_input, grad_output)\r\n    356     grads = [None for _ in grad_input]\r\n    357     grads[0] = torch.where(torch.abs(delta_in.repeat(dup0)) < 1e-6, grad_input[0],\r\n--> 358                            grad_output[0] * (delta_out / delta_in).repeat(dup0))\r\n    359     return tuple(grads)\r\n    360 \r\n\r\nRuntimeError: The size of tensor a (512) must match the size of tensor b (2048) at non-singleton dimension 1\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1479/reactions",
    "total_count": 9,
    "+1": 8,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 1
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1479/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
