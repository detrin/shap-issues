{
  "url": "https://api.github.com/repos/shap/shap/issues/2530",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/2530/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/2530/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/2530/events",
  "html_url": "https://github.com/shap/shap/issues/2530",
  "id": 1222926252,
  "node_id": "I_kwDOBHDcK85I5F-s",
  "number": 2530,
  "title": "Shap KernelExplainer doesn't work with AutoSklearn fitted to pandasDataFrame with categorical values",
  "user": {
    "login": "Unn20",
    "id": 21336985,
    "node_id": "MDQ6VXNlcjIxMzM2OTg1",
    "avatar_url": "https://avatars.githubusercontent.com/u/21336985?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Unn20",
    "html_url": "https://github.com/Unn20",
    "followers_url": "https://api.github.com/users/Unn20/followers",
    "following_url": "https://api.github.com/users/Unn20/following{/other_user}",
    "gists_url": "https://api.github.com/users/Unn20/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Unn20/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Unn20/subscriptions",
    "organizations_url": "https://api.github.com/users/Unn20/orgs",
    "repos_url": "https://api.github.com/users/Unn20/repos",
    "events_url": "https://api.github.com/users/Unn20/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Unn20/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-05-02T14:00:39Z",
  "updated_at": "2022-05-02T14:00:39Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hello.\r\n\r\nI've got a problem:\r\nAutosklearn can be fitted to pandas DataFrame, which can have columns with type 'category':\r\n`data[cat_features] = data[cat_features].apply(lambda x: x.astype('category'))`\r\nIt uses implicitly Encoding algorithms like LabelEncoder and OrdinalEncoder\r\n\r\nIt works similar, when u call **predict** method like:\r\n`autosklearn_model.predict(X_test)`\r\nwhere X_test is pandas DataFrame\r\n\r\nHowever, when you want to use shap KernelExplainer:\r\n`shap_values = shap.KernelExplainer(autosklearn_model.predict, X_test)`\r\nshap explainer implicitly turns X_test to numpy array, which then leads to error:\r\n\r\n```\r\nProvided model function fails when applied to the provided data set.\r\n\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nInput In [47], in <cell line: 4>()\r\n      1 # TODO: https://shap.readthedocs.io/en/latest/index.html\r\n      2 \r\n      3 # shap_values = shap.KernelExplainer(tuned_model.predict, X_test_processed)\r\n----> 4 shap_values = shap.KernelExplainer(tuned_model.predict, X_test.iloc[:, 2:])\r\n\r\nFile ~/python-venvs/shap-values/lib/python3.8/site-packages/shap/explainers/_kernel.py:69, in Kernel.__init__(self, model, data, link, **kwargs)\r\n     67 self.keep_index_ordered = kwargs.get(\"keep_index_ordered\", False)\r\n     68 self.data = convert_to_data(data, keep_index=self.keep_index)\r\n---> 69 model_null = match_model_to_data(self.model, self.data)\r\n     71 # enforce our current input type limitations\r\n     72 assert isinstance(self.data, DenseData) or isinstance(self.data, SparseData), \\\r\n     73        \"Shap explainer only supports the DenseData and SparseData input currently.\"\r\n\r\nFile ~/python-venvs/shap-values/lib/python3.8/site-packages/shap/utils/_legacy.py:112, in match_model_to_data(model, data)\r\n    110         out_val = model.f(data.convert_to_df())\r\n    111     else:\r\n--> 112         out_val = model.f(data.data)\r\n    113 except:\r\n    114     print(\"Provided model function fails when applied to the provided data set.\")\r\n\r\nFile ~/python-venvs/shap-values/lib/python3.8/site-packages/autosklearn/estimators.py:1074, in AutoSklearnClassifier.predict(self, X, batch_size, n_jobs)\r\n   1061 def predict(self, X, batch_size=None, n_jobs=1):\r\n   1062     \"\"\"Predict classes for X.\r\n   1063 \r\n   1064     Parameters\r\n   (...)\r\n   1072 \r\n   1073     \"\"\"\r\n-> 1074     return super().predict(X, batch_size=batch_size, n_jobs=n_jobs)\r\n\r\nFile ~/python-venvs/shap-values/lib/python3.8/site-packages/autosklearn/estimators.py:530, in AutoSklearnEstimator.predict(self, X, batch_size, n_jobs)\r\n    529 def predict(self, X, batch_size=None, n_jobs=1):\r\n--> 530     return self.automl_.predict(X, batch_size=batch_size, n_jobs=n_jobs)\r\n\r\nFile ~/python-venvs/shap-values/lib/python3.8/site-packages/autosklearn/automl.py:2089, in AutoMLClassifier.predict(self, X, batch_size, n_jobs)\r\n   2088 def predict(self, X, batch_size=None, n_jobs=1):\r\n-> 2089     predicted_probabilities = super().predict(X, batch_size=batch_size,\r\n   2090                                               n_jobs=n_jobs)\r\n   2092     if self.InputValidator is None or not self.InputValidator._is_fitted:\r\n   2093         raise ValueError(\"predict() is only supported after calling fit. Kindly call first \"\r\n   2094                          \"the estimator fit() method.\")\r\n\r\nFile ~/python-venvs/shap-values/lib/python3.8/site-packages/autosklearn/automl.py:1404, in AutoML.predict(self, X, batch_size, n_jobs)\r\n   1401 if self.InputValidator is None or not self.InputValidator._is_fitted:\r\n   1402     raise ValueError(\"predict() can only be called after performing fit(). Kindly call \"\r\n   1403                      \"the estimator fit() method first.\")\r\n-> 1404 X = self.InputValidator.feature_validator.transform(X)\r\n   1406 # Parallelize predictions across models with n_jobs processes.\r\n   1407 # Each process computes predictions in chunks of batch_size rows.\r\n   1408 try:\r\n\r\nFile ~/python-venvs/shap-values/lib/python3.8/site-packages/autosklearn/data/feature_validator.py:177, in FeatureValidator.transform(self, X)\r\n    174     X, _ = self.list_to_dataframe(X)\r\n    176 # Check the data here so we catch problems on new test data\r\n--> 177 self._check_data(X)\r\n    179 # Sparse related transformations\r\n    180 # Not all sparse format support index sorting\r\n    181 if scipy.sparse.issparse(X):\r\n\r\nFile ~/python-venvs/shap-values/lib/python3.8/site-packages/autosklearn/data/feature_validator.py:233, in FeatureValidator._check_data(self, X)\r\n    231 if hasattr(X, \"dtype\"):\r\n    232     if not np.issubdtype(X.dtype.type, np.number):  # type: ignore[union-attr]\r\n--> 233         raise ValueError(\r\n    234             \"When providing a numpy array to Auto-sklearn, the only valid \"\r\n    235             \"dtypes are numerical ones. The provided data type {} is not supported.\"\r\n    236             \"\".format(\r\n    237                 X.dtype.type,  # type: ignore[union-attr]\r\n    238             )\r\n    239         )\r\n    241 # Then for Pandas, we do not support Nan in categorical columns\r\n    242 if hasattr(X, \"iloc\"):\r\n    243     # If entered here, we have a pandas dataframe\r\n\r\nValueError: When providing a numpy array to Auto-sklearn, the only valid dtypes are numerical ones. The provided data type <class 'numpy.object_'> is not supported.\r\n```\r\n\r\nLibraries versions:\r\n**auto-sklearn==0.14.6\r\nshap==0.40.0**",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/2530/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/2530/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
