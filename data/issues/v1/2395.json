{
  "url": "https://api.github.com/repos/shap/shap/issues/2395",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/2395/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/2395/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/2395/events",
  "html_url": "https://github.com/shap/shap/issues/2395",
  "id": 1139163321,
  "node_id": "I_kwDOBHDcK85D5kC5",
  "number": 2395,
  "title": "Interpretation of Bias value from TreeShap from weighted xgboost model R",
  "user": {
    "login": "kransom14",
    "id": 18158438,
    "node_id": "MDQ6VXNlcjE4MTU4NDM4",
    "avatar_url": "https://avatars.githubusercontent.com/u/18158438?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kransom14",
    "html_url": "https://github.com/kransom14",
    "followers_url": "https://api.github.com/users/kransom14/followers",
    "following_url": "https://api.github.com/users/kransom14/following{/other_user}",
    "gists_url": "https://api.github.com/users/kransom14/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kransom14/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kransom14/subscriptions",
    "organizations_url": "https://api.github.com/users/kransom14/orgs",
    "repos_url": "https://api.github.com/users/kransom14/repos",
    "events_url": "https://api.github.com/users/kransom14/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kransom14/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2022-02-15T20:07:26Z",
  "updated_at": "2022-03-09T22:53:58Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi @slundberg \r\n\r\nI am using weights in an xgboost regression (standard squared loss function). I've noticed that the mean prediction for the training data does not equal the Bias value calculated by TreeShap for the model when the response variable is weighted (but if I do not use weights the values are equal). How to interpret the Bias value for this type of weighted model? Are the shap values still reliable? Below is an example. Note that the bias and mean prediction in the below example are nearly equal, but in my application, the values are highly different. \r\n\r\n```\r\nlibrary(xgboost)\r\n\r\ndata(iris)\r\n\r\ntrain_label <- iris$Sepal.Length\r\ntrain_data <- iris[,c(2:4)]\r\ntrain_m <- as.matrix(train_data)\r\n\r\nwts <- c(0.231725156, 0.354273502, 0.486227495, 0.553066575, 0.291290616, 0.084193466, 0.553066575, 0.291290616,\r\n0.683138835, 0.354273502, 0.084193466, 0.419607799, 0.419607799, 0.744239987, 0.000000000, 0.005795098,\r\n0.084193466, 0.231725156, 0.005795098, 0.231725156, 0.084193466, 0.231725156, 0.553066575, 0.231725156,\r\n0.419607799, 0.291290616, 0.291290616, 0.176643136, 0.176643136, 0.486227495, 0.419607799, 0.084193466,\r\n0.176643136, 0.048957845, 0.354273502, 0.291290616, 0.048957845, 0.354273502, 0.683138835, 0.231725156,\r\n0.291290616, 0.619059026, 0.683138835, 0.291290616, 0.231725156, 0.419607799, 0.231725156, 0.553066575,\r\n0.127110568, 0.291290616, 0.366555724, 0.108877671, 0.317665516, 0.048957845, 0.144283968, 0.005795098,\r\n0.077604718, 0.354273502, 0.183344754, 0.176643136, 0.291290616, 0.003423425, 0.013374463, 0.029374260,\r\n0.022469718, 0.225581177, 0.022469718, 0.000000000, 0.050943963, 0.022469718, 0.003423425, 0.029374260,\r\n0.077604718, 0.029374260, 0.108877671, 0.183344754, 0.270514383, 0.225581177, 0.013374463, 0.005795098,\r\n0.048957845, 0.048957845, 0.000000000, 0.013374463, 0.084193466, 0.013374463, 0.225581177, 0.077604718,\r\n0.022469718, 0.048957845, 0.048957845, 0.029374260, 0.000000000, 0.291290616, 0.022469718, 0.005795098,\r\n0.005795098, 0.050943963, 0.231725156, 0.005795098, 0.077604718, 0.000000000, 0.416706153, 0.077604718,\r\n0.144283968, 0.669601720, 0.354273502, 0.518872257, 0.225581177, 0.467637949, 0.144283968, 0.108877671,\r\n0.270514383, 0.005795098, 0.000000000, 0.108877671, 0.144283968, 0.717257541, 0.717257541, 0.013374463,\r\n0.317665516, 0.022469718, 0.717257541, 0.077604718, 0.225581177, 0.467637949, 0.050943963, 0.029374260,\r\n0.108877671, 0.467637949, 0.569930224, 0.805815059, 0.108877671, 0.077604718, 0.029374260, 0.717257541,\r\n0.077604718, 0.108877671, 0.013374463, 0.317665516, 0.225581177, 0.317665516, 0.000000000, 0.270514383,\r\n0.225581177, 0.225581177, 0.077604718, 0.144283968, 0.050943963, 0.003423425)\r\n\r\ntrain.d <- xgb.DMatrix(train_m, label = train_label, weight = wts)\r\ntrain.d2 <- xgb.DMatrix(train_m, label = train_label)\r\n\r\nxgb_mod <- xgb.train(data = train.d, nrounds = 50)\r\nxgb_mod2 <- xgb.train(data = train.d2, nrounds = 50)\r\n\r\n# get the shap for training wells for weighted model\r\ns <- predict(xgb_mod, train_m, predcontrib = TRUE, approxcontrib = FALSE)\r\ntot_shap <- rowSums(s) # includes bias column\r\n\r\ns2 <- predict(xgb_mod2, train_m, predcontrib = TRUE, approxcontrib = FALSE)\r\ntot_shap2 <- rowSums(s2) # includes bias column\r\n\r\n# get the training data predictions\r\np <- predict(xgb_mod, train_m)\r\np2 <- predict(xgb_mod2, train_m)\r\n\r\n# check that total shap equals the prediction\r\nplot(p, tot_shap) # prediction is equal to total shap\r\nabline(0,1)\r\n\r\nmean(p) # mean training data prediction is lower than bias for shap from weighted model\r\ns[1,4] #shap bias\r\n\r\n# check that total shap equals the prediction\r\nplot(p2, tot_shap2) # prediction is equal to total shap\r\nabline(0,1)\r\n\r\nmean(p2) # mean training data prediction is equal to shap from non-weighted model\r\ns2[1,4] #shap bias\r\n```",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/2395/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/2395/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
