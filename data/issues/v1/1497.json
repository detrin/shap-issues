{
  "url": "https://api.github.com/repos/shap/shap/issues/1497",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1497/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1497/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1497/events",
  "html_url": "https://github.com/shap/shap/issues/1497",
  "id": 714991153,
  "node_id": "MDU6SXNzdWU3MTQ5OTExNTM=",
  "number": 1497,
  "title": "TypeError: unsupported operand type(s) for -: 'str' and 'str' ",
  "user": {
    "login": "Shameendra",
    "id": 12817007,
    "node_id": "MDQ6VXNlcjEyODE3MDA3",
    "avatar_url": "https://avatars.githubusercontent.com/u/12817007?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Shameendra",
    "html_url": "https://github.com/Shameendra",
    "followers_url": "https://api.github.com/users/Shameendra/followers",
    "following_url": "https://api.github.com/users/Shameendra/following{/other_user}",
    "gists_url": "https://api.github.com/users/Shameendra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Shameendra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Shameendra/subscriptions",
    "organizations_url": "https://api.github.com/users/Shameendra/orgs",
    "repos_url": "https://api.github.com/users/Shameendra/repos",
    "events_url": "https://api.github.com/users/Shameendra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Shameendra/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "closed",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2020-10-05T16:32:51Z",
  "updated_at": "2020-10-13T14:27:45Z",
  "closed_at": "2020-10-13T14:27:45Z",
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "Hi i get this error while i try to calculate the SHAP values:\r\n`TypeError: unsupported operand type(s) for -: 'str' and 'str'`\r\n\r\ni get this after this command:\r\n\r\n`\r\nexplainer = shap.DeepExplainer(model,X_train_enc_n)\r\nshap_values = explainer.explainer.shap_values(X_test_enc_n[:1],check_additivity=False)`\r\n\r\n\r\nI am using a Functional keras API with lamda slicing layers. The neural network looks like this :\r\n\r\n     input_models=[]\r\n     output_embeddings=[]\r\n     numerics = ['int16', 'int32', 'int64', 'float16', 'float32', 'float64']\r\n\r\n    inputs = Input(shape=(X_train.shape[1],), name = \"MAIN_INPUT\")  #Main input layer\r\n    count_numeric_in_X = X_train.select_dtypes(include=numerics).shape[1]  # Number of mumeric columns in train dataset\r\n\r\n    count_of_emb = 0  # count of entity embeddings\r\n\r\n    for categorical_var in X_train.select_dtypes(include=['object']):\r\n        #Name of the categorical variable that will be used in the Keras Embedding layer\r\n        cat_emb_name= categorical_var.replace(\" \", \"\")+'_Embedding'\r\n  \r\n        # Define the embedding_size\r\n        no_of_unique_cat  = X_train[categorical_var].nunique()\r\n        embedding_size = int(min(np.ceil((no_of_unique_cat)/2), 100 ))\r\n  \r\n        #One Embedding Layer for each categorical variable    \r\n        input_model = Input(shape=(1,))\r\n        x2 = Lambda(lambda x: slice(x, (0, count_of_emb), (-1, 1)),\r\n                    name = 'SPLIT_DEEP_EMB_{}'.format(categorical_var))(inputs) # embedding (13)\r\n   \r\n\r\n        count_of_emb += 1\r\n        output_model  = Embedding(no_of_unique_cat, embedding_size, name=cat_emb_name)(x2)\r\n        output_model = Reshape(target_shape=(embedding_size,))(output_model)\r\n    \r\n        #Appending all the categorical inputs\r\n        input_models.append(input_model)\r\n      \r\n        #Appending all the embeddings\r\n        output_embeddings.append(output_model)\r\n\r\n    #Other non-categorical data columns (numerical). \r\n    #I define single another network for the other columns and add them to our models list.\r\n    input_numeric = Input(shape=(len(X_train.select_dtypes(include=numerics).columns.tolist()),))\r\n    x1 = Lambda(lambda x: slice(x, (0, 13), (-1, count_numeric_in_X)))(inputs) # deep continuous variables (21)\r\n\r\n    #embedding_numeric = Dense(X_train.shape[1])(input_numeric)\r\n    input_models.append(input_numeric)\r\n    output_embeddings.append(x1)\r\n\r\n    #At the end we concatenate altogther and add other Dense layers\r\n    #input_models = Concatenate([input_model,input_numeric])\r\n    output = Concatenate()(output_embeddings)\r\n    output = Dense(174, kernel_initializer=\"uniform\")(output)\r\n    output = PReLU(alpha_initializer=Constant(value=0.25))(output)\r\n    #output = Activation('relu')(output)\r\n    output= Dropout(0.4)(output)\r\n    output = Dense(int((174+y_train.shape[1])/2), kernel_initializer=\"uniform\")(output)\r\n    output = PReLU(alpha_initializer=Constant(value=0.25))(output)\r\n    #output = Activation('relu')(output)\r\n    output= Dropout(0.3)(output)\r\n    output = Dense(y_train.shape[1], activation='sigmoid')(output)\r\n    model= Model(inputs=inputs, outputs=output)\r\n\r\n    lr = 0.01\r\n    sgd = keras.optimizers.SGD(lr=lr, decay=1e-6, momentum=0.9, nesterov=True)\r\n    #for sigmoid function\r\n    model.compile(loss='binary_crossentropy',  optimizer=sgd , metrics=['accuracy'])\r\n\r\n\r\n\r\n\r\n\r\n",
  "closed_by": {
    "login": "Shameendra",
    "id": 12817007,
    "node_id": "MDQ6VXNlcjEyODE3MDA3",
    "avatar_url": "https://avatars.githubusercontent.com/u/12817007?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/Shameendra",
    "html_url": "https://github.com/Shameendra",
    "followers_url": "https://api.github.com/users/Shameendra/followers",
    "following_url": "https://api.github.com/users/Shameendra/following{/other_user}",
    "gists_url": "https://api.github.com/users/Shameendra/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/Shameendra/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/Shameendra/subscriptions",
    "organizations_url": "https://api.github.com/users/Shameendra/orgs",
    "repos_url": "https://api.github.com/users/Shameendra/repos",
    "events_url": "https://api.github.com/users/Shameendra/events{/privacy}",
    "received_events_url": "https://api.github.com/users/Shameendra/received_events",
    "type": "User",
    "site_admin": false
  },
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1497/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1497/timeline",
  "performed_via_github_app": null,
  "state_reason": "completed"
}
