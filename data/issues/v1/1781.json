{
  "url": "https://api.github.com/repos/shap/shap/issues/1781",
  "repository_url": "https://api.github.com/repos/shap/shap",
  "labels_url": "https://api.github.com/repos/shap/shap/issues/1781/labels{/name}",
  "comments_url": "https://api.github.com/repos/shap/shap/issues/1781/comments",
  "events_url": "https://api.github.com/repos/shap/shap/issues/1781/events",
  "html_url": "https://github.com/shap/shap/issues/1781",
  "id": 794118763,
  "node_id": "MDU6SXNzdWU3OTQxMTg3NjM=",
  "number": 1781,
  "title": "'tensorflow.python.framework.ops.EagerTensor' object has no attribute 'T'",
  "user": {
    "login": "kosinal",
    "id": 20729875,
    "node_id": "MDQ6VXNlcjIwNzI5ODc1",
    "avatar_url": "https://avatars.githubusercontent.com/u/20729875?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/kosinal",
    "html_url": "https://github.com/kosinal",
    "followers_url": "https://api.github.com/users/kosinal/followers",
    "following_url": "https://api.github.com/users/kosinal/following{/other_user}",
    "gists_url": "https://api.github.com/users/kosinal/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/kosinal/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/kosinal/subscriptions",
    "organizations_url": "https://api.github.com/users/kosinal/orgs",
    "repos_url": "https://api.github.com/users/kosinal/repos",
    "events_url": "https://api.github.com/users/kosinal/events{/privacy}",
    "received_events_url": "https://api.github.com/users/kosinal/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 1,
  "created_at": "2021-01-26T10:32:52Z",
  "updated_at": "2021-01-26T10:38:02Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "I am using shap.KernelExplainer for explaining the model created in Keras and I have problems with explain.\r\n\r\nTF version: 2.3.1\r\nShap version: 0.37\r\n\r\nCode:\r\n```\r\ninput_layer = tf.keras.layers.Input(shape=(X_train.shape[1],))\r\nstart_layer_size = 80\r\ndropout_rate = 0.05\r\ndense_layers_neurons = [start_layer_size, start_layer_size//2, start_layer_size//4]\r\nx = input_layer\r\nfor dense_layers_neuron in dense_layers_neurons:\r\n    d_x = tf.keras.layers.Dense(dense_layers_neuron, activation=\"relu\")(x)\r\n    x = tf.keras.layers.Dropout(dropout_rate)(d_x)\r\noutput_layer = tf.keras.layers.Dense(Y_train.shape[1], activation=\"softmax\")(d_x)\r\nmodel = tf.keras.Model(input_layer, output_layer)\r\nmodel.compile(optimizer=tf.keras.optimizers.Adam(), loss=\"mse\")\r\n.\r\n.\r\n.\r\ndeep_explainer = shap.KernelExplainer(model, X_train.values)\r\ncheck_idx = 2\r\nexplain_data_set = np.reshape(X_train.values[check_idx,:], (1,-1))\r\ndeep_shap_values = deep_explainer.shap_values(explain_data_set, nsamples=500)\r\nshap.force_plot(\r\n    deep_explainer.expected_value[0], \r\n    deep_shap_values[0],\r\n    explain_data_set\r\n)\r\n```\r\n\r\nDuring the SHAP explanation, I found problem in shap/explainers/_kernel.py __init__ method.\r\n[Original code](https://github.com/slundberg/shap/blob/master/shap/explainers/_kernel.py#L88):\r\n```\r\nclass Kernel(Explainer):\r\n   def __init__():\r\n        .\r\n        .\r\n        .\r\n        # find E_x[f(x)]\r\n        if isinstance(model_null, (pd.DataFrame, pd.Series)):\r\n            model_null = np.squeeze(model_null.values)\r\n        self.fnull = np.sum((model_null.T * self.data.weights).T, 0)\r\n        self.expected_value = self.linkfv(self.fnull)\r\n```\r\n\r\nProblem is, that model_null is EagerTensor from tensorflow, which is missing transpose method.\r\n\r\nI have a proposition for the fix:\r\nFix code code:\r\n```\r\nimport tensorflow as tf\r\n\r\nclass Kernel(Explainer):\r\n   def __init__():\r\n        .\r\n        .\r\n        .\r\n        # find E_x[f(x)]\r\n        if isinstance(model_null, (pd.DataFrame, pd.Series)):\r\n            model_null = np.squeeze(model_null.values)\r\n        if isinstance(model_null, tf.python.framework.ops.EagerTensor):\r\n            model_null = model_null.numpy()\r\n        self.fnull = np.sum((model_null.T * self.data.weights).T, 0)\r\n        self.expected_value = self.linkfv(self.fnull)\r\n```\r\n\r\nThis solves the issue by getting the numpy values from EagerTensor as expected by the code and the calculation can continue.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/shap/shap/issues/1781/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/shap/shap/issues/1781/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
